/* Copyright (c) 2020 The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials provided
 *       with the distribution.
 *     * Neither the name of The Linux Foundation nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
 * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LocationApiMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LocationApiMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PBLocAPINmeaSerializedPayloadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPINmeaSerializedPayload> {
} _PBLocAPINmeaSerializedPayload_default_instance_;
class PBLocAPIBatchNotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIBatchNotification> {
} _PBLocAPIBatchNotification_default_instance_;
class PBLocAPIGeofenceBreachNotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIGeofenceBreachNotification> {
} _PBLocAPIGeofenceBreachNotification_default_instance_;
class PBGeofenceOptionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBGeofenceOption> {
} _PBGeofenceOption_default_instance_;
class PBGeofenceInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBGeofenceInfo> {
} _PBGeofenceInfo_default_instance_;
class PBGeofencePayloadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBGeofencePayload> {
} _PBGeofencePayload_default_instance_;
class PBGeofencesAddedReqPayloadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBGeofencesAddedReqPayload> {
} _PBGeofencesAddedReqPayload_default_instance_;
class PBGeofencesReqClientIdPayloadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBGeofencesReqClientIdPayload> {
} _PBGeofencesReqClientIdPayload_default_instance_;
class PBGeofenceResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBGeofenceResponse> {
} _PBGeofenceResponse_default_instance_;
class PBCollectiveResPayloadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBCollectiveResPayload> {
} _PBCollectiveResPayload_default_instance_;
class PBLocAPIClientRegisterReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIClientRegisterReqMsg> {
} _PBLocAPIClientRegisterReqMsg_default_instance_;
class PBLocAPICapabilitiesIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPICapabilitiesIndMsg> {
} _PBLocAPICapabilitiesIndMsg_default_instance_;
class PBLocAPIGenericRespMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIGenericRespMsg> {
} _PBLocAPIGenericRespMsg_default_instance_;
class PBLocAPICollectiveRespMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPICollectiveRespMsg> {
} _PBLocAPICollectiveRespMsg_default_instance_;
class PBLocAPIStartTrackingReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIStartTrackingReqMsg> {
} _PBLocAPIStartTrackingReqMsg_default_instance_;
class PBLocAPIUpdateCallbacksReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIUpdateCallbacksReqMsg> {
} _PBLocAPIUpdateCallbacksReqMsg_default_instance_;
class PBLocAPIUpdateTrackingOptionsReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIUpdateTrackingOptionsReqMsg> {
} _PBLocAPIUpdateTrackingOptionsReqMsg_default_instance_;
class PBLocAPIStartBatchingReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIStartBatchingReqMsg> {
} _PBLocAPIStartBatchingReqMsg_default_instance_;
class PBLocAPIUpdateBatchingOptionsReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIUpdateBatchingOptionsReqMsg> {
} _PBLocAPIUpdateBatchingOptionsReqMsg_default_instance_;
class PBLocAPIAddGeofencesReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIAddGeofencesReqMsg> {
} _PBLocAPIAddGeofencesReqMsg_default_instance_;
class PBLocAPIRemoveGeofencesReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIRemoveGeofencesReqMsg> {
} _PBLocAPIRemoveGeofencesReqMsg_default_instance_;
class PBLocAPIModifyGeofencesReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIModifyGeofencesReqMsg> {
} _PBLocAPIModifyGeofencesReqMsg_default_instance_;
class PBLocAPIPauseGeofencesReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIPauseGeofencesReqMsg> {
} _PBLocAPIPauseGeofencesReqMsg_default_instance_;
class PBLocAPIResumeGeofencesReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIResumeGeofencesReqMsg> {
} _PBLocAPIResumeGeofencesReqMsg_default_instance_;
class PBLocAPIUpdateNetworkAvailabilityReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIUpdateNetworkAvailabilityReqMsg> {
} _PBLocAPIUpdateNetworkAvailabilityReqMsg_default_instance_;
class PBLocAPILocationIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPILocationIndMsg> {
} _PBLocAPILocationIndMsg_default_instance_;
class PBLocAPIBatchingIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIBatchingIndMsg> {
} _PBLocAPIBatchingIndMsg_default_instance_;
class PBLocAPIGeofenceBreachIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIGeofenceBreachIndMsg> {
} _PBLocAPIGeofenceBreachIndMsg_default_instance_;
class PBLocAPILocationInfoIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPILocationInfoIndMsg> {
} _PBLocAPILocationInfoIndMsg_default_instance_;
class PBLocAPIEngineLocationsInfoIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIEngineLocationsInfoIndMsg> {
} _PBLocAPIEngineLocationsInfoIndMsg_default_instance_;
class PBLocAPISatelliteVehicleIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPISatelliteVehicleIndMsg> {
} _PBLocAPISatelliteVehicleIndMsg_default_instance_;
class PBLocAPINmeaIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPINmeaIndMsg> {
} _PBLocAPINmeaIndMsg_default_instance_;
class PBLocAPIDataIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIDataIndMsg> {
} _PBLocAPIDataIndMsg_default_instance_;
class PBLocAPIMeasIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIMeasIndMsg> {
} _PBLocAPIMeasIndMsg_default_instance_;
class PBLocAPIGnssEnergyConsumedIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIGnssEnergyConsumedIndMsg> {
} _PBLocAPIGnssEnergyConsumedIndMsg_default_instance_;
class PBLocAPILocationSystemInfoIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPILocationSystemInfoIndMsg> {
} _PBLocAPILocationSystemInfoIndMsg_default_instance_;
class PBLocConfigConstrainedTuncReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigConstrainedTuncReqMsg> {
} _PBLocConfigConstrainedTuncReqMsg_default_instance_;
class PBLocConfigPositionAssistedClockEstimatorReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigPositionAssistedClockEstimatorReqMsg> {
} _PBLocConfigPositionAssistedClockEstimatorReqMsg_default_instance_;
class PBLocConfigSvConstellationReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigSvConstellationReqMsg> {
} _PBLocConfigSvConstellationReqMsg_default_instance_;
class PBLocConfigConstellationSecondaryBandReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigConstellationSecondaryBandReqMsg> {
} _PBLocConfigConstellationSecondaryBandReqMsg_default_instance_;
class PBLocConfigAidingDataDeletionReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigAidingDataDeletionReqMsg> {
} _PBLocConfigAidingDataDeletionReqMsg_default_instance_;
class PBLocConfigLeverArmReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigLeverArmReqMsg> {
} _PBLocConfigLeverArmReqMsg_default_instance_;
class PBLocConfigRobustLocationReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigRobustLocationReqMsg> {
} _PBLocConfigRobustLocationReqMsg_default_instance_;
class PBLocConfigMinGpsWeekReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigMinGpsWeekReqMsg> {
} _PBLocConfigMinGpsWeekReqMsg_default_instance_;
class PBLocConfigDrEngineParamsReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigDrEngineParamsReqMsg> {
} _PBLocConfigDrEngineParamsReqMsg_default_instance_;
class PBLocConfigMinSvElevationReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigMinSvElevationReqMsg> {
} _PBLocConfigMinSvElevationReqMsg_default_instance_;
class PBLocConfigGetConstltnSecondaryBandConfigRespMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigGetConstltnSecondaryBandConfigRespMsg> {
} _PBLocConfigGetConstltnSecondaryBandConfigRespMsg_default_instance_;
class PBLocConfigGetRobustLocationConfigRespMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigGetRobustLocationConfigRespMsg> {
} _PBLocConfigGetRobustLocationConfigRespMsg_default_instance_;
class PBLocConfigGetMinGpsWeekRespMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigGetMinGpsWeekRespMsg> {
} _PBLocConfigGetMinGpsWeekRespMsg_default_instance_;
class PBLocConfigGetMinSvElevationRespMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocConfigGetMinSvElevationRespMsg> {
} _PBLocConfigGetMinSvElevationRespMsg_default_instance_;
class PBLocAPIPingTestReqMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIPingTestReqMsg> {
} _PBLocAPIPingTestReqMsg_default_instance_;
class PBLocAPIPingTestIndMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIPingTestIndMsg> {
} _PBLocAPIPingTestIndMsg_default_instance_;
class PBLocAPIMsgHeaderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocAPIMsgHeader> {
} _PBLocAPIMsgHeader_default_instance_;

namespace protobuf_LocationApiMsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[53];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPINmeaSerializedPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPINmeaSerializedPayload, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPINmeaSerializedPayload, nmea_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIBatchNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIBatchNotification, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIBatchNotification, location_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGeofenceBreachNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGeofenceBreachNotification, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGeofenceBreachNotification, breachtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGeofenceBreachNotification, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGeofenceBreachNotification, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceOption, breachtypemask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceOption, responsiveness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceOption, dwelltime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceInfo, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceInfo, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceInfo, radius_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofencePayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofencePayload, gfclientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofencePayload, gfoption_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofencePayload, gfinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofencesAddedReqPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofencesAddedReqPayload, gfpayload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofencesReqClientIdPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofencesReqClientIdPayload, gfids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceResponse, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGeofenceResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCollectiveResPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBCollectiveResPayload, resp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIClientRegisterReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIClientRegisterReqMsg, mclienttype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPICapabilitiesIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPICapabilitiesIndMsg, capabilitiesmask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGenericRespMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGenericRespMsg, err_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPICollectiveRespMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPICollectiveRespMsg, collectiveres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIStartTrackingReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIStartTrackingReqMsg, locoptions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateCallbacksReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateCallbacksReqMsg, locationcallbacks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateTrackingOptionsReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateTrackingOptionsReqMsg, locoptions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIStartBatchingReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIStartBatchingReqMsg, intervalinms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIStartBatchingReqMsg, distanceinmeters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIStartBatchingReqMsg, batchingmode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateBatchingOptionsReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateBatchingOptionsReqMsg, intervalinms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateBatchingOptionsReqMsg, distanceinmeters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateBatchingOptionsReqMsg, batchingmode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIAddGeofencesReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIAddGeofencesReqMsg, geofences_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIRemoveGeofencesReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIRemoveGeofencesReqMsg, gfclientids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIModifyGeofencesReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIModifyGeofencesReqMsg, geofences_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIPauseGeofencesReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIPauseGeofencesReqMsg, gfclientids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIResumeGeofencesReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIResumeGeofencesReqMsg, gfclientids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateNetworkAvailabilityReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIUpdateNetworkAvailabilityReqMsg, mavailability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPILocationIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPILocationIndMsg, locationnotification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIBatchingIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIBatchingIndMsg, batchnotification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGeofenceBreachIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGeofenceBreachIndMsg, gfbreachnotification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPILocationInfoIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPILocationInfoIndMsg, gnsslocationinfonotification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIEngineLocationsInfoIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIEngineLocationsInfoIndMsg, enginelocationsinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPISatelliteVehicleIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPISatelliteVehicleIndMsg, gnsssvnotification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPINmeaIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPINmeaIndMsg, gnssnmeanotification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIDataIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIDataIndMsg, gnssdatanotification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIMeasIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIMeasIndMsg, gnssmeasurementsnotification_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGnssEnergyConsumedIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIGnssEnergyConsumedIndMsg, totalgnssenergyconsumedsincefirstboot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPILocationSystemInfoIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPILocationSystemInfoIndMsg, locationsysteminfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigConstrainedTuncReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigConstrainedTuncReqMsg, menable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigConstrainedTuncReqMsg, mtuncconstraint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigConstrainedTuncReqMsg, menergybudget_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigPositionAssistedClockEstimatorReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigPositionAssistedClockEstimatorReqMsg, menable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigSvConstellationReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigSvConstellationReqMsg, mconstellationenablementconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigSvConstellationReqMsg, mblacklistsvconfig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigConstellationSecondaryBandReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigConstellationSecondaryBandReqMsg, msecondarybandconfig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigAidingDataDeletionReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigAidingDataDeletionReqMsg, maidingdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigLeverArmReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigLeverArmReqMsg, mleverarmconfiginfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigRobustLocationReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigRobustLocationReqMsg, menable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigRobustLocationReqMsg, menablefore911_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigMinGpsWeekReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigMinGpsWeekReqMsg, mmingpsweek_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigDrEngineParamsReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigDrEngineParamsReqMsg, mdreconfig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigMinSvElevationReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigMinSvElevationReqMsg, mminsvelevation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigGetConstltnSecondaryBandConfigRespMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigGetConstltnSecondaryBandConfigRespMsg, msecondarybandconfig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigGetRobustLocationConfigRespMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigGetRobustLocationConfigRespMsg, mrobustloationconfig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigGetMinGpsWeekRespMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigGetMinGpsWeekRespMsg, mmingpsweek_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigGetMinSvElevationRespMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocConfigGetMinSvElevationRespMsg, mminsvelevation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIPingTestReqMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIPingTestReqMsg, numberofping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIPingTestReqMsg, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIPingTestIndMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIPingTestIndMsg, numberofping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIPingTestIndMsg, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIMsgHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIMsgHeader, msocketname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIMsgHeader, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIMsgHeader, msgversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIMsgHeader, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocAPIMsgHeader, payloadsize_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PBLocAPINmeaSerializedPayload)},
  { 7, -1, sizeof(PBLocAPIBatchNotification)},
  { 14, -1, sizeof(PBLocAPIGeofenceBreachNotification)},
  { 23, -1, sizeof(PBGeofenceOption)},
  { 31, -1, sizeof(PBGeofenceInfo)},
  { 39, -1, sizeof(PBGeofencePayload)},
  { 47, -1, sizeof(PBGeofencesAddedReqPayload)},
  { 53, -1, sizeof(PBGeofencesReqClientIdPayload)},
  { 59, -1, sizeof(PBGeofenceResponse)},
  { 66, -1, sizeof(PBCollectiveResPayload)},
  { 72, -1, sizeof(PBLocAPIClientRegisterReqMsg)},
  { 78, -1, sizeof(PBLocAPICapabilitiesIndMsg)},
  { 84, -1, sizeof(PBLocAPIGenericRespMsg)},
  { 90, -1, sizeof(PBLocAPICollectiveRespMsg)},
  { 96, -1, sizeof(PBLocAPIStartTrackingReqMsg)},
  { 102, -1, sizeof(PBLocAPIUpdateCallbacksReqMsg)},
  { 108, -1, sizeof(PBLocAPIUpdateTrackingOptionsReqMsg)},
  { 114, -1, sizeof(PBLocAPIStartBatchingReqMsg)},
  { 122, -1, sizeof(PBLocAPIUpdateBatchingOptionsReqMsg)},
  { 130, -1, sizeof(PBLocAPIAddGeofencesReqMsg)},
  { 136, -1, sizeof(PBLocAPIRemoveGeofencesReqMsg)},
  { 142, -1, sizeof(PBLocAPIModifyGeofencesReqMsg)},
  { 148, -1, sizeof(PBLocAPIPauseGeofencesReqMsg)},
  { 154, -1, sizeof(PBLocAPIResumeGeofencesReqMsg)},
  { 160, -1, sizeof(PBLocAPIUpdateNetworkAvailabilityReqMsg)},
  { 166, -1, sizeof(PBLocAPILocationIndMsg)},
  { 172, -1, sizeof(PBLocAPIBatchingIndMsg)},
  { 178, -1, sizeof(PBLocAPIGeofenceBreachIndMsg)},
  { 184, -1, sizeof(PBLocAPILocationInfoIndMsg)},
  { 190, -1, sizeof(PBLocAPIEngineLocationsInfoIndMsg)},
  { 196, -1, sizeof(PBLocAPISatelliteVehicleIndMsg)},
  { 202, -1, sizeof(PBLocAPINmeaIndMsg)},
  { 208, -1, sizeof(PBLocAPIDataIndMsg)},
  { 214, -1, sizeof(PBLocAPIMeasIndMsg)},
  { 220, -1, sizeof(PBLocAPIGnssEnergyConsumedIndMsg)},
  { 226, -1, sizeof(PBLocAPILocationSystemInfoIndMsg)},
  { 232, -1, sizeof(PBLocConfigConstrainedTuncReqMsg)},
  { 240, -1, sizeof(PBLocConfigPositionAssistedClockEstimatorReqMsg)},
  { 246, -1, sizeof(PBLocConfigSvConstellationReqMsg)},
  { 253, -1, sizeof(PBLocConfigConstellationSecondaryBandReqMsg)},
  { 259, -1, sizeof(PBLocConfigAidingDataDeletionReqMsg)},
  { 265, -1, sizeof(PBLocConfigLeverArmReqMsg)},
  { 271, -1, sizeof(PBLocConfigRobustLocationReqMsg)},
  { 278, -1, sizeof(PBLocConfigMinGpsWeekReqMsg)},
  { 284, -1, sizeof(PBLocConfigDrEngineParamsReqMsg)},
  { 290, -1, sizeof(PBLocConfigMinSvElevationReqMsg)},
  { 296, -1, sizeof(PBLocConfigGetConstltnSecondaryBandConfigRespMsg)},
  { 302, -1, sizeof(PBLocConfigGetRobustLocationConfigRespMsg)},
  { 308, -1, sizeof(PBLocConfigGetMinGpsWeekRespMsg)},
  { 314, -1, sizeof(PBLocConfigGetMinSvElevationRespMsg)},
  { 320, -1, sizeof(PBLocAPIPingTestReqMsg)},
  { 327, -1, sizeof(PBLocAPIPingTestIndMsg)},
  { 334, -1, sizeof(PBLocAPIMsgHeader)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPINmeaSerializedPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIBatchNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIGeofenceBreachNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBGeofenceOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBGeofenceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBGeofencePayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBGeofencesAddedReqPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBGeofencesReqClientIdPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBGeofenceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBCollectiveResPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIClientRegisterReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPICapabilitiesIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIGenericRespMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPICollectiveRespMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIStartTrackingReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIUpdateCallbacksReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIUpdateTrackingOptionsReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIStartBatchingReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIUpdateBatchingOptionsReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIAddGeofencesReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIRemoveGeofencesReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIModifyGeofencesReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIPauseGeofencesReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIResumeGeofencesReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIUpdateNetworkAvailabilityReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPILocationIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIBatchingIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIGeofenceBreachIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPILocationInfoIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIEngineLocationsInfoIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPISatelliteVehicleIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPINmeaIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIDataIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIMeasIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIGnssEnergyConsumedIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPILocationSystemInfoIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigConstrainedTuncReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigPositionAssistedClockEstimatorReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigSvConstellationReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigConstellationSecondaryBandReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigAidingDataDeletionReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigLeverArmReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigRobustLocationReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigMinGpsWeekReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigDrEngineParamsReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigMinSvElevationReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigGetConstltnSecondaryBandConfigRespMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigGetRobustLocationConfigRespMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigGetMinGpsWeekRespMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocConfigGetMinSvElevationRespMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIPingTestReqMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIPingTestIndMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocAPIMsgHeader_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "LocationApiMsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 53);
}

}  // namespace

void TableStruct::Shutdown() {
  _PBLocAPINmeaSerializedPayload_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PBLocAPIBatchNotification_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PBLocAPIGeofenceBreachNotification_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _PBGeofenceOption_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PBGeofenceInfo_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PBGeofencePayload_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _PBGeofencesAddedReqPayload_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _PBGeofencesReqClientIdPayload_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _PBGeofenceResponse_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _PBCollectiveResPayload_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _PBLocAPIClientRegisterReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _PBLocAPICapabilitiesIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _PBLocAPIGenericRespMsg_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _PBLocAPICollectiveRespMsg_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _PBLocAPIStartTrackingReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _PBLocAPIUpdateCallbacksReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _PBLocAPIUpdateTrackingOptionsReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _PBLocAPIStartBatchingReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _PBLocAPIUpdateBatchingOptionsReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _PBLocAPIAddGeofencesReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _PBLocAPIRemoveGeofencesReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _PBLocAPIModifyGeofencesReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _PBLocAPIPauseGeofencesReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _PBLocAPIResumeGeofencesReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _PBLocAPIUpdateNetworkAvailabilityReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _PBLocAPILocationIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _PBLocAPIBatchingIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _PBLocAPIGeofenceBreachIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _PBLocAPILocationInfoIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _PBLocAPIEngineLocationsInfoIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _PBLocAPISatelliteVehicleIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _PBLocAPINmeaIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _PBLocAPIDataIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _PBLocAPIMeasIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _PBLocAPIGnssEnergyConsumedIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _PBLocAPILocationSystemInfoIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _PBLocConfigConstrainedTuncReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _PBLocConfigPositionAssistedClockEstimatorReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _PBLocConfigSvConstellationReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _PBLocConfigConstellationSecondaryBandReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _PBLocConfigAidingDataDeletionReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _PBLocConfigLeverArmReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _PBLocConfigRobustLocationReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _PBLocConfigMinGpsWeekReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _PBLocConfigDrEngineParamsReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _PBLocConfigMinSvElevationReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _PBLocConfigGetConstltnSecondaryBandConfigRespMsg_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _PBLocConfigGetRobustLocationConfigRespMsg_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _PBLocConfigGetMinGpsWeekRespMsg_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _PBLocConfigGetMinSvElevationRespMsg_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _PBLocAPIPingTestReqMsg_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _PBLocAPIPingTestIndMsg_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _PBLocAPIMsgHeader_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_LocationApiDataTypes_2eproto::InitDefaults();
  _PBLocAPINmeaSerializedPayload_default_instance_.DefaultConstruct();
  _PBLocAPIBatchNotification_default_instance_.DefaultConstruct();
  _PBLocAPIGeofenceBreachNotification_default_instance_.DefaultConstruct();
  _PBGeofenceOption_default_instance_.DefaultConstruct();
  _PBGeofenceInfo_default_instance_.DefaultConstruct();
  _PBGeofencePayload_default_instance_.DefaultConstruct();
  _PBGeofencesAddedReqPayload_default_instance_.DefaultConstruct();
  _PBGeofencesReqClientIdPayload_default_instance_.DefaultConstruct();
  _PBGeofenceResponse_default_instance_.DefaultConstruct();
  _PBCollectiveResPayload_default_instance_.DefaultConstruct();
  _PBLocAPIClientRegisterReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPICapabilitiesIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPIGenericRespMsg_default_instance_.DefaultConstruct();
  _PBLocAPICollectiveRespMsg_default_instance_.DefaultConstruct();
  _PBLocAPIStartTrackingReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIUpdateCallbacksReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIUpdateTrackingOptionsReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIStartBatchingReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIUpdateBatchingOptionsReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIAddGeofencesReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIRemoveGeofencesReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIModifyGeofencesReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIPauseGeofencesReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIResumeGeofencesReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIUpdateNetworkAvailabilityReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPILocationIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPIBatchingIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPIGeofenceBreachIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPILocationInfoIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPIEngineLocationsInfoIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPISatelliteVehicleIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPINmeaIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPIDataIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPIMeasIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPIGnssEnergyConsumedIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPILocationSystemInfoIndMsg_default_instance_.DefaultConstruct();
  _PBLocConfigConstrainedTuncReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigPositionAssistedClockEstimatorReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigSvConstellationReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigConstellationSecondaryBandReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigAidingDataDeletionReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigLeverArmReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigRobustLocationReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigMinGpsWeekReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigDrEngineParamsReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigMinSvElevationReqMsg_default_instance_.DefaultConstruct();
  _PBLocConfigGetConstltnSecondaryBandConfigRespMsg_default_instance_.DefaultConstruct();
  _PBLocConfigGetRobustLocationConfigRespMsg_default_instance_.DefaultConstruct();
  _PBLocConfigGetMinGpsWeekRespMsg_default_instance_.DefaultConstruct();
  _PBLocConfigGetMinSvElevationRespMsg_default_instance_.DefaultConstruct();
  _PBLocAPIPingTestReqMsg_default_instance_.DefaultConstruct();
  _PBLocAPIPingTestIndMsg_default_instance_.DefaultConstruct();
  _PBLocAPIMsgHeader_default_instance_.DefaultConstruct();
  _PBLocAPIGeofenceBreachNotification_default_instance_.get_mutable()->location_ = const_cast< ::PBLocation*>(
      ::PBLocation::internal_default_instance());
  _PBGeofencePayload_default_instance_.get_mutable()->gfoption_ = const_cast< ::PBGeofenceOption*>(
      ::PBGeofenceOption::internal_default_instance());
  _PBGeofencePayload_default_instance_.get_mutable()->gfinfo_ = const_cast< ::PBGeofenceInfo*>(
      ::PBGeofenceInfo::internal_default_instance());
  _PBLocAPICollectiveRespMsg_default_instance_.get_mutable()->collectiveres_ = const_cast< ::PBCollectiveResPayload*>(
      ::PBCollectiveResPayload::internal_default_instance());
  _PBLocAPIStartTrackingReqMsg_default_instance_.get_mutable()->locoptions_ = const_cast< ::PBLocationOptions*>(
      ::PBLocationOptions::internal_default_instance());
  _PBLocAPIUpdateTrackingOptionsReqMsg_default_instance_.get_mutable()->locoptions_ = const_cast< ::PBLocationOptions*>(
      ::PBLocationOptions::internal_default_instance());
  _PBLocAPIAddGeofencesReqMsg_default_instance_.get_mutable()->geofences_ = const_cast< ::PBGeofencesAddedReqPayload*>(
      ::PBGeofencesAddedReqPayload::internal_default_instance());
  _PBLocAPIRemoveGeofencesReqMsg_default_instance_.get_mutable()->gfclientids_ = const_cast< ::PBGeofencesReqClientIdPayload*>(
      ::PBGeofencesReqClientIdPayload::internal_default_instance());
  _PBLocAPIModifyGeofencesReqMsg_default_instance_.get_mutable()->geofences_ = const_cast< ::PBGeofencesAddedReqPayload*>(
      ::PBGeofencesAddedReqPayload::internal_default_instance());
  _PBLocAPIPauseGeofencesReqMsg_default_instance_.get_mutable()->gfclientids_ = const_cast< ::PBGeofencesReqClientIdPayload*>(
      ::PBGeofencesReqClientIdPayload::internal_default_instance());
  _PBLocAPIResumeGeofencesReqMsg_default_instance_.get_mutable()->gfclientids_ = const_cast< ::PBGeofencesReqClientIdPayload*>(
      ::PBGeofencesReqClientIdPayload::internal_default_instance());
  _PBLocAPILocationIndMsg_default_instance_.get_mutable()->locationnotification_ = const_cast< ::PBLocation*>(
      ::PBLocation::internal_default_instance());
  _PBLocAPIBatchingIndMsg_default_instance_.get_mutable()->batchnotification_ = const_cast< ::PBLocAPIBatchNotification*>(
      ::PBLocAPIBatchNotification::internal_default_instance());
  _PBLocAPIGeofenceBreachIndMsg_default_instance_.get_mutable()->gfbreachnotification_ = const_cast< ::PBLocAPIGeofenceBreachNotification*>(
      ::PBLocAPIGeofenceBreachNotification::internal_default_instance());
  _PBLocAPILocationInfoIndMsg_default_instance_.get_mutable()->gnsslocationinfonotification_ = const_cast< ::PBGnssLocationInfoNotification*>(
      ::PBGnssLocationInfoNotification::internal_default_instance());
  _PBLocAPISatelliteVehicleIndMsg_default_instance_.get_mutable()->gnsssvnotification_ = const_cast< ::PBLocApiGnssSvNotification*>(
      ::PBLocApiGnssSvNotification::internal_default_instance());
  _PBLocAPINmeaIndMsg_default_instance_.get_mutable()->gnssnmeanotification_ = const_cast< ::PBLocAPINmeaSerializedPayload*>(
      ::PBLocAPINmeaSerializedPayload::internal_default_instance());
  _PBLocAPIDataIndMsg_default_instance_.get_mutable()->gnssdatanotification_ = const_cast< ::PBGnssDataNotification*>(
      ::PBGnssDataNotification::internal_default_instance());
  _PBLocAPIMeasIndMsg_default_instance_.get_mutable()->gnssmeasurementsnotification_ = const_cast< ::PBGnssMeasurementsNotification*>(
      ::PBGnssMeasurementsNotification::internal_default_instance());
  _PBLocAPILocationSystemInfoIndMsg_default_instance_.get_mutable()->locationsysteminfo_ = const_cast< ::PBLocationSystemInfo*>(
      ::PBLocationSystemInfo::internal_default_instance());
  _PBLocConfigSvConstellationReqMsg_default_instance_.get_mutable()->mconstellationenablementconfig_ = const_cast< ::PBGnssSvTypeConfig*>(
      ::PBGnssSvTypeConfig::internal_default_instance());
  _PBLocConfigSvConstellationReqMsg_default_instance_.get_mutable()->mblacklistsvconfig_ = const_cast< ::PBGnssSvIdConfig*>(
      ::PBGnssSvIdConfig::internal_default_instance());
  _PBLocConfigConstellationSecondaryBandReqMsg_default_instance_.get_mutable()->msecondarybandconfig_ = const_cast< ::PBGnssSvTypeConfig*>(
      ::PBGnssSvTypeConfig::internal_default_instance());
  _PBLocConfigAidingDataDeletionReqMsg_default_instance_.get_mutable()->maidingdata_ = const_cast< ::PBAidingData*>(
      ::PBAidingData::internal_default_instance());
  _PBLocConfigLeverArmReqMsg_default_instance_.get_mutable()->mleverarmconfiginfo_ = const_cast< ::PBLIALeverArmConfigInfo*>(
      ::PBLIALeverArmConfigInfo::internal_default_instance());
  _PBLocConfigDrEngineParamsReqMsg_default_instance_.get_mutable()->mdreconfig_ = const_cast< ::PBDeadReckoningEngineConfig*>(
      ::PBDeadReckoningEngineConfig::internal_default_instance());
  _PBLocConfigGetConstltnSecondaryBandConfigRespMsg_default_instance_.get_mutable()->msecondarybandconfig_ = const_cast< ::PBGnssSvTypeConfig*>(
      ::PBGnssSvTypeConfig::internal_default_instance());
  _PBLocConfigGetRobustLocationConfigRespMsg_default_instance_.get_mutable()->mrobustloationconfig_ = const_cast< ::PBGnssConfigRobustLocation*>(
      ::PBGnssConfigRobustLocation::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024LocationApiMsg.proto\032\032LocationApiDataT"
      "ypes.proto\"@\n\035PBLocAPINmeaSerializedPayl"
      "oad\022\021\n\ttimestamp\030\001 \001(\004\022\014\n\004nmea\030\002 \001(\t\"]\n\031"
      "PBLocAPIBatchNotification\022!\n\006status\030\001 \001("
      "\0162\021.PBBatchingStatus\022\035\n\010location\030\002 \003(\0132\013"
      ".PBLocation\"v\n\"PBLocAPIGeofenceBreachNot"
      "ification\022\021\n\ttimestamp\030\001 \001(\004\022\022\n\nbreachty"
      "pe\030\002 \001(\r\022\035\n\010location\030\003 \001(\0132\013.PBLocation\022"
      "\n\n\002id\030\004 \003(\r\"U\n\020PBGeofenceOption\022\026\n\016breac"
      "hTypeMask\030\001 \001(\r\022\026\n\016responsiveness\030\002 \001(\r\022"
      "\021\n\tdwellTime\030\003 \001(\r\"E\n\016PBGeofenceInfo\022\020\n\010"
      "latitude\030\001 \001(\001\022\021\n\tlongitude\030\002 \001(\001\022\016\n\006rad"
      "ius\030\003 \001(\001\"m\n\021PBGeofencePayload\022\022\n\ngfClie"
      "ntId\030\001 \001(\r\022#\n\010gfOption\030\002 \001(\0132\021.PBGeofenc"
      "eOption\022\037\n\006gfInfo\030\003 \001(\0132\017.PBGeofenceInfo"
      "\"C\n\032PBGeofencesAddedReqPayload\022%\n\tgfPayl"
      "oad\030\001 \003(\0132\022.PBGeofencePayload\".\n\035PBGeofe"
      "ncesReqClientIdPayload\022\r\n\005gfIds\030\001 \003(\r\"G\n"
      "\022PBGeofenceResponse\022\020\n\010clientId\030\001 \001(\r\022\037\n"
      "\005error\030\002 \001(\0162\020.PBLocationError\";\n\026PBColl"
      "ectiveResPayload\022!\n\004resp\030\001 \003(\0132\023.PBGeofe"
      "nceResponse\"B\n\034PBLocAPIClientRegisterReq"
      "Msg\022\"\n\013mClientType\030\001 \001(\0162\r.PBClientType\""
      "6\n\032PBLocAPICapabilitiesIndMsg\022\030\n\020capabil"
      "itiesMask\030\001 \001(\r\"7\n\026PBLocAPIGenericRespMs"
      "g\022\035\n\003err\030\001 \001(\0162\020.PBLocationError\"K\n\031PBLo"
      "cAPICollectiveRespMsg\022.\n\rcollectiveRes\030\001"
      " \001(\0132\027.PBCollectiveResPayload\"E\n\033PBLocAP"
      "IStartTrackingReqMsg\022&\n\nlocOptions\030\001 \001(\013"
      "2\022.PBLocationOptions\":\n\035PBLocAPIUpdateCa"
      "llbacksReqMsg\022\031\n\021locationCallbacks\030\001 \001(\r"
      "\"M\n#PBLocAPIUpdateTrackingOptionsReqMsg\022"
      "&\n\nlocOptions\030\001 \001(\0132\022.PBLocationOptions\""
      "t\n\033PBLocAPIStartBatchingReqMsg\022\024\n\014interv"
      "alInMs\030\001 \001(\r\022\030\n\020distanceInMeters\030\002 \001(\r\022%"
      "\n\014batchingMode\030\003 \001(\0162\017.PBBatchingMode\"|\n"
      "#PBLocAPIUpdateBatchingOptionsReqMsg\022\024\n\014"
      "intervalInMs\030\001 \001(\r\022\030\n\020distanceInMeters\030\002"
      " \001(\r\022%\n\014batchingMode\030\003 \001(\0162\017.PBBatchingM"
      "ode\"L\n\032PBLocAPIAddGeofencesReqMsg\022.\n\tgeo"
      "fences\030\001 \001(\0132\033.PBGeofencesAddedReqPayloa"
      "d\"T\n\035PBLocAPIRemoveGeofencesReqMsg\0223\n\013gf"
      "ClientIds\030\001 \001(\0132\036.PBGeofencesReqClientId"
      "Payload\"O\n\035PBLocAPIModifyGeofencesReqMsg"
      "\022.\n\tgeofences\030\001 \001(\0132\033.PBGeofencesAddedRe"
      "qPayload\"S\n\034PBLocAPIPauseGeofencesReqMsg"
      "\0223\n\013gfClientIds\030\001 \001(\0132\036.PBGeofencesReqCl"
      "ientIdPayload\"T\n\035PBLocAPIResumeGeofences"
      "ReqMsg\0223\n\013gfClientIds\030\001 \001(\0132\036.PBGeofence"
      "sReqClientIdPayload\"@\n\'PBLocAPIUpdateNet"
      "workAvailabilityReqMsg\022\025\n\rmAvailability\030"
      "\001 \001(\010\"C\n\026PBLocAPILocationIndMsg\022)\n\024locat"
      "ionNotification\030\001 \001(\0132\013.PBLocation\"O\n\026PB"
      "LocAPIBatchingIndMsg\0225\n\021batchNotificatio"
      "n\030\001 \001(\0132\032.PBLocAPIBatchNotification\"a\n\034P"
      "BLocAPIGeofenceBreachIndMsg\022A\n\024gfBreachN"
      "otification\030\001 \001(\0132#.PBLocAPIGeofenceBrea"
      "chNotification\"c\n\032PBLocAPILocationInfoIn"
      "dMsg\022E\n\034gnssLocationInfoNotification\030\001 \001"
      "(\0132\037.PBGnssLocationInfoNotification\"a\n!P"
      "BLocAPIEngineLocationsInfoIndMsg\022<\n\023engi"
      "neLocationsInfo\030\001 \003(\0132\037.PBGnssLocationIn"
      "foNotification\"Y\n\036PBLocAPISatelliteVehic"
      "leIndMsg\0227\n\022gnssSvNotification\030\001 \001(\0132\033.P"
      "BLocApiGnssSvNotification\"R\n\022PBLocAPINme"
      "aIndMsg\022<\n\024gnssNmeaNotification\030\001 \001(\0132\036."
      "PBLocAPINmeaSerializedPayload\"K\n\022PBLocAP"
      "IDataIndMsg\0225\n\024gnssDataNotification\030\001 \001("
      "\0132\027.PBGnssDataNotification\"[\n\022PBLocAPIMe"
      "asIndMsg\022E\n\034gnssMeasurementsNotification"
      "\030\001 \001(\0132\037.PBGnssMeasurementsNotification\""
      "Q\n PBLocAPIGnssEnergyConsumedIndMsg\022-\n%t"
      "otalGnssEnergyConsumedSinceFirstBoot\030\001 \001"
      "(\004\"U\n PBLocAPILocationSystemInfoIndMsg\0221"
      "\n\022locationSystemInfo\030\001 \001(\0132\025.PBLocationS"
      "ystemInfo\"c\n PBLocConfigConstrainedTuncR"
      "eqMsg\022\017\n\007mEnable\030\001 \001(\010\022\027\n\017mTuncConstrain"
      "t\030\002 \001(\002\022\025\n\rmEnergyBudget\030\003 \001(\r\"B\n/PBLocC"
      "onfigPositionAssistedClockEstimatorReqMs"
      "g\022\017\n\007mEnable\030\001 \001(\010\"\216\001\n PBLocConfigSvCons"
      "tellationReqMsg\022;\n\036mConstellationEnablem"
      "entConfig\030\001 \001(\0132\023.PBGnssSvTypeConfig\022-\n\022"
      "mBlacklistSvConfig\030\002 \001(\0132\021.PBGnssSvIdCon"
      "fig\"`\n+PBLocConfigConstellationSecondary"
      "BandReqMsg\0221\n\024mSecondaryBandConfig\030\001 \001(\013"
      "2\023.PBGnssSvTypeConfig\"I\n#PBLocConfigAidi"
      "ngDataDeletionReqMsg\022\"\n\013mAidingData\030\001 \001("
      "\0132\r.PBAidingData\"R\n\031PBLocConfigLeverArmR"
      "eqMsg\0225\n\023mLeverArmConfigInfo\030\001 \001(\0132\030.PBL"
      "IALeverArmConfigInfo\"J\n\037PBLocConfigRobus"
      "tLocationReqMsg\022\017\n\007mEnable\030\001 \001(\010\022\026\n\016mEna"
      "bleForE911\030\002 \001(\010\"2\n\033PBLocConfigMinGpsWee"
      "kReqMsg\022\023\n\013mMinGpsWeek\030\001 \001(\r\"S\n\037PBLocCon"
      "figDrEngineParamsReqMsg\0220\n\nmDreConfig\030\001 "
      "\001(\0132\034.PBDeadReckoningEngineConfig\":\n\037PBL"
      "ocConfigMinSvElevationReqMsg\022\027\n\017mMinSvEl"
      "evation\030\001 \001(\r\"e\n0PBLocConfigGetConstltnS"
      "econdaryBandConfigRespMsg\0221\n\024mSecondaryB"
      "andConfig\030\001 \001(\0132\023.PBGnssSvTypeConfig\"f\n)"
      "PBLocConfigGetRobustLocationConfigRespMs"
      "g\0229\n\024mRobustLoationConfig\030\001 \001(\0132\033.PBGnss"
      "ConfigRobustLocation\"6\n\037PBLocConfigGetMi"
      "nGpsWeekRespMsg\022\023\n\013mMinGpsWeek\030\001 \001(\r\">\n#"
      "PBLocConfigGetMinSvElevationRespMsg\022\027\n\017m"
      "MinSvElevation\030\001 \001(\r\"<\n\026PBLocAPIPingTest"
      "ReqMsg\022\024\n\014numberOfPing\030\001 \001(\r\022\014\n\004data\030\002 \003"
      "(\r\"<\n\026PBLocAPIPingTestIndMsg\022\024\n\014numberOf"
      "Ping\030\001 \001(\r\022\014\n\004data\030\002 \003(\r\"\177\n\021PBLocAPIMsgH"
      "eader\022\023\n\013mSocketName\030\001 \001(\t\022\033\n\005msgId\030\002 \001("
      "\0162\014.PBELocMsgID\022\022\n\nmsgVersion\030\003 \001(\r\022\017\n\007p"
      "ayload\030\004 \001(\014\022\023\n\013payloadSize\030\005 \001(\r*\205\001\n\025Lo"
      "cationApiMsgVersion\022\032\n\026LOCAPI_MSG_VER_IN"
      "VALID\020\000\022\030\n\024LOCAPI_MSG_VER_MAJOR\020\001\022\030\n\024LOC"
      "API_MSG_VER_MINOR\020\000\022\030\n\024LOCAPI_MSG_VER_MI"
      "CRO\020\000\032\002\020\001*\323\021\n\013PBELocMsgID\022 \n\034PB_E_LOCAPI"
      "_UNDEFINED_MSG_ID\020\000\022&\n\"PB_E_LOCAPI_CLIEN"
      "T_REGISTER_MSG_ID\020\001\022(\n$PB_E_LOCAPI_CLIEN"
      "T_DEREGISTER_MSG_ID\020\002\022$\n PB_E_LOCAPI_CAP"
      "ABILILTIES_MSG_ID\020\003\022 \n\034PB_E_LOCAPI_HAL_R"
      "EADY_MSG_ID\020\004\022%\n!PB_E_LOCAPI_START_TRACK"
      "ING_MSG_ID\020\005\022$\n PB_E_LOCAPI_STOP_TRACKIN"
      "G_MSG_ID\020\006\022\'\n#PB_E_LOCAPI_UPDATE_CALLBAC"
      "KS_MSG_ID\020\007\022.\n*PB_E_LOCAPI_UPDATE_TRACKI"
      "NG_OPTIONS_MSG_ID\020\010\022,\n(PB_E_LOCAPI_CONTR"
      "OL_UPDATE_CONFIG_MSG_ID\020\t\0221\n-PB_E_LOCAPI"
      "_CONTROL_DELETE_AIDING_DATA_MSG_ID\020\n\022:\n6"
      "PB_E_LOCAPI_CONTROL_UPDATE_NETWORK_AVAIL"
      "ABILITY_MSG_ID\020\013\022\037\n\033PB_E_LOCAPI_LOCATION"
      "_MSG_ID\020\014\022$\n PB_E_LOCAPI_LOCATION_INFO_M"
      "SG_ID\020\r\022(\n$PB_E_LOCAPI_SATELLITE_VEHICLE"
      "_MSG_ID\020\016\022\033\n\027PB_E_LOCAPI_NMEA_MSG_ID\020\017\022\033"
      "\n\027PB_E_LOCAPI_DATA_MSG_ID\020\020\022/\n+PB_E_LOCA"
      "PI_GET_GNSS_ENGERY_CONSUMED_MSG_ID\020\021\022+\n\'"
      "PB_E_LOCAPI_LOCATION_SYSTEM_INFO_MSG_ID\020"
      "\022\022,\n(PB_E_LOCAPI_ENGINE_LOCATIONS_INFO_M"
      "SG_ID\020\023\022%\n!PB_E_LOCAPI_START_BATCHING_MS"
      "G_ID\020\024\022$\n PB_E_LOCAPI_STOP_BATCHING_MSG_"
      "ID\020\025\022.\n*PB_E_LOCAPI_UPDATE_BATCHING_OPTI"
      "ONS_MSG_ID\020\026\022\037\n\033PB_E_LOCAPI_BATCHING_MSG"
      "_ID\020\027\022$\n PB_E_LOCAPI_ADD_GEOFENCES_MSG_I"
      "D\020\030\022\'\n#PB_E_LOCAPI_REMOVE_GEOFENCES_MSG_"
      "ID\020\031\022\'\n#PB_E_LOCAPI_MODIFY_GEOFENCES_MSG"
      "_ID\020\032\022&\n\"PB_E_LOCAPI_PAUSE_GEOFENCES_MSG"
      "_ID\020\033\022\'\n#PB_E_LOCAPI_RESUME_GEOFENCES_MS"
      "G_ID\020\034\022&\n\"PB_E_LOCAPI_GEOFENCE_BREACH_MS"
      "G_ID\020\035\022\033\n\027PB_E_LOCAPI_MEAS_MSG_ID\020\036\022\037\n\033P"
      "B_E_LOCAPI_PINGTEST_MSG_ID\020c\0220\n+PB_E_INT"
      "API_CONFIG_CONSTRAINTED_TUNC_MSG_ID\020\310\001\022@"
      "\n;PB_E_INTAPI_CONFIG_POSITION_ASSISTED_C"
      "LOCK_ESTIMATOR_MSG_ID\020\311\001\022/\n*PB_E_INTAPI_"
      "CONFIG_SV_CONSTELLATION_MSG_ID\020\312\001\0223\n.PB_"
      "E_INTAPI_CONFIG_AIDING_DATA_DELETION_MSG"
      "_ID\020\313\001\022(\n#PB_E_INTAPI_CONFIG_LEVER_ARM_M"
      "SG_ID\020\314\001\022.\n)PB_E_INTAPI_CONFIG_ROBUST_LO"
      "CATION_MSG_ID\020\315\001\022+\n&PB_E_INTAPI_CONFIG_M"
      "IN_GPS_WEEK_MSG_ID\020\316\001\0224\n/PB_E_INTAPI_CON"
      "FIG_DEAD_RECKONING_ENGINE_MSG_ID\020\317\001\022/\n*P"
      "B_E_INTAPI_CONFIG_MIN_SV_ELEVATION_MSG_I"
      "D\020\320\001\022;\n6PB_E_INTAPI_CONFIG_CONSTELLATION"
      "_SECONDARY_BAND_MSG_ID\020\321\001\0226\n1PB_E_INTAPI"
      "_GET_ROBUST_LOCATION_CONFIG_REQ_MSG_ID\020\254"
      "\002\0227\n2PB_E_INTAPI_GET_ROBUST_LOCATION_CON"
      "FIG_RESP_MSG_ID\020\255\002\022,\n\'PB_E_INTAPI_GET_MI"
      "N_GPS_WEEK_REQ_MSG_ID\020\256\002\022-\n(PB_E_INTAPI_"
      "GET_MIN_GPS_WEEK_RESP_MSG_ID\020\257\002\0220\n+PB_E_"
      "INTAPI_GET_MIN_SV_ELEVATION_REQ_MSG_ID\020\260"
      "\002\0221\n,PB_E_INTAPI_GET_MIN_SV_ELEVATION_RE"
      "SP_MSG_ID\020\261\002\022C\n>PB_E_INTAPI_GET_CONSTELL"
      "ATION_SECONDARY_BAND_CONFIG_REQ_MSG_ID\020\262"
      "\002\022D\n\?PB_E_INTAPI_GET_CONSTELLATION_SECON"
      "DARY_BAND_CONFIG_RESP_MSG_ID\020\263\002*p\n\014PBCli"
      "entType\022#\n\037PB_LOCATION_CLIENT_TYPE_INVAL"
      "ID\020\000\022\032\n\026PB_LOCATION_CLIENT_API\020\001\022\037\n\033PB_L"
      "OCATION_INTEGRATION_API\020\002*\344\003\n\027PBLocation"
      "CallbacksMask\022\027\n\023PB_E_LOC_CB_INVALID\020\000\022+"
      "\n\'PB_E_LOC_CB_DISTANCE_BASED_TRACKING_BI"
      "T\020\001\022&\n\"PB_E_LOC_CB_GNSS_LOCATION_INFO_BI"
      "T\020\002\022\033\n\027PB_E_LOC_CB_GNSS_SV_BIT\020\004\022\035\n\031PB_E"
      "_LOC_CB_GNSS_NMEA_BIT\020\010\022\035\n\031PB_E_LOC_CB_G"
      "NSS_DATA_BIT\020\020\022\037\n\033PB_E_LOC_CB_SYSTEM_INF"
      "O_BIT\020 \022\034\n\030PB_E_LOC_CB_BATCHING_BIT\020@\022$\n"
      "\037PB_E_LOC_CB_BATCHING_STATUS_BIT\020\200\001\022$\n\037P"
      "B_E_LOC_CB_GEOFENCE_BREACH_BIT\020\200\002\022*\n%PB_"
      "E_LOC_CB_ENGINE_LOCATIONS_INFO_BIT\020\200\004\022)\n"
      "$PB_E_LOC_CB_SIMPLE_LOCATION_INFO_BIT\020\200\010"
      "\022\036\n\031PB_E_LOC_CB_GNSS_MEAS_BIT\020\200\020*n\n\031PBEn"
      "gineInfoCallbacksMask\022\037\n\033PB_E_ENGINE_INF"
      "O_CB_INVALID\020\000\0220\n,PB_E_ENGINE_INFO_CB_GN"
      "SS_ENERGY_CONSUMED_BIT\020\001*\310\001\n\030PBGeofenceB"
      "reachTypeMask\022\036\n\032PB_GEOFENCE_BREACH_INVA"
      "LID\020\000\022 \n\034PB_GEOFENCE_BREACH_ENTER_BIT\020\001\022"
      "\037\n\033PB_GEOFENCE_BREACH_EXIT_BIT\020\002\022#\n\037PB_G"
      "EOFENCE_BREACH_DWELL_IN_BIT\020\004\022$\n PB_GEOF"
      "ENCE_BREACH_DWELL_OUT_BIT\020\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7755);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LocationApiMsg.proto", &protobuf_RegisterTypes);
  ::protobuf_LocationApiDataTypes_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_LocationApiMsg_2eproto

const ::google::protobuf::EnumDescriptor* LocationApiMsgVersion_descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_enum_descriptors[0];
}
bool LocationApiMsgVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PBELocMsgID_descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_enum_descriptors[1];
}
bool PBELocMsgID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 99:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PBClientType_descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_enum_descriptors[2];
}
bool PBClientType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PBLocationCallbacksMask_descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_enum_descriptors[3];
}
bool PBLocationCallbacksMask_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PBEngineInfoCallbacksMask_descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_enum_descriptors[4];
}
bool PBEngineInfoCallbacksMask_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PBGeofenceBreachTypeMask_descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_enum_descriptors[5];
}
bool PBGeofenceBreachTypeMask_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPINmeaSerializedPayload::kTimestampFieldNumber;
const int PBLocAPINmeaSerializedPayload::kNmeaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPINmeaSerializedPayload::PBLocAPINmeaSerializedPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPINmeaSerializedPayload)
}
PBLocAPINmeaSerializedPayload::PBLocAPINmeaSerializedPayload(const PBLocAPINmeaSerializedPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nmea_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nmea().size() > 0) {
    nmea_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nmea_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPINmeaSerializedPayload)
}

void PBLocAPINmeaSerializedPayload::SharedCtor() {
  nmea_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

PBLocAPINmeaSerializedPayload::~PBLocAPINmeaSerializedPayload() {
  // @@protoc_insertion_point(destructor:PBLocAPINmeaSerializedPayload)
  SharedDtor();
}

void PBLocAPINmeaSerializedPayload::SharedDtor() {
  nmea_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBLocAPINmeaSerializedPayload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPINmeaSerializedPayload::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPINmeaSerializedPayload& PBLocAPINmeaSerializedPayload::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPINmeaSerializedPayload* PBLocAPINmeaSerializedPayload::New(::google::protobuf::Arena* arena) const {
  PBLocAPINmeaSerializedPayload* n = new PBLocAPINmeaSerializedPayload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPINmeaSerializedPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPINmeaSerializedPayload)
  nmea_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
}

bool PBLocAPINmeaSerializedPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPINmeaSerializedPayload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nmea = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nmea()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nmea().data(), this->nmea().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBLocAPINmeaSerializedPayload.nmea"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPINmeaSerializedPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPINmeaSerializedPayload)
  return false;
#undef DO_
}

void PBLocAPINmeaSerializedPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPINmeaSerializedPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // string nmea = 2;
  if (this->nmea().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nmea().data(), this->nmea().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBLocAPINmeaSerializedPayload.nmea");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nmea(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPINmeaSerializedPayload)
}

::google::protobuf::uint8* PBLocAPINmeaSerializedPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPINmeaSerializedPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // string nmea = 2;
  if (this->nmea().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nmea().data(), this->nmea().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBLocAPINmeaSerializedPayload.nmea");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nmea(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPINmeaSerializedPayload)
  return target;
}

size_t PBLocAPINmeaSerializedPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPINmeaSerializedPayload)
  size_t total_size = 0;

  // string nmea = 2;
  if (this->nmea().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nmea());
  }

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPINmeaSerializedPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPINmeaSerializedPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPINmeaSerializedPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPINmeaSerializedPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPINmeaSerializedPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPINmeaSerializedPayload)
    MergeFrom(*source);
  }
}

void PBLocAPINmeaSerializedPayload::MergeFrom(const PBLocAPINmeaSerializedPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPINmeaSerializedPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nmea().size() > 0) {

    nmea_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nmea_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void PBLocAPINmeaSerializedPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPINmeaSerializedPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPINmeaSerializedPayload::CopyFrom(const PBLocAPINmeaSerializedPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPINmeaSerializedPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPINmeaSerializedPayload::IsInitialized() const {
  return true;
}

void PBLocAPINmeaSerializedPayload::Swap(PBLocAPINmeaSerializedPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPINmeaSerializedPayload::InternalSwap(PBLocAPINmeaSerializedPayload* other) {
  nmea_.Swap(&other->nmea_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPINmeaSerializedPayload::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPINmeaSerializedPayload

// uint64 timestamp = 1;
void PBLocAPINmeaSerializedPayload::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PBLocAPINmeaSerializedPayload::timestamp() const {
  // @@protoc_insertion_point(field_get:PBLocAPINmeaSerializedPayload.timestamp)
  return timestamp_;
}
void PBLocAPINmeaSerializedPayload::set_timestamp(::google::protobuf::uint64 value) {

  timestamp_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPINmeaSerializedPayload.timestamp)
}

// string nmea = 2;
void PBLocAPINmeaSerializedPayload::clear_nmea() {
  nmea_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBLocAPINmeaSerializedPayload::nmea() const {
  // @@protoc_insertion_point(field_get:PBLocAPINmeaSerializedPayload.nmea)
  return nmea_.GetNoArena();
}
void PBLocAPINmeaSerializedPayload::set_nmea(const ::std::string& value) {

  nmea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLocAPINmeaSerializedPayload.nmea)
}
#if LANG_CXX11
void PBLocAPINmeaSerializedPayload::set_nmea(::std::string&& value) {

  nmea_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLocAPINmeaSerializedPayload.nmea)
}
#endif
void PBLocAPINmeaSerializedPayload::set_nmea(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  nmea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLocAPINmeaSerializedPayload.nmea)
}
void PBLocAPINmeaSerializedPayload::set_nmea(const char* value, size_t size) {

  nmea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLocAPINmeaSerializedPayload.nmea)
}
::std::string* PBLocAPINmeaSerializedPayload::mutable_nmea() {

  // @@protoc_insertion_point(field_mutable:PBLocAPINmeaSerializedPayload.nmea)
  return nmea_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBLocAPINmeaSerializedPayload::release_nmea() {
  // @@protoc_insertion_point(field_release:PBLocAPINmeaSerializedPayload.nmea)

  return nmea_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBLocAPINmeaSerializedPayload::set_allocated_nmea(::std::string* nmea) {
  if (nmea != NULL) {

  } else {

  }
  nmea_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nmea);
  // @@protoc_insertion_point(field_set_allocated:PBLocAPINmeaSerializedPayload.nmea)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIBatchNotification::kStatusFieldNumber;
const int PBLocAPIBatchNotification::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIBatchNotification::PBLocAPIBatchNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIBatchNotification)
}
PBLocAPIBatchNotification::PBLocAPIBatchNotification(const PBLocAPIBatchNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      location_(from.location_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPIBatchNotification)
}

void PBLocAPIBatchNotification::SharedCtor() {
  status_ = 0;
  _cached_size_ = 0;
}

PBLocAPIBatchNotification::~PBLocAPIBatchNotification() {
  // @@protoc_insertion_point(destructor:PBLocAPIBatchNotification)
  SharedDtor();
}

void PBLocAPIBatchNotification::SharedDtor() {
}

void PBLocAPIBatchNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIBatchNotification::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIBatchNotification& PBLocAPIBatchNotification::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIBatchNotification* PBLocAPIBatchNotification::New(::google::protobuf::Arena* arena) const {
  PBLocAPIBatchNotification* n = new PBLocAPIBatchNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIBatchNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIBatchNotification)
  location_.Clear();
  status_ = 0;
}

bool PBLocAPIBatchNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIBatchNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBBatchingStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::PBBatchingStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBLocation location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIBatchNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIBatchNotification)
  return false;
#undef DO_
}

void PBLocAPIBatchNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIBatchNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBBatchingStatus status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // repeated .PBLocation location = 2;
  for (unsigned int i = 0, n = this->location_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->location(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIBatchNotification)
}

::google::protobuf::uint8* PBLocAPIBatchNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIBatchNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBBatchingStatus status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // repeated .PBLocation location = 2;
  for (unsigned int i = 0, n = this->location_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->location(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIBatchNotification)
  return target;
}

size_t PBLocAPIBatchNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIBatchNotification)
  size_t total_size = 0;

  // repeated .PBLocation location = 2;
  {
    unsigned int count = this->location_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location(i));
    }
  }

  // .PBBatchingStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIBatchNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIBatchNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIBatchNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIBatchNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIBatchNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIBatchNotification)
    MergeFrom(*source);
  }
}

void PBLocAPIBatchNotification::MergeFrom(const PBLocAPIBatchNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIBatchNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  location_.MergeFrom(from.location_);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void PBLocAPIBatchNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIBatchNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIBatchNotification::CopyFrom(const PBLocAPIBatchNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIBatchNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIBatchNotification::IsInitialized() const {
  return true;
}

void PBLocAPIBatchNotification::Swap(PBLocAPIBatchNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIBatchNotification::InternalSwap(PBLocAPIBatchNotification* other) {
  location_.InternalSwap(&other->location_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIBatchNotification::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIBatchNotification

// .PBBatchingStatus status = 1;
void PBLocAPIBatchNotification::clear_status() {
  status_ = 0;
}
::PBBatchingStatus PBLocAPIBatchNotification::status() const {
  // @@protoc_insertion_point(field_get:PBLocAPIBatchNotification.status)
  return static_cast< ::PBBatchingStatus >(status_);
}
void PBLocAPIBatchNotification::set_status(::PBBatchingStatus value) {

  status_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIBatchNotification.status)
}

// repeated .PBLocation location = 2;
int PBLocAPIBatchNotification::location_size() const {
  return location_.size();
}
void PBLocAPIBatchNotification::clear_location() {
  location_.Clear();
}
const ::PBLocation& PBLocAPIBatchNotification::location(int index) const {
  // @@protoc_insertion_point(field_get:PBLocAPIBatchNotification.location)
  return location_.Get(index);
}
::PBLocation* PBLocAPIBatchNotification::mutable_location(int index) {
  // @@protoc_insertion_point(field_mutable:PBLocAPIBatchNotification.location)
  return location_.Mutable(index);
}
::PBLocation* PBLocAPIBatchNotification::add_location() {
  // @@protoc_insertion_point(field_add:PBLocAPIBatchNotification.location)
  return location_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBLocation >*
PBLocAPIBatchNotification::mutable_location() {
  // @@protoc_insertion_point(field_mutable_list:PBLocAPIBatchNotification.location)
  return &location_;
}
const ::google::protobuf::RepeatedPtrField< ::PBLocation >&
PBLocAPIBatchNotification::location() const {
  // @@protoc_insertion_point(field_list:PBLocAPIBatchNotification.location)
  return location_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIGeofenceBreachNotification::kTimestampFieldNumber;
const int PBLocAPIGeofenceBreachNotification::kBreachtypeFieldNumber;
const int PBLocAPIGeofenceBreachNotification::kLocationFieldNumber;
const int PBLocAPIGeofenceBreachNotification::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIGeofenceBreachNotification::PBLocAPIGeofenceBreachNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIGeofenceBreachNotification)
}
PBLocAPIGeofenceBreachNotification::PBLocAPIGeofenceBreachNotification(const PBLocAPIGeofenceBreachNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::PBLocation(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    reinterpret_cast<char*>(&breachtype_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(breachtype_));
  // @@protoc_insertion_point(copy_constructor:PBLocAPIGeofenceBreachNotification)
}

void PBLocAPIGeofenceBreachNotification::SharedCtor() {
  ::memset(&location_, 0, reinterpret_cast<char*>(&breachtype_) -
    reinterpret_cast<char*>(&location_) + sizeof(breachtype_));
  _cached_size_ = 0;
}

PBLocAPIGeofenceBreachNotification::~PBLocAPIGeofenceBreachNotification() {
  // @@protoc_insertion_point(destructor:PBLocAPIGeofenceBreachNotification)
  SharedDtor();
}

void PBLocAPIGeofenceBreachNotification::SharedDtor() {
  if (this != internal_default_instance()) {
    delete location_;
  }
}

void PBLocAPIGeofenceBreachNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIGeofenceBreachNotification::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIGeofenceBreachNotification& PBLocAPIGeofenceBreachNotification::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIGeofenceBreachNotification* PBLocAPIGeofenceBreachNotification::New(::google::protobuf::Arena* arena) const {
  PBLocAPIGeofenceBreachNotification* n = new PBLocAPIGeofenceBreachNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIGeofenceBreachNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIGeofenceBreachNotification)
  id_.Clear();
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  ::memset(&timestamp_, 0, reinterpret_cast<char*>(&breachtype_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(breachtype_));
}

bool PBLocAPIGeofenceBreachNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIGeofenceBreachNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 breachtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &breachtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBLocation location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(32u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIGeofenceBreachNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIGeofenceBreachNotification)
  return false;
#undef DO_
}

void PBLocAPIGeofenceBreachNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIGeofenceBreachNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // uint32 breachtype = 2;
  if (this->breachtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->breachtype(), output);
  }

  // .PBLocation location = 3;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->location_, output);
  }

  // repeated uint32 id = 4;
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_id_cached_byte_size_);
  }
  for (int i = 0, n = this->id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->id(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIGeofenceBreachNotification)
}

::google::protobuf::uint8* PBLocAPIGeofenceBreachNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIGeofenceBreachNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // uint32 breachtype = 2;
  if (this->breachtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->breachtype(), target);
  }

  // .PBLocation location = 3;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->location_, deterministic, target);
  }

  // repeated uint32 id = 4;
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _id_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->id_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIGeofenceBreachNotification)
  return target;
}

size_t PBLocAPIGeofenceBreachNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIGeofenceBreachNotification)
  size_t total_size = 0;

  // repeated uint32 id = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .PBLocation location = 3;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->location_);
  }

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint32 breachtype = 2;
  if (this->breachtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->breachtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIGeofenceBreachNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIGeofenceBreachNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIGeofenceBreachNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIGeofenceBreachNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIGeofenceBreachNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIGeofenceBreachNotification)
    MergeFrom(*source);
  }
}

void PBLocAPIGeofenceBreachNotification::MergeFrom(const PBLocAPIGeofenceBreachNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIGeofenceBreachNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  id_.MergeFrom(from.id_);
  if (from.has_location()) {
    mutable_location()->::PBLocation::MergeFrom(from.location());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.breachtype() != 0) {
    set_breachtype(from.breachtype());
  }
}

void PBLocAPIGeofenceBreachNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIGeofenceBreachNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIGeofenceBreachNotification::CopyFrom(const PBLocAPIGeofenceBreachNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIGeofenceBreachNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIGeofenceBreachNotification::IsInitialized() const {
  return true;
}

void PBLocAPIGeofenceBreachNotification::Swap(PBLocAPIGeofenceBreachNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIGeofenceBreachNotification::InternalSwap(PBLocAPIGeofenceBreachNotification* other) {
  id_.InternalSwap(&other->id_);
  std::swap(location_, other->location_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(breachtype_, other->breachtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIGeofenceBreachNotification::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIGeofenceBreachNotification

// uint64 timestamp = 1;
void PBLocAPIGeofenceBreachNotification::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PBLocAPIGeofenceBreachNotification::timestamp() const {
  // @@protoc_insertion_point(field_get:PBLocAPIGeofenceBreachNotification.timestamp)
  return timestamp_;
}
void PBLocAPIGeofenceBreachNotification::set_timestamp(::google::protobuf::uint64 value) {

  timestamp_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIGeofenceBreachNotification.timestamp)
}

// uint32 breachtype = 2;
void PBLocAPIGeofenceBreachNotification::clear_breachtype() {
  breachtype_ = 0u;
}
::google::protobuf::uint32 PBLocAPIGeofenceBreachNotification::breachtype() const {
  // @@protoc_insertion_point(field_get:PBLocAPIGeofenceBreachNotification.breachtype)
  return breachtype_;
}
void PBLocAPIGeofenceBreachNotification::set_breachtype(::google::protobuf::uint32 value) {

  breachtype_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIGeofenceBreachNotification.breachtype)
}

// .PBLocation location = 3;
bool PBLocAPIGeofenceBreachNotification::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
void PBLocAPIGeofenceBreachNotification::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
const ::PBLocation& PBLocAPIGeofenceBreachNotification::location() const {
  // @@protoc_insertion_point(field_get:PBLocAPIGeofenceBreachNotification.location)
  return location_ != NULL ? *location_
                         : *::PBLocation::internal_default_instance();
}
::PBLocation* PBLocAPIGeofenceBreachNotification::mutable_location() {

  if (location_ == NULL) {
    location_ = new ::PBLocation;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIGeofenceBreachNotification.location)
  return location_;
}
::PBLocation* PBLocAPIGeofenceBreachNotification::release_location() {
  // @@protoc_insertion_point(field_release:PBLocAPIGeofenceBreachNotification.location)

  ::PBLocation* temp = location_;
  location_ = NULL;
  return temp;
}
void PBLocAPIGeofenceBreachNotification::set_allocated_location(::PBLocation* location) {
  delete location_;
  location_ = location;
  if (location) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIGeofenceBreachNotification.location)
}

// repeated uint32 id = 4;
int PBLocAPIGeofenceBreachNotification::id_size() const {
  return id_.size();
}
void PBLocAPIGeofenceBreachNotification::clear_id() {
  id_.Clear();
}
::google::protobuf::uint32 PBLocAPIGeofenceBreachNotification::id(int index) const {
  // @@protoc_insertion_point(field_get:PBLocAPIGeofenceBreachNotification.id)
  return id_.Get(index);
}
void PBLocAPIGeofenceBreachNotification::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBLocAPIGeofenceBreachNotification.id)
}
void PBLocAPIGeofenceBreachNotification::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:PBLocAPIGeofenceBreachNotification.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLocAPIGeofenceBreachNotification::id() const {
  // @@protoc_insertion_point(field_list:PBLocAPIGeofenceBreachNotification.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLocAPIGeofenceBreachNotification::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:PBLocAPIGeofenceBreachNotification.id)
  return &id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGeofenceOption::kBreachTypeMaskFieldNumber;
const int PBGeofenceOption::kResponsivenessFieldNumber;
const int PBGeofenceOption::kDwellTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGeofenceOption::PBGeofenceOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGeofenceOption)
}
PBGeofenceOption::PBGeofenceOption(const PBGeofenceOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&breachtypemask_, &from.breachtypemask_,
    reinterpret_cast<char*>(&dwelltime_) -
    reinterpret_cast<char*>(&breachtypemask_) + sizeof(dwelltime_));
  // @@protoc_insertion_point(copy_constructor:PBGeofenceOption)
}

void PBGeofenceOption::SharedCtor() {
  ::memset(&breachtypemask_, 0, reinterpret_cast<char*>(&dwelltime_) -
    reinterpret_cast<char*>(&breachtypemask_) + sizeof(dwelltime_));
  _cached_size_ = 0;
}

PBGeofenceOption::~PBGeofenceOption() {
  // @@protoc_insertion_point(destructor:PBGeofenceOption)
  SharedDtor();
}

void PBGeofenceOption::SharedDtor() {
}

void PBGeofenceOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGeofenceOption::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBGeofenceOption& PBGeofenceOption::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBGeofenceOption* PBGeofenceOption::New(::google::protobuf::Arena* arena) const {
  PBGeofenceOption* n = new PBGeofenceOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGeofenceOption::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGeofenceOption)
  ::memset(&breachtypemask_, 0, reinterpret_cast<char*>(&dwelltime_) -
    reinterpret_cast<char*>(&breachtypemask_) + sizeof(dwelltime_));
}

bool PBGeofenceOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGeofenceOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 breachTypeMask = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &breachtypemask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 responsiveness = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &responsiveness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dwellTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dwelltime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGeofenceOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGeofenceOption)
  return false;
#undef DO_
}

void PBGeofenceOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGeofenceOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 breachTypeMask = 1;
  if (this->breachtypemask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->breachtypemask(), output);
  }

  // uint32 responsiveness = 2;
  if (this->responsiveness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->responsiveness(), output);
  }

  // uint32 dwellTime = 3;
  if (this->dwelltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dwelltime(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBGeofenceOption)
}

::google::protobuf::uint8* PBGeofenceOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBGeofenceOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 breachTypeMask = 1;
  if (this->breachtypemask() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->breachtypemask(), target);
  }

  // uint32 responsiveness = 2;
  if (this->responsiveness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->responsiveness(), target);
  }

  // uint32 dwellTime = 3;
  if (this->dwelltime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dwelltime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGeofenceOption)
  return target;
}

size_t PBGeofenceOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGeofenceOption)
  size_t total_size = 0;

  // uint32 breachTypeMask = 1;
  if (this->breachtypemask() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->breachtypemask());
  }

  // uint32 responsiveness = 2;
  if (this->responsiveness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->responsiveness());
  }

  // uint32 dwellTime = 3;
  if (this->dwelltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dwelltime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGeofenceOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGeofenceOption)
  GOOGLE_DCHECK_NE(&from, this);
  const PBGeofenceOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGeofenceOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGeofenceOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGeofenceOption)
    MergeFrom(*source);
  }
}

void PBGeofenceOption::MergeFrom(const PBGeofenceOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGeofenceOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.breachtypemask() != 0) {
    set_breachtypemask(from.breachtypemask());
  }
  if (from.responsiveness() != 0) {
    set_responsiveness(from.responsiveness());
  }
  if (from.dwelltime() != 0) {
    set_dwelltime(from.dwelltime());
  }
}

void PBGeofenceOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGeofenceOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGeofenceOption::CopyFrom(const PBGeofenceOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGeofenceOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGeofenceOption::IsInitialized() const {
  return true;
}

void PBGeofenceOption::Swap(PBGeofenceOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGeofenceOption::InternalSwap(PBGeofenceOption* other) {
  std::swap(breachtypemask_, other->breachtypemask_);
  std::swap(responsiveness_, other->responsiveness_);
  std::swap(dwelltime_, other->dwelltime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGeofenceOption::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGeofenceOption

// uint32 breachTypeMask = 1;
void PBGeofenceOption::clear_breachtypemask() {
  breachtypemask_ = 0u;
}
::google::protobuf::uint32 PBGeofenceOption::breachtypemask() const {
  // @@protoc_insertion_point(field_get:PBGeofenceOption.breachTypeMask)
  return breachtypemask_;
}
void PBGeofenceOption::set_breachtypemask(::google::protobuf::uint32 value) {

  breachtypemask_ = value;
  // @@protoc_insertion_point(field_set:PBGeofenceOption.breachTypeMask)
}

// uint32 responsiveness = 2;
void PBGeofenceOption::clear_responsiveness() {
  responsiveness_ = 0u;
}
::google::protobuf::uint32 PBGeofenceOption::responsiveness() const {
  // @@protoc_insertion_point(field_get:PBGeofenceOption.responsiveness)
  return responsiveness_;
}
void PBGeofenceOption::set_responsiveness(::google::protobuf::uint32 value) {

  responsiveness_ = value;
  // @@protoc_insertion_point(field_set:PBGeofenceOption.responsiveness)
}

// uint32 dwellTime = 3;
void PBGeofenceOption::clear_dwelltime() {
  dwelltime_ = 0u;
}
::google::protobuf::uint32 PBGeofenceOption::dwelltime() const {
  // @@protoc_insertion_point(field_get:PBGeofenceOption.dwellTime)
  return dwelltime_;
}
void PBGeofenceOption::set_dwelltime(::google::protobuf::uint32 value) {

  dwelltime_ = value;
  // @@protoc_insertion_point(field_set:PBGeofenceOption.dwellTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGeofenceInfo::kLatitudeFieldNumber;
const int PBGeofenceInfo::kLongitudeFieldNumber;
const int PBGeofenceInfo::kRadiusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGeofenceInfo::PBGeofenceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGeofenceInfo)
}
PBGeofenceInfo::PBGeofenceInfo(const PBGeofenceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&latitude_, &from.latitude_,
    reinterpret_cast<char*>(&radius_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(radius_));
  // @@protoc_insertion_point(copy_constructor:PBGeofenceInfo)
}

void PBGeofenceInfo::SharedCtor() {
  ::memset(&latitude_, 0, reinterpret_cast<char*>(&radius_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(radius_));
  _cached_size_ = 0;
}

PBGeofenceInfo::~PBGeofenceInfo() {
  // @@protoc_insertion_point(destructor:PBGeofenceInfo)
  SharedDtor();
}

void PBGeofenceInfo::SharedDtor() {
}

void PBGeofenceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGeofenceInfo::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBGeofenceInfo& PBGeofenceInfo::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBGeofenceInfo* PBGeofenceInfo::New(::google::protobuf::Arena* arena) const {
  PBGeofenceInfo* n = new PBGeofenceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGeofenceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGeofenceInfo)
  ::memset(&latitude_, 0, reinterpret_cast<char*>(&radius_) -
    reinterpret_cast<char*>(&latitude_) + sizeof(radius_));
}

bool PBGeofenceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGeofenceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double radius = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGeofenceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGeofenceInfo)
  return false;
#undef DO_
}

void PBGeofenceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGeofenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->latitude(), output);
  }

  // double longitude = 2;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // double radius = 3;
  if (this->radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->radius(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBGeofenceInfo)
}

::google::protobuf::uint8* PBGeofenceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBGeofenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->latitude(), target);
  }

  // double longitude = 2;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // double radius = 3;
  if (this->radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->radius(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGeofenceInfo)
  return target;
}

size_t PBGeofenceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGeofenceInfo)
  size_t total_size = 0;

  // double latitude = 1;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // double longitude = 2;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double radius = 3;
  if (this->radius() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGeofenceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGeofenceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PBGeofenceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGeofenceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGeofenceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGeofenceInfo)
    MergeFrom(*source);
  }
}

void PBGeofenceInfo::MergeFrom(const PBGeofenceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGeofenceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.radius() != 0) {
    set_radius(from.radius());
  }
}

void PBGeofenceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGeofenceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGeofenceInfo::CopyFrom(const PBGeofenceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGeofenceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGeofenceInfo::IsInitialized() const {
  return true;
}

void PBGeofenceInfo::Swap(PBGeofenceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGeofenceInfo::InternalSwap(PBGeofenceInfo* other) {
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  std::swap(radius_, other->radius_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGeofenceInfo::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGeofenceInfo

// double latitude = 1;
void PBGeofenceInfo::clear_latitude() {
  latitude_ = 0;
}
double PBGeofenceInfo::latitude() const {
  // @@protoc_insertion_point(field_get:PBGeofenceInfo.latitude)
  return latitude_;
}
void PBGeofenceInfo::set_latitude(double value) {

  latitude_ = value;
  // @@protoc_insertion_point(field_set:PBGeofenceInfo.latitude)
}

// double longitude = 2;
void PBGeofenceInfo::clear_longitude() {
  longitude_ = 0;
}
double PBGeofenceInfo::longitude() const {
  // @@protoc_insertion_point(field_get:PBGeofenceInfo.longitude)
  return longitude_;
}
void PBGeofenceInfo::set_longitude(double value) {

  longitude_ = value;
  // @@protoc_insertion_point(field_set:PBGeofenceInfo.longitude)
}

// double radius = 3;
void PBGeofenceInfo::clear_radius() {
  radius_ = 0;
}
double PBGeofenceInfo::radius() const {
  // @@protoc_insertion_point(field_get:PBGeofenceInfo.radius)
  return radius_;
}
void PBGeofenceInfo::set_radius(double value) {

  radius_ = value;
  // @@protoc_insertion_point(field_set:PBGeofenceInfo.radius)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGeofencePayload::kGfClientIdFieldNumber;
const int PBGeofencePayload::kGfOptionFieldNumber;
const int PBGeofencePayload::kGfInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGeofencePayload::PBGeofencePayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGeofencePayload)
}
PBGeofencePayload::PBGeofencePayload(const PBGeofencePayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gfoption()) {
    gfoption_ = new ::PBGeofenceOption(*from.gfoption_);
  } else {
    gfoption_ = NULL;
  }
  if (from.has_gfinfo()) {
    gfinfo_ = new ::PBGeofenceInfo(*from.gfinfo_);
  } else {
    gfinfo_ = NULL;
  }
  gfclientid_ = from.gfclientid_;
  // @@protoc_insertion_point(copy_constructor:PBGeofencePayload)
}

void PBGeofencePayload::SharedCtor() {
  ::memset(&gfoption_, 0, reinterpret_cast<char*>(&gfclientid_) -
    reinterpret_cast<char*>(&gfoption_) + sizeof(gfclientid_));
  _cached_size_ = 0;
}

PBGeofencePayload::~PBGeofencePayload() {
  // @@protoc_insertion_point(destructor:PBGeofencePayload)
  SharedDtor();
}

void PBGeofencePayload::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gfoption_;
  }
  if (this != internal_default_instance()) {
    delete gfinfo_;
  }
}

void PBGeofencePayload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGeofencePayload::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBGeofencePayload& PBGeofencePayload::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBGeofencePayload* PBGeofencePayload::New(::google::protobuf::Arena* arena) const {
  PBGeofencePayload* n = new PBGeofencePayload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGeofencePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGeofencePayload)
  if (GetArenaNoVirtual() == NULL && gfoption_ != NULL) {
    delete gfoption_;
  }
  gfoption_ = NULL;
  if (GetArenaNoVirtual() == NULL && gfinfo_ != NULL) {
    delete gfinfo_;
  }
  gfinfo_ = NULL;
  gfclientid_ = 0u;
}

bool PBGeofencePayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGeofencePayload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gfClientId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gfclientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBGeofenceOption gfOption = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gfoption()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBGeofenceInfo gfInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gfinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGeofencePayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGeofencePayload)
  return false;
#undef DO_
}

void PBGeofencePayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGeofencePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gfClientId = 1;
  if (this->gfclientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gfclientid(), output);
  }

  // .PBGeofenceOption gfOption = 2;
  if (this->has_gfoption()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->gfoption_, output);
  }

  // .PBGeofenceInfo gfInfo = 3;
  if (this->has_gfinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->gfinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBGeofencePayload)
}

::google::protobuf::uint8* PBGeofencePayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBGeofencePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gfClientId = 1;
  if (this->gfclientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gfclientid(), target);
  }

  // .PBGeofenceOption gfOption = 2;
  if (this->has_gfoption()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->gfoption_, deterministic, target);
  }

  // .PBGeofenceInfo gfInfo = 3;
  if (this->has_gfinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->gfinfo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGeofencePayload)
  return target;
}

size_t PBGeofencePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGeofencePayload)
  size_t total_size = 0;

  // .PBGeofenceOption gfOption = 2;
  if (this->has_gfoption()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gfoption_);
  }

  // .PBGeofenceInfo gfInfo = 3;
  if (this->has_gfinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gfinfo_);
  }

  // uint32 gfClientId = 1;
  if (this->gfclientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gfclientid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGeofencePayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGeofencePayload)
  GOOGLE_DCHECK_NE(&from, this);
  const PBGeofencePayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGeofencePayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGeofencePayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGeofencePayload)
    MergeFrom(*source);
  }
}

void PBGeofencePayload::MergeFrom(const PBGeofencePayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGeofencePayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gfoption()) {
    mutable_gfoption()->::PBGeofenceOption::MergeFrom(from.gfoption());
  }
  if (from.has_gfinfo()) {
    mutable_gfinfo()->::PBGeofenceInfo::MergeFrom(from.gfinfo());
  }
  if (from.gfclientid() != 0) {
    set_gfclientid(from.gfclientid());
  }
}

void PBGeofencePayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGeofencePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGeofencePayload::CopyFrom(const PBGeofencePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGeofencePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGeofencePayload::IsInitialized() const {
  return true;
}

void PBGeofencePayload::Swap(PBGeofencePayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGeofencePayload::InternalSwap(PBGeofencePayload* other) {
  std::swap(gfoption_, other->gfoption_);
  std::swap(gfinfo_, other->gfinfo_);
  std::swap(gfclientid_, other->gfclientid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGeofencePayload::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGeofencePayload

// uint32 gfClientId = 1;
void PBGeofencePayload::clear_gfclientid() {
  gfclientid_ = 0u;
}
::google::protobuf::uint32 PBGeofencePayload::gfclientid() const {
  // @@protoc_insertion_point(field_get:PBGeofencePayload.gfClientId)
  return gfclientid_;
}
void PBGeofencePayload::set_gfclientid(::google::protobuf::uint32 value) {

  gfclientid_ = value;
  // @@protoc_insertion_point(field_set:PBGeofencePayload.gfClientId)
}

// .PBGeofenceOption gfOption = 2;
bool PBGeofencePayload::has_gfoption() const {
  return this != internal_default_instance() && gfoption_ != NULL;
}
void PBGeofencePayload::clear_gfoption() {
  if (GetArenaNoVirtual() == NULL && gfoption_ != NULL) delete gfoption_;
  gfoption_ = NULL;
}
const ::PBGeofenceOption& PBGeofencePayload::gfoption() const {
  // @@protoc_insertion_point(field_get:PBGeofencePayload.gfOption)
  return gfoption_ != NULL ? *gfoption_
                         : *::PBGeofenceOption::internal_default_instance();
}
::PBGeofenceOption* PBGeofencePayload::mutable_gfoption() {

  if (gfoption_ == NULL) {
    gfoption_ = new ::PBGeofenceOption;
  }
  // @@protoc_insertion_point(field_mutable:PBGeofencePayload.gfOption)
  return gfoption_;
}
::PBGeofenceOption* PBGeofencePayload::release_gfoption() {
  // @@protoc_insertion_point(field_release:PBGeofencePayload.gfOption)

  ::PBGeofenceOption* temp = gfoption_;
  gfoption_ = NULL;
  return temp;
}
void PBGeofencePayload::set_allocated_gfoption(::PBGeofenceOption* gfoption) {
  delete gfoption_;
  gfoption_ = gfoption;
  if (gfoption) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGeofencePayload.gfOption)
}

// .PBGeofenceInfo gfInfo = 3;
bool PBGeofencePayload::has_gfinfo() const {
  return this != internal_default_instance() && gfinfo_ != NULL;
}
void PBGeofencePayload::clear_gfinfo() {
  if (GetArenaNoVirtual() == NULL && gfinfo_ != NULL) delete gfinfo_;
  gfinfo_ = NULL;
}
const ::PBGeofenceInfo& PBGeofencePayload::gfinfo() const {
  // @@protoc_insertion_point(field_get:PBGeofencePayload.gfInfo)
  return gfinfo_ != NULL ? *gfinfo_
                         : *::PBGeofenceInfo::internal_default_instance();
}
::PBGeofenceInfo* PBGeofencePayload::mutable_gfinfo() {

  if (gfinfo_ == NULL) {
    gfinfo_ = new ::PBGeofenceInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGeofencePayload.gfInfo)
  return gfinfo_;
}
::PBGeofenceInfo* PBGeofencePayload::release_gfinfo() {
  // @@protoc_insertion_point(field_release:PBGeofencePayload.gfInfo)

  ::PBGeofenceInfo* temp = gfinfo_;
  gfinfo_ = NULL;
  return temp;
}
void PBGeofencePayload::set_allocated_gfinfo(::PBGeofenceInfo* gfinfo) {
  delete gfinfo_;
  gfinfo_ = gfinfo;
  if (gfinfo) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGeofencePayload.gfInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGeofencesAddedReqPayload::kGfPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGeofencesAddedReqPayload::PBGeofencesAddedReqPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGeofencesAddedReqPayload)
}
PBGeofencesAddedReqPayload::PBGeofencesAddedReqPayload(const PBGeofencesAddedReqPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfpayload_(from.gfpayload_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBGeofencesAddedReqPayload)
}

void PBGeofencesAddedReqPayload::SharedCtor() {
  _cached_size_ = 0;
}

PBGeofencesAddedReqPayload::~PBGeofencesAddedReqPayload() {
  // @@protoc_insertion_point(destructor:PBGeofencesAddedReqPayload)
  SharedDtor();
}

void PBGeofencesAddedReqPayload::SharedDtor() {
}

void PBGeofencesAddedReqPayload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGeofencesAddedReqPayload::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBGeofencesAddedReqPayload& PBGeofencesAddedReqPayload::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBGeofencesAddedReqPayload* PBGeofencesAddedReqPayload::New(::google::protobuf::Arena* arena) const {
  PBGeofencesAddedReqPayload* n = new PBGeofencesAddedReqPayload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGeofencesAddedReqPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGeofencesAddedReqPayload)
  gfpayload_.Clear();
}

bool PBGeofencesAddedReqPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGeofencesAddedReqPayload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBGeofencePayload gfPayload = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gfpayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGeofencesAddedReqPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGeofencesAddedReqPayload)
  return false;
#undef DO_
}

void PBGeofencesAddedReqPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGeofencesAddedReqPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBGeofencePayload gfPayload = 1;
  for (unsigned int i = 0, n = this->gfpayload_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gfpayload(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBGeofencesAddedReqPayload)
}

::google::protobuf::uint8* PBGeofencesAddedReqPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBGeofencesAddedReqPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBGeofencePayload gfPayload = 1;
  for (unsigned int i = 0, n = this->gfpayload_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->gfpayload(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGeofencesAddedReqPayload)
  return target;
}

size_t PBGeofencesAddedReqPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGeofencesAddedReqPayload)
  size_t total_size = 0;

  // repeated .PBGeofencePayload gfPayload = 1;
  {
    unsigned int count = this->gfpayload_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gfpayload(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGeofencesAddedReqPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGeofencesAddedReqPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const PBGeofencesAddedReqPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGeofencesAddedReqPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGeofencesAddedReqPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGeofencesAddedReqPayload)
    MergeFrom(*source);
  }
}

void PBGeofencesAddedReqPayload::MergeFrom(const PBGeofencesAddedReqPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGeofencesAddedReqPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfpayload_.MergeFrom(from.gfpayload_);
}

void PBGeofencesAddedReqPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGeofencesAddedReqPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGeofencesAddedReqPayload::CopyFrom(const PBGeofencesAddedReqPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGeofencesAddedReqPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGeofencesAddedReqPayload::IsInitialized() const {
  return true;
}

void PBGeofencesAddedReqPayload::Swap(PBGeofencesAddedReqPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGeofencesAddedReqPayload::InternalSwap(PBGeofencesAddedReqPayload* other) {
  gfpayload_.InternalSwap(&other->gfpayload_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGeofencesAddedReqPayload::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGeofencesAddedReqPayload

// repeated .PBGeofencePayload gfPayload = 1;
int PBGeofencesAddedReqPayload::gfpayload_size() const {
  return gfpayload_.size();
}
void PBGeofencesAddedReqPayload::clear_gfpayload() {
  gfpayload_.Clear();
}
const ::PBGeofencePayload& PBGeofencesAddedReqPayload::gfpayload(int index) const {
  // @@protoc_insertion_point(field_get:PBGeofencesAddedReqPayload.gfPayload)
  return gfpayload_.Get(index);
}
::PBGeofencePayload* PBGeofencesAddedReqPayload::mutable_gfpayload(int index) {
  // @@protoc_insertion_point(field_mutable:PBGeofencesAddedReqPayload.gfPayload)
  return gfpayload_.Mutable(index);
}
::PBGeofencePayload* PBGeofencesAddedReqPayload::add_gfpayload() {
  // @@protoc_insertion_point(field_add:PBGeofencesAddedReqPayload.gfPayload)
  return gfpayload_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBGeofencePayload >*
PBGeofencesAddedReqPayload::mutable_gfpayload() {
  // @@protoc_insertion_point(field_mutable_list:PBGeofencesAddedReqPayload.gfPayload)
  return &gfpayload_;
}
const ::google::protobuf::RepeatedPtrField< ::PBGeofencePayload >&
PBGeofencesAddedReqPayload::gfpayload() const {
  // @@protoc_insertion_point(field_list:PBGeofencesAddedReqPayload.gfPayload)
  return gfpayload_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGeofencesReqClientIdPayload::kGfIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGeofencesReqClientIdPayload::PBGeofencesReqClientIdPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGeofencesReqClientIdPayload)
}
PBGeofencesReqClientIdPayload::PBGeofencesReqClientIdPayload(const PBGeofencesReqClientIdPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfids_(from.gfids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBGeofencesReqClientIdPayload)
}

void PBGeofencesReqClientIdPayload::SharedCtor() {
  _cached_size_ = 0;
}

PBGeofencesReqClientIdPayload::~PBGeofencesReqClientIdPayload() {
  // @@protoc_insertion_point(destructor:PBGeofencesReqClientIdPayload)
  SharedDtor();
}

void PBGeofencesReqClientIdPayload::SharedDtor() {
}

void PBGeofencesReqClientIdPayload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGeofencesReqClientIdPayload::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBGeofencesReqClientIdPayload& PBGeofencesReqClientIdPayload::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBGeofencesReqClientIdPayload* PBGeofencesReqClientIdPayload::New(::google::protobuf::Arena* arena) const {
  PBGeofencesReqClientIdPayload* n = new PBGeofencesReqClientIdPayload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGeofencesReqClientIdPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGeofencesReqClientIdPayload)
  gfids_.Clear();
}

bool PBGeofencesReqClientIdPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGeofencesReqClientIdPayload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 gfIds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gfids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_gfids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGeofencesReqClientIdPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGeofencesReqClientIdPayload)
  return false;
#undef DO_
}

void PBGeofencesReqClientIdPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGeofencesReqClientIdPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 gfIds = 1;
  if (this->gfids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_gfids_cached_byte_size_);
  }
  for (int i = 0, n = this->gfids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->gfids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBGeofencesReqClientIdPayload)
}

::google::protobuf::uint8* PBGeofencesReqClientIdPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBGeofencesReqClientIdPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 gfIds = 1;
  if (this->gfids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _gfids_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->gfids_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGeofencesReqClientIdPayload)
  return target;
}

size_t PBGeofencesReqClientIdPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGeofencesReqClientIdPayload)
  size_t total_size = 0;

  // repeated uint32 gfIds = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->gfids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gfids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGeofencesReqClientIdPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGeofencesReqClientIdPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const PBGeofencesReqClientIdPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGeofencesReqClientIdPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGeofencesReqClientIdPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGeofencesReqClientIdPayload)
    MergeFrom(*source);
  }
}

void PBGeofencesReqClientIdPayload::MergeFrom(const PBGeofencesReqClientIdPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGeofencesReqClientIdPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfids_.MergeFrom(from.gfids_);
}

void PBGeofencesReqClientIdPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGeofencesReqClientIdPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGeofencesReqClientIdPayload::CopyFrom(const PBGeofencesReqClientIdPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGeofencesReqClientIdPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGeofencesReqClientIdPayload::IsInitialized() const {
  return true;
}

void PBGeofencesReqClientIdPayload::Swap(PBGeofencesReqClientIdPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGeofencesReqClientIdPayload::InternalSwap(PBGeofencesReqClientIdPayload* other) {
  gfids_.InternalSwap(&other->gfids_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGeofencesReqClientIdPayload::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGeofencesReqClientIdPayload

// repeated uint32 gfIds = 1;
int PBGeofencesReqClientIdPayload::gfids_size() const {
  return gfids_.size();
}
void PBGeofencesReqClientIdPayload::clear_gfids() {
  gfids_.Clear();
}
::google::protobuf::uint32 PBGeofencesReqClientIdPayload::gfids(int index) const {
  // @@protoc_insertion_point(field_get:PBGeofencesReqClientIdPayload.gfIds)
  return gfids_.Get(index);
}
void PBGeofencesReqClientIdPayload::set_gfids(int index, ::google::protobuf::uint32 value) {
  gfids_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGeofencesReqClientIdPayload.gfIds)
}
void PBGeofencesReqClientIdPayload::add_gfids(::google::protobuf::uint32 value) {
  gfids_.Add(value);
  // @@protoc_insertion_point(field_add:PBGeofencesReqClientIdPayload.gfIds)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBGeofencesReqClientIdPayload::gfids() const {
  // @@protoc_insertion_point(field_list:PBGeofencesReqClientIdPayload.gfIds)
  return gfids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBGeofencesReqClientIdPayload::mutable_gfids() {
  // @@protoc_insertion_point(field_mutable_list:PBGeofencesReqClientIdPayload.gfIds)
  return &gfids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGeofenceResponse::kClientIdFieldNumber;
const int PBGeofenceResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGeofenceResponse::PBGeofenceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGeofenceResponse)
}
PBGeofenceResponse::PBGeofenceResponse(const PBGeofenceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&clientid_, &from.clientid_,
    reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&clientid_) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:PBGeofenceResponse)
}

void PBGeofenceResponse::SharedCtor() {
  ::memset(&clientid_, 0, reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&clientid_) + sizeof(error_));
  _cached_size_ = 0;
}

PBGeofenceResponse::~PBGeofenceResponse() {
  // @@protoc_insertion_point(destructor:PBGeofenceResponse)
  SharedDtor();
}

void PBGeofenceResponse::SharedDtor() {
}

void PBGeofenceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGeofenceResponse::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBGeofenceResponse& PBGeofenceResponse::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBGeofenceResponse* PBGeofenceResponse::New(::google::protobuf::Arena* arena) const {
  PBGeofenceResponse* n = new PBGeofenceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGeofenceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGeofenceResponse)
  ::memset(&clientid_, 0, reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&clientid_) + sizeof(error_));
}

bool PBGeofenceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGeofenceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 clientId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBLocationError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::PBLocationError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGeofenceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGeofenceResponse)
  return false;
#undef DO_
}

void PBGeofenceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGeofenceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 clientId = 1;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->clientid(), output);
  }

  // .PBLocationError error = 2;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBGeofenceResponse)
}

::google::protobuf::uint8* PBGeofenceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBGeofenceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 clientId = 1;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->clientid(), target);
  }

  // .PBLocationError error = 2;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGeofenceResponse)
  return target;
}

size_t PBGeofenceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGeofenceResponse)
  size_t total_size = 0;

  // uint32 clientId = 1;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clientid());
  }

  // .PBLocationError error = 2;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGeofenceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGeofenceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PBGeofenceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGeofenceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGeofenceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGeofenceResponse)
    MergeFrom(*source);
  }
}

void PBGeofenceResponse::MergeFrom(const PBGeofenceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGeofenceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void PBGeofenceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGeofenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGeofenceResponse::CopyFrom(const PBGeofenceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGeofenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGeofenceResponse::IsInitialized() const {
  return true;
}

void PBGeofenceResponse::Swap(PBGeofenceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGeofenceResponse::InternalSwap(PBGeofenceResponse* other) {
  std::swap(clientid_, other->clientid_);
  std::swap(error_, other->error_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGeofenceResponse::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGeofenceResponse

// uint32 clientId = 1;
void PBGeofenceResponse::clear_clientid() {
  clientid_ = 0u;
}
::google::protobuf::uint32 PBGeofenceResponse::clientid() const {
  // @@protoc_insertion_point(field_get:PBGeofenceResponse.clientId)
  return clientid_;
}
void PBGeofenceResponse::set_clientid(::google::protobuf::uint32 value) {

  clientid_ = value;
  // @@protoc_insertion_point(field_set:PBGeofenceResponse.clientId)
}

// .PBLocationError error = 2;
void PBGeofenceResponse::clear_error() {
  error_ = 0;
}
::PBLocationError PBGeofenceResponse::error() const {
  // @@protoc_insertion_point(field_get:PBGeofenceResponse.error)
  return static_cast< ::PBLocationError >(error_);
}
void PBGeofenceResponse::set_error(::PBLocationError value) {

  error_ = value;
  // @@protoc_insertion_point(field_set:PBGeofenceResponse.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBCollectiveResPayload::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBCollectiveResPayload::PBCollectiveResPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBCollectiveResPayload)
}
PBCollectiveResPayload::PBCollectiveResPayload(const PBCollectiveResPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resp_(from.resp_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBCollectiveResPayload)
}

void PBCollectiveResPayload::SharedCtor() {
  _cached_size_ = 0;
}

PBCollectiveResPayload::~PBCollectiveResPayload() {
  // @@protoc_insertion_point(destructor:PBCollectiveResPayload)
  SharedDtor();
}

void PBCollectiveResPayload::SharedDtor() {
}

void PBCollectiveResPayload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBCollectiveResPayload::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBCollectiveResPayload& PBCollectiveResPayload::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBCollectiveResPayload* PBCollectiveResPayload::New(::google::protobuf::Arena* arena) const {
  PBCollectiveResPayload* n = new PBCollectiveResPayload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBCollectiveResPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:PBCollectiveResPayload)
  resp_.Clear();
}

bool PBCollectiveResPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBCollectiveResPayload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBGeofenceResponse resp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBCollectiveResPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBCollectiveResPayload)
  return false;
#undef DO_
}

void PBCollectiveResPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBCollectiveResPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBGeofenceResponse resp = 1;
  for (unsigned int i = 0, n = this->resp_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resp(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBCollectiveResPayload)
}

::google::protobuf::uint8* PBCollectiveResPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBCollectiveResPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBGeofenceResponse resp = 1;
  for (unsigned int i = 0, n = this->resp_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->resp(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBCollectiveResPayload)
  return target;
}

size_t PBCollectiveResPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBCollectiveResPayload)
  size_t total_size = 0;

  // repeated .PBGeofenceResponse resp = 1;
  {
    unsigned int count = this->resp_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resp(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBCollectiveResPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBCollectiveResPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const PBCollectiveResPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBCollectiveResPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBCollectiveResPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBCollectiveResPayload)
    MergeFrom(*source);
  }
}

void PBCollectiveResPayload::MergeFrom(const PBCollectiveResPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBCollectiveResPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resp_.MergeFrom(from.resp_);
}

void PBCollectiveResPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBCollectiveResPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBCollectiveResPayload::CopyFrom(const PBCollectiveResPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBCollectiveResPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBCollectiveResPayload::IsInitialized() const {
  return true;
}

void PBCollectiveResPayload::Swap(PBCollectiveResPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBCollectiveResPayload::InternalSwap(PBCollectiveResPayload* other) {
  resp_.InternalSwap(&other->resp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBCollectiveResPayload::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBCollectiveResPayload

// repeated .PBGeofenceResponse resp = 1;
int PBCollectiveResPayload::resp_size() const {
  return resp_.size();
}
void PBCollectiveResPayload::clear_resp() {
  resp_.Clear();
}
const ::PBGeofenceResponse& PBCollectiveResPayload::resp(int index) const {
  // @@protoc_insertion_point(field_get:PBCollectiveResPayload.resp)
  return resp_.Get(index);
}
::PBGeofenceResponse* PBCollectiveResPayload::mutable_resp(int index) {
  // @@protoc_insertion_point(field_mutable:PBCollectiveResPayload.resp)
  return resp_.Mutable(index);
}
::PBGeofenceResponse* PBCollectiveResPayload::add_resp() {
  // @@protoc_insertion_point(field_add:PBCollectiveResPayload.resp)
  return resp_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBGeofenceResponse >*
PBCollectiveResPayload::mutable_resp() {
  // @@protoc_insertion_point(field_mutable_list:PBCollectiveResPayload.resp)
  return &resp_;
}
const ::google::protobuf::RepeatedPtrField< ::PBGeofenceResponse >&
PBCollectiveResPayload::resp() const {
  // @@protoc_insertion_point(field_list:PBCollectiveResPayload.resp)
  return resp_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIClientRegisterReqMsg::kMClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIClientRegisterReqMsg::PBLocAPIClientRegisterReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIClientRegisterReqMsg)
}
PBLocAPIClientRegisterReqMsg::PBLocAPIClientRegisterReqMsg(const PBLocAPIClientRegisterReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mclienttype_ = from.mclienttype_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPIClientRegisterReqMsg)
}

void PBLocAPIClientRegisterReqMsg::SharedCtor() {
  mclienttype_ = 0;
  _cached_size_ = 0;
}

PBLocAPIClientRegisterReqMsg::~PBLocAPIClientRegisterReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIClientRegisterReqMsg)
  SharedDtor();
}

void PBLocAPIClientRegisterReqMsg::SharedDtor() {
}

void PBLocAPIClientRegisterReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIClientRegisterReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIClientRegisterReqMsg& PBLocAPIClientRegisterReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIClientRegisterReqMsg* PBLocAPIClientRegisterReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIClientRegisterReqMsg* n = new PBLocAPIClientRegisterReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIClientRegisterReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIClientRegisterReqMsg)
  mclienttype_ = 0;
}

bool PBLocAPIClientRegisterReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIClientRegisterReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBClientType mClientType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mclienttype(static_cast< ::PBClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIClientRegisterReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIClientRegisterReqMsg)
  return false;
#undef DO_
}

void PBLocAPIClientRegisterReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIClientRegisterReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBClientType mClientType = 1;
  if (this->mclienttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mclienttype(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIClientRegisterReqMsg)
}

::google::protobuf::uint8* PBLocAPIClientRegisterReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIClientRegisterReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBClientType mClientType = 1;
  if (this->mclienttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mclienttype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIClientRegisterReqMsg)
  return target;
}

size_t PBLocAPIClientRegisterReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIClientRegisterReqMsg)
  size_t total_size = 0;

  // .PBClientType mClientType = 1;
  if (this->mclienttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mclienttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIClientRegisterReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIClientRegisterReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIClientRegisterReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIClientRegisterReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIClientRegisterReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIClientRegisterReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIClientRegisterReqMsg::MergeFrom(const PBLocAPIClientRegisterReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIClientRegisterReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mclienttype() != 0) {
    set_mclienttype(from.mclienttype());
  }
}

void PBLocAPIClientRegisterReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIClientRegisterReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIClientRegisterReqMsg::CopyFrom(const PBLocAPIClientRegisterReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIClientRegisterReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIClientRegisterReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIClientRegisterReqMsg::Swap(PBLocAPIClientRegisterReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIClientRegisterReqMsg::InternalSwap(PBLocAPIClientRegisterReqMsg* other) {
  std::swap(mclienttype_, other->mclienttype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIClientRegisterReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIClientRegisterReqMsg

// .PBClientType mClientType = 1;
void PBLocAPIClientRegisterReqMsg::clear_mclienttype() {
  mclienttype_ = 0;
}
::PBClientType PBLocAPIClientRegisterReqMsg::mclienttype() const {
  // @@protoc_insertion_point(field_get:PBLocAPIClientRegisterReqMsg.mClientType)
  return static_cast< ::PBClientType >(mclienttype_);
}
void PBLocAPIClientRegisterReqMsg::set_mclienttype(::PBClientType value) {

  mclienttype_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIClientRegisterReqMsg.mClientType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPICapabilitiesIndMsg::kCapabilitiesMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPICapabilitiesIndMsg::PBLocAPICapabilitiesIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPICapabilitiesIndMsg)
}
PBLocAPICapabilitiesIndMsg::PBLocAPICapabilitiesIndMsg(const PBLocAPICapabilitiesIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  capabilitiesmask_ = from.capabilitiesmask_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPICapabilitiesIndMsg)
}

void PBLocAPICapabilitiesIndMsg::SharedCtor() {
  capabilitiesmask_ = 0u;
  _cached_size_ = 0;
}

PBLocAPICapabilitiesIndMsg::~PBLocAPICapabilitiesIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPICapabilitiesIndMsg)
  SharedDtor();
}

void PBLocAPICapabilitiesIndMsg::SharedDtor() {
}

void PBLocAPICapabilitiesIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPICapabilitiesIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPICapabilitiesIndMsg& PBLocAPICapabilitiesIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPICapabilitiesIndMsg* PBLocAPICapabilitiesIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPICapabilitiesIndMsg* n = new PBLocAPICapabilitiesIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPICapabilitiesIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPICapabilitiesIndMsg)
  capabilitiesmask_ = 0u;
}

bool PBLocAPICapabilitiesIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPICapabilitiesIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 capabilitiesMask = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &capabilitiesmask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPICapabilitiesIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPICapabilitiesIndMsg)
  return false;
#undef DO_
}

void PBLocAPICapabilitiesIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPICapabilitiesIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 capabilitiesMask = 1;
  if (this->capabilitiesmask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->capabilitiesmask(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPICapabilitiesIndMsg)
}

::google::protobuf::uint8* PBLocAPICapabilitiesIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPICapabilitiesIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 capabilitiesMask = 1;
  if (this->capabilitiesmask() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->capabilitiesmask(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPICapabilitiesIndMsg)
  return target;
}

size_t PBLocAPICapabilitiesIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPICapabilitiesIndMsg)
  size_t total_size = 0;

  // uint32 capabilitiesMask = 1;
  if (this->capabilitiesmask() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->capabilitiesmask());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPICapabilitiesIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPICapabilitiesIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPICapabilitiesIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPICapabilitiesIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPICapabilitiesIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPICapabilitiesIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPICapabilitiesIndMsg::MergeFrom(const PBLocAPICapabilitiesIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPICapabilitiesIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.capabilitiesmask() != 0) {
    set_capabilitiesmask(from.capabilitiesmask());
  }
}

void PBLocAPICapabilitiesIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPICapabilitiesIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPICapabilitiesIndMsg::CopyFrom(const PBLocAPICapabilitiesIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPICapabilitiesIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPICapabilitiesIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPICapabilitiesIndMsg::Swap(PBLocAPICapabilitiesIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPICapabilitiesIndMsg::InternalSwap(PBLocAPICapabilitiesIndMsg* other) {
  std::swap(capabilitiesmask_, other->capabilitiesmask_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPICapabilitiesIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPICapabilitiesIndMsg

// uint32 capabilitiesMask = 1;
void PBLocAPICapabilitiesIndMsg::clear_capabilitiesmask() {
  capabilitiesmask_ = 0u;
}
::google::protobuf::uint32 PBLocAPICapabilitiesIndMsg::capabilitiesmask() const {
  // @@protoc_insertion_point(field_get:PBLocAPICapabilitiesIndMsg.capabilitiesMask)
  return capabilitiesmask_;
}
void PBLocAPICapabilitiesIndMsg::set_capabilitiesmask(::google::protobuf::uint32 value) {

  capabilitiesmask_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPICapabilitiesIndMsg.capabilitiesMask)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIGenericRespMsg::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIGenericRespMsg::PBLocAPIGenericRespMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIGenericRespMsg)
}
PBLocAPIGenericRespMsg::PBLocAPIGenericRespMsg(const PBLocAPIGenericRespMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPIGenericRespMsg)
}

void PBLocAPIGenericRespMsg::SharedCtor() {
  err_ = 0;
  _cached_size_ = 0;
}

PBLocAPIGenericRespMsg::~PBLocAPIGenericRespMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIGenericRespMsg)
  SharedDtor();
}

void PBLocAPIGenericRespMsg::SharedDtor() {
}

void PBLocAPIGenericRespMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIGenericRespMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIGenericRespMsg& PBLocAPIGenericRespMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIGenericRespMsg* PBLocAPIGenericRespMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIGenericRespMsg* n = new PBLocAPIGenericRespMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIGenericRespMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIGenericRespMsg)
  err_ = 0;
}

bool PBLocAPIGenericRespMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIGenericRespMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocationError err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_err(static_cast< ::PBLocationError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIGenericRespMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIGenericRespMsg)
  return false;
#undef DO_
}

void PBLocAPIGenericRespMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIGenericRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationError err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIGenericRespMsg)
}

::google::protobuf::uint8* PBLocAPIGenericRespMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIGenericRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationError err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIGenericRespMsg)
  return target;
}

size_t PBLocAPIGenericRespMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIGenericRespMsg)
  size_t total_size = 0;

  // .PBLocationError err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIGenericRespMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIGenericRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIGenericRespMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIGenericRespMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIGenericRespMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIGenericRespMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIGenericRespMsg::MergeFrom(const PBLocAPIGenericRespMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIGenericRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err() != 0) {
    set_err(from.err());
  }
}

void PBLocAPIGenericRespMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIGenericRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIGenericRespMsg::CopyFrom(const PBLocAPIGenericRespMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIGenericRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIGenericRespMsg::IsInitialized() const {
  return true;
}

void PBLocAPIGenericRespMsg::Swap(PBLocAPIGenericRespMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIGenericRespMsg::InternalSwap(PBLocAPIGenericRespMsg* other) {
  std::swap(err_, other->err_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIGenericRespMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIGenericRespMsg

// .PBLocationError err = 1;
void PBLocAPIGenericRespMsg::clear_err() {
  err_ = 0;
}
::PBLocationError PBLocAPIGenericRespMsg::err() const {
  // @@protoc_insertion_point(field_get:PBLocAPIGenericRespMsg.err)
  return static_cast< ::PBLocationError >(err_);
}
void PBLocAPIGenericRespMsg::set_err(::PBLocationError value) {

  err_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIGenericRespMsg.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPICollectiveRespMsg::kCollectiveResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPICollectiveRespMsg::PBLocAPICollectiveRespMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPICollectiveRespMsg)
}
PBLocAPICollectiveRespMsg::PBLocAPICollectiveRespMsg(const PBLocAPICollectiveRespMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_collectiveres()) {
    collectiveres_ = new ::PBCollectiveResPayload(*from.collectiveres_);
  } else {
    collectiveres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPICollectiveRespMsg)
}

void PBLocAPICollectiveRespMsg::SharedCtor() {
  collectiveres_ = NULL;
  _cached_size_ = 0;
}

PBLocAPICollectiveRespMsg::~PBLocAPICollectiveRespMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPICollectiveRespMsg)
  SharedDtor();
}

void PBLocAPICollectiveRespMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete collectiveres_;
  }
}

void PBLocAPICollectiveRespMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPICollectiveRespMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPICollectiveRespMsg& PBLocAPICollectiveRespMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPICollectiveRespMsg* PBLocAPICollectiveRespMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPICollectiveRespMsg* n = new PBLocAPICollectiveRespMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPICollectiveRespMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPICollectiveRespMsg)
  if (GetArenaNoVirtual() == NULL && collectiveres_ != NULL) {
    delete collectiveres_;
  }
  collectiveres_ = NULL;
}

bool PBLocAPICollectiveRespMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPICollectiveRespMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBCollectiveResPayload collectiveRes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_collectiveres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPICollectiveRespMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPICollectiveRespMsg)
  return false;
#undef DO_
}

void PBLocAPICollectiveRespMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPICollectiveRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBCollectiveResPayload collectiveRes = 1;
  if (this->has_collectiveres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->collectiveres_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPICollectiveRespMsg)
}

::google::protobuf::uint8* PBLocAPICollectiveRespMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPICollectiveRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBCollectiveResPayload collectiveRes = 1;
  if (this->has_collectiveres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->collectiveres_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPICollectiveRespMsg)
  return target;
}

size_t PBLocAPICollectiveRespMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPICollectiveRespMsg)
  size_t total_size = 0;

  // .PBCollectiveResPayload collectiveRes = 1;
  if (this->has_collectiveres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->collectiveres_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPICollectiveRespMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPICollectiveRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPICollectiveRespMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPICollectiveRespMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPICollectiveRespMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPICollectiveRespMsg)
    MergeFrom(*source);
  }
}

void PBLocAPICollectiveRespMsg::MergeFrom(const PBLocAPICollectiveRespMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPICollectiveRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_collectiveres()) {
    mutable_collectiveres()->::PBCollectiveResPayload::MergeFrom(from.collectiveres());
  }
}

void PBLocAPICollectiveRespMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPICollectiveRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPICollectiveRespMsg::CopyFrom(const PBLocAPICollectiveRespMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPICollectiveRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPICollectiveRespMsg::IsInitialized() const {
  return true;
}

void PBLocAPICollectiveRespMsg::Swap(PBLocAPICollectiveRespMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPICollectiveRespMsg::InternalSwap(PBLocAPICollectiveRespMsg* other) {
  std::swap(collectiveres_, other->collectiveres_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPICollectiveRespMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPICollectiveRespMsg

// .PBCollectiveResPayload collectiveRes = 1;
bool PBLocAPICollectiveRespMsg::has_collectiveres() const {
  return this != internal_default_instance() && collectiveres_ != NULL;
}
void PBLocAPICollectiveRespMsg::clear_collectiveres() {
  if (GetArenaNoVirtual() == NULL && collectiveres_ != NULL) delete collectiveres_;
  collectiveres_ = NULL;
}
const ::PBCollectiveResPayload& PBLocAPICollectiveRespMsg::collectiveres() const {
  // @@protoc_insertion_point(field_get:PBLocAPICollectiveRespMsg.collectiveRes)
  return collectiveres_ != NULL ? *collectiveres_
                         : *::PBCollectiveResPayload::internal_default_instance();
}
::PBCollectiveResPayload* PBLocAPICollectiveRespMsg::mutable_collectiveres() {

  if (collectiveres_ == NULL) {
    collectiveres_ = new ::PBCollectiveResPayload;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPICollectiveRespMsg.collectiveRes)
  return collectiveres_;
}
::PBCollectiveResPayload* PBLocAPICollectiveRespMsg::release_collectiveres() {
  // @@protoc_insertion_point(field_release:PBLocAPICollectiveRespMsg.collectiveRes)

  ::PBCollectiveResPayload* temp = collectiveres_;
  collectiveres_ = NULL;
  return temp;
}
void PBLocAPICollectiveRespMsg::set_allocated_collectiveres(::PBCollectiveResPayload* collectiveres) {
  delete collectiveres_;
  collectiveres_ = collectiveres;
  if (collectiveres) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPICollectiveRespMsg.collectiveRes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIStartTrackingReqMsg::kLocOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIStartTrackingReqMsg::PBLocAPIStartTrackingReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIStartTrackingReqMsg)
}
PBLocAPIStartTrackingReqMsg::PBLocAPIStartTrackingReqMsg(const PBLocAPIStartTrackingReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_locoptions()) {
    locoptions_ = new ::PBLocationOptions(*from.locoptions_);
  } else {
    locoptions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIStartTrackingReqMsg)
}

void PBLocAPIStartTrackingReqMsg::SharedCtor() {
  locoptions_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIStartTrackingReqMsg::~PBLocAPIStartTrackingReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIStartTrackingReqMsg)
  SharedDtor();
}

void PBLocAPIStartTrackingReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete locoptions_;
  }
}

void PBLocAPIStartTrackingReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIStartTrackingReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIStartTrackingReqMsg& PBLocAPIStartTrackingReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIStartTrackingReqMsg* PBLocAPIStartTrackingReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIStartTrackingReqMsg* n = new PBLocAPIStartTrackingReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIStartTrackingReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIStartTrackingReqMsg)
  if (GetArenaNoVirtual() == NULL && locoptions_ != NULL) {
    delete locoptions_;
  }
  locoptions_ = NULL;
}

bool PBLocAPIStartTrackingReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIStartTrackingReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocationOptions locOptions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locoptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIStartTrackingReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIStartTrackingReqMsg)
  return false;
#undef DO_
}

void PBLocAPIStartTrackingReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIStartTrackingReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationOptions locOptions = 1;
  if (this->has_locoptions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->locoptions_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIStartTrackingReqMsg)
}

::google::protobuf::uint8* PBLocAPIStartTrackingReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIStartTrackingReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationOptions locOptions = 1;
  if (this->has_locoptions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->locoptions_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIStartTrackingReqMsg)
  return target;
}

size_t PBLocAPIStartTrackingReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIStartTrackingReqMsg)
  size_t total_size = 0;

  // .PBLocationOptions locOptions = 1;
  if (this->has_locoptions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locoptions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIStartTrackingReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIStartTrackingReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIStartTrackingReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIStartTrackingReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIStartTrackingReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIStartTrackingReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIStartTrackingReqMsg::MergeFrom(const PBLocAPIStartTrackingReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIStartTrackingReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_locoptions()) {
    mutable_locoptions()->::PBLocationOptions::MergeFrom(from.locoptions());
  }
}

void PBLocAPIStartTrackingReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIStartTrackingReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIStartTrackingReqMsg::CopyFrom(const PBLocAPIStartTrackingReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIStartTrackingReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIStartTrackingReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIStartTrackingReqMsg::Swap(PBLocAPIStartTrackingReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIStartTrackingReqMsg::InternalSwap(PBLocAPIStartTrackingReqMsg* other) {
  std::swap(locoptions_, other->locoptions_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIStartTrackingReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIStartTrackingReqMsg

// .PBLocationOptions locOptions = 1;
bool PBLocAPIStartTrackingReqMsg::has_locoptions() const {
  return this != internal_default_instance() && locoptions_ != NULL;
}
void PBLocAPIStartTrackingReqMsg::clear_locoptions() {
  if (GetArenaNoVirtual() == NULL && locoptions_ != NULL) delete locoptions_;
  locoptions_ = NULL;
}
const ::PBLocationOptions& PBLocAPIStartTrackingReqMsg::locoptions() const {
  // @@protoc_insertion_point(field_get:PBLocAPIStartTrackingReqMsg.locOptions)
  return locoptions_ != NULL ? *locoptions_
                         : *::PBLocationOptions::internal_default_instance();
}
::PBLocationOptions* PBLocAPIStartTrackingReqMsg::mutable_locoptions() {

  if (locoptions_ == NULL) {
    locoptions_ = new ::PBLocationOptions;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIStartTrackingReqMsg.locOptions)
  return locoptions_;
}
::PBLocationOptions* PBLocAPIStartTrackingReqMsg::release_locoptions() {
  // @@protoc_insertion_point(field_release:PBLocAPIStartTrackingReqMsg.locOptions)

  ::PBLocationOptions* temp = locoptions_;
  locoptions_ = NULL;
  return temp;
}
void PBLocAPIStartTrackingReqMsg::set_allocated_locoptions(::PBLocationOptions* locoptions) {
  delete locoptions_;
  locoptions_ = locoptions;
  if (locoptions) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIStartTrackingReqMsg.locOptions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIUpdateCallbacksReqMsg::kLocationCallbacksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIUpdateCallbacksReqMsg::PBLocAPIUpdateCallbacksReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIUpdateCallbacksReqMsg)
}
PBLocAPIUpdateCallbacksReqMsg::PBLocAPIUpdateCallbacksReqMsg(const PBLocAPIUpdateCallbacksReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  locationcallbacks_ = from.locationcallbacks_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPIUpdateCallbacksReqMsg)
}

void PBLocAPIUpdateCallbacksReqMsg::SharedCtor() {
  locationcallbacks_ = 0u;
  _cached_size_ = 0;
}

PBLocAPIUpdateCallbacksReqMsg::~PBLocAPIUpdateCallbacksReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIUpdateCallbacksReqMsg)
  SharedDtor();
}

void PBLocAPIUpdateCallbacksReqMsg::SharedDtor() {
}

void PBLocAPIUpdateCallbacksReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIUpdateCallbacksReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIUpdateCallbacksReqMsg& PBLocAPIUpdateCallbacksReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIUpdateCallbacksReqMsg* PBLocAPIUpdateCallbacksReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIUpdateCallbacksReqMsg* n = new PBLocAPIUpdateCallbacksReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIUpdateCallbacksReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIUpdateCallbacksReqMsg)
  locationcallbacks_ = 0u;
}

bool PBLocAPIUpdateCallbacksReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIUpdateCallbacksReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 locationCallbacks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locationcallbacks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIUpdateCallbacksReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIUpdateCallbacksReqMsg)
  return false;
#undef DO_
}

void PBLocAPIUpdateCallbacksReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIUpdateCallbacksReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 locationCallbacks = 1;
  if (this->locationcallbacks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->locationcallbacks(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIUpdateCallbacksReqMsg)
}

::google::protobuf::uint8* PBLocAPIUpdateCallbacksReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIUpdateCallbacksReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 locationCallbacks = 1;
  if (this->locationcallbacks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->locationcallbacks(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIUpdateCallbacksReqMsg)
  return target;
}

size_t PBLocAPIUpdateCallbacksReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIUpdateCallbacksReqMsg)
  size_t total_size = 0;

  // uint32 locationCallbacks = 1;
  if (this->locationcallbacks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->locationcallbacks());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIUpdateCallbacksReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIUpdateCallbacksReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIUpdateCallbacksReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIUpdateCallbacksReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIUpdateCallbacksReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIUpdateCallbacksReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIUpdateCallbacksReqMsg::MergeFrom(const PBLocAPIUpdateCallbacksReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIUpdateCallbacksReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.locationcallbacks() != 0) {
    set_locationcallbacks(from.locationcallbacks());
  }
}

void PBLocAPIUpdateCallbacksReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIUpdateCallbacksReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIUpdateCallbacksReqMsg::CopyFrom(const PBLocAPIUpdateCallbacksReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIUpdateCallbacksReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIUpdateCallbacksReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIUpdateCallbacksReqMsg::Swap(PBLocAPIUpdateCallbacksReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIUpdateCallbacksReqMsg::InternalSwap(PBLocAPIUpdateCallbacksReqMsg* other) {
  std::swap(locationcallbacks_, other->locationcallbacks_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIUpdateCallbacksReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIUpdateCallbacksReqMsg

// uint32 locationCallbacks = 1;
void PBLocAPIUpdateCallbacksReqMsg::clear_locationcallbacks() {
  locationcallbacks_ = 0u;
}
::google::protobuf::uint32 PBLocAPIUpdateCallbacksReqMsg::locationcallbacks() const {
  // @@protoc_insertion_point(field_get:PBLocAPIUpdateCallbacksReqMsg.locationCallbacks)
  return locationcallbacks_;
}
void PBLocAPIUpdateCallbacksReqMsg::set_locationcallbacks(::google::protobuf::uint32 value) {

  locationcallbacks_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIUpdateCallbacksReqMsg.locationCallbacks)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIUpdateTrackingOptionsReqMsg::kLocOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIUpdateTrackingOptionsReqMsg::PBLocAPIUpdateTrackingOptionsReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIUpdateTrackingOptionsReqMsg)
}
PBLocAPIUpdateTrackingOptionsReqMsg::PBLocAPIUpdateTrackingOptionsReqMsg(const PBLocAPIUpdateTrackingOptionsReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_locoptions()) {
    locoptions_ = new ::PBLocationOptions(*from.locoptions_);
  } else {
    locoptions_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIUpdateTrackingOptionsReqMsg)
}

void PBLocAPIUpdateTrackingOptionsReqMsg::SharedCtor() {
  locoptions_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIUpdateTrackingOptionsReqMsg::~PBLocAPIUpdateTrackingOptionsReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIUpdateTrackingOptionsReqMsg)
  SharedDtor();
}

void PBLocAPIUpdateTrackingOptionsReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete locoptions_;
  }
}

void PBLocAPIUpdateTrackingOptionsReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIUpdateTrackingOptionsReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIUpdateTrackingOptionsReqMsg& PBLocAPIUpdateTrackingOptionsReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIUpdateTrackingOptionsReqMsg* PBLocAPIUpdateTrackingOptionsReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIUpdateTrackingOptionsReqMsg* n = new PBLocAPIUpdateTrackingOptionsReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIUpdateTrackingOptionsReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  if (GetArenaNoVirtual() == NULL && locoptions_ != NULL) {
    delete locoptions_;
  }
  locoptions_ = NULL;
}

bool PBLocAPIUpdateTrackingOptionsReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocationOptions locOptions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locoptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIUpdateTrackingOptionsReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIUpdateTrackingOptionsReqMsg)
  return false;
#undef DO_
}

void PBLocAPIUpdateTrackingOptionsReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationOptions locOptions = 1;
  if (this->has_locoptions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->locoptions_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIUpdateTrackingOptionsReqMsg)
}

::google::protobuf::uint8* PBLocAPIUpdateTrackingOptionsReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationOptions locOptions = 1;
  if (this->has_locoptions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->locoptions_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIUpdateTrackingOptionsReqMsg)
  return target;
}

size_t PBLocAPIUpdateTrackingOptionsReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  size_t total_size = 0;

  // .PBLocationOptions locOptions = 1;
  if (this->has_locoptions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locoptions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIUpdateTrackingOptionsReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIUpdateTrackingOptionsReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIUpdateTrackingOptionsReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIUpdateTrackingOptionsReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIUpdateTrackingOptionsReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIUpdateTrackingOptionsReqMsg::MergeFrom(const PBLocAPIUpdateTrackingOptionsReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_locoptions()) {
    mutable_locoptions()->::PBLocationOptions::MergeFrom(from.locoptions());
  }
}

void PBLocAPIUpdateTrackingOptionsReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIUpdateTrackingOptionsReqMsg::CopyFrom(const PBLocAPIUpdateTrackingOptionsReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIUpdateTrackingOptionsReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIUpdateTrackingOptionsReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIUpdateTrackingOptionsReqMsg::Swap(PBLocAPIUpdateTrackingOptionsReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIUpdateTrackingOptionsReqMsg::InternalSwap(PBLocAPIUpdateTrackingOptionsReqMsg* other) {
  std::swap(locoptions_, other->locoptions_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIUpdateTrackingOptionsReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIUpdateTrackingOptionsReqMsg

// .PBLocationOptions locOptions = 1;
bool PBLocAPIUpdateTrackingOptionsReqMsg::has_locoptions() const {
  return this != internal_default_instance() && locoptions_ != NULL;
}
void PBLocAPIUpdateTrackingOptionsReqMsg::clear_locoptions() {
  if (GetArenaNoVirtual() == NULL && locoptions_ != NULL) delete locoptions_;
  locoptions_ = NULL;
}
const ::PBLocationOptions& PBLocAPIUpdateTrackingOptionsReqMsg::locoptions() const {
  // @@protoc_insertion_point(field_get:PBLocAPIUpdateTrackingOptionsReqMsg.locOptions)
  return locoptions_ != NULL ? *locoptions_
                         : *::PBLocationOptions::internal_default_instance();
}
::PBLocationOptions* PBLocAPIUpdateTrackingOptionsReqMsg::mutable_locoptions() {

  if (locoptions_ == NULL) {
    locoptions_ = new ::PBLocationOptions;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIUpdateTrackingOptionsReqMsg.locOptions)
  return locoptions_;
}
::PBLocationOptions* PBLocAPIUpdateTrackingOptionsReqMsg::release_locoptions() {
  // @@protoc_insertion_point(field_release:PBLocAPIUpdateTrackingOptionsReqMsg.locOptions)

  ::PBLocationOptions* temp = locoptions_;
  locoptions_ = NULL;
  return temp;
}
void PBLocAPIUpdateTrackingOptionsReqMsg::set_allocated_locoptions(::PBLocationOptions* locoptions) {
  delete locoptions_;
  locoptions_ = locoptions;
  if (locoptions) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIUpdateTrackingOptionsReqMsg.locOptions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIStartBatchingReqMsg::kIntervalInMsFieldNumber;
const int PBLocAPIStartBatchingReqMsg::kDistanceInMetersFieldNumber;
const int PBLocAPIStartBatchingReqMsg::kBatchingModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIStartBatchingReqMsg::PBLocAPIStartBatchingReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIStartBatchingReqMsg)
}
PBLocAPIStartBatchingReqMsg::PBLocAPIStartBatchingReqMsg(const PBLocAPIStartBatchingReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&intervalinms_, &from.intervalinms_,
    reinterpret_cast<char*>(&batchingmode_) -
    reinterpret_cast<char*>(&intervalinms_) + sizeof(batchingmode_));
  // @@protoc_insertion_point(copy_constructor:PBLocAPIStartBatchingReqMsg)
}

void PBLocAPIStartBatchingReqMsg::SharedCtor() {
  ::memset(&intervalinms_, 0, reinterpret_cast<char*>(&batchingmode_) -
    reinterpret_cast<char*>(&intervalinms_) + sizeof(batchingmode_));
  _cached_size_ = 0;
}

PBLocAPIStartBatchingReqMsg::~PBLocAPIStartBatchingReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIStartBatchingReqMsg)
  SharedDtor();
}

void PBLocAPIStartBatchingReqMsg::SharedDtor() {
}

void PBLocAPIStartBatchingReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIStartBatchingReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIStartBatchingReqMsg& PBLocAPIStartBatchingReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIStartBatchingReqMsg* PBLocAPIStartBatchingReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIStartBatchingReqMsg* n = new PBLocAPIStartBatchingReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIStartBatchingReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIStartBatchingReqMsg)
  ::memset(&intervalinms_, 0, reinterpret_cast<char*>(&batchingmode_) -
    reinterpret_cast<char*>(&intervalinms_) + sizeof(batchingmode_));
}

bool PBLocAPIStartBatchingReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIStartBatchingReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 intervalInMs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intervalinms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 distanceInMeters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &distanceinmeters_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBBatchingMode batchingMode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_batchingmode(static_cast< ::PBBatchingMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIStartBatchingReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIStartBatchingReqMsg)
  return false;
#undef DO_
}

void PBLocAPIStartBatchingReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIStartBatchingReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 intervalInMs = 1;
  if (this->intervalinms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->intervalinms(), output);
  }

  // uint32 distanceInMeters = 2;
  if (this->distanceinmeters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->distanceinmeters(), output);
  }

  // .PBBatchingMode batchingMode = 3;
  if (this->batchingmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->batchingmode(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIStartBatchingReqMsg)
}

::google::protobuf::uint8* PBLocAPIStartBatchingReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIStartBatchingReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 intervalInMs = 1;
  if (this->intervalinms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->intervalinms(), target);
  }

  // uint32 distanceInMeters = 2;
  if (this->distanceinmeters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->distanceinmeters(), target);
  }

  // .PBBatchingMode batchingMode = 3;
  if (this->batchingmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->batchingmode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIStartBatchingReqMsg)
  return target;
}

size_t PBLocAPIStartBatchingReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIStartBatchingReqMsg)
  size_t total_size = 0;

  // uint32 intervalInMs = 1;
  if (this->intervalinms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intervalinms());
  }

  // uint32 distanceInMeters = 2;
  if (this->distanceinmeters() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->distanceinmeters());
  }

  // .PBBatchingMode batchingMode = 3;
  if (this->batchingmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->batchingmode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIStartBatchingReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIStartBatchingReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIStartBatchingReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIStartBatchingReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIStartBatchingReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIStartBatchingReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIStartBatchingReqMsg::MergeFrom(const PBLocAPIStartBatchingReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIStartBatchingReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.intervalinms() != 0) {
    set_intervalinms(from.intervalinms());
  }
  if (from.distanceinmeters() != 0) {
    set_distanceinmeters(from.distanceinmeters());
  }
  if (from.batchingmode() != 0) {
    set_batchingmode(from.batchingmode());
  }
}

void PBLocAPIStartBatchingReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIStartBatchingReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIStartBatchingReqMsg::CopyFrom(const PBLocAPIStartBatchingReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIStartBatchingReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIStartBatchingReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIStartBatchingReqMsg::Swap(PBLocAPIStartBatchingReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIStartBatchingReqMsg::InternalSwap(PBLocAPIStartBatchingReqMsg* other) {
  std::swap(intervalinms_, other->intervalinms_);
  std::swap(distanceinmeters_, other->distanceinmeters_);
  std::swap(batchingmode_, other->batchingmode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIStartBatchingReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIStartBatchingReqMsg

// uint32 intervalInMs = 1;
void PBLocAPIStartBatchingReqMsg::clear_intervalinms() {
  intervalinms_ = 0u;
}
::google::protobuf::uint32 PBLocAPIStartBatchingReqMsg::intervalinms() const {
  // @@protoc_insertion_point(field_get:PBLocAPIStartBatchingReqMsg.intervalInMs)
  return intervalinms_;
}
void PBLocAPIStartBatchingReqMsg::set_intervalinms(::google::protobuf::uint32 value) {

  intervalinms_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIStartBatchingReqMsg.intervalInMs)
}

// uint32 distanceInMeters = 2;
void PBLocAPIStartBatchingReqMsg::clear_distanceinmeters() {
  distanceinmeters_ = 0u;
}
::google::protobuf::uint32 PBLocAPIStartBatchingReqMsg::distanceinmeters() const {
  // @@protoc_insertion_point(field_get:PBLocAPIStartBatchingReqMsg.distanceInMeters)
  return distanceinmeters_;
}
void PBLocAPIStartBatchingReqMsg::set_distanceinmeters(::google::protobuf::uint32 value) {

  distanceinmeters_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIStartBatchingReqMsg.distanceInMeters)
}

// .PBBatchingMode batchingMode = 3;
void PBLocAPIStartBatchingReqMsg::clear_batchingmode() {
  batchingmode_ = 0;
}
::PBBatchingMode PBLocAPIStartBatchingReqMsg::batchingmode() const {
  // @@protoc_insertion_point(field_get:PBLocAPIStartBatchingReqMsg.batchingMode)
  return static_cast< ::PBBatchingMode >(batchingmode_);
}
void PBLocAPIStartBatchingReqMsg::set_batchingmode(::PBBatchingMode value) {

  batchingmode_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIStartBatchingReqMsg.batchingMode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIUpdateBatchingOptionsReqMsg::kIntervalInMsFieldNumber;
const int PBLocAPIUpdateBatchingOptionsReqMsg::kDistanceInMetersFieldNumber;
const int PBLocAPIUpdateBatchingOptionsReqMsg::kBatchingModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIUpdateBatchingOptionsReqMsg::PBLocAPIUpdateBatchingOptionsReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIUpdateBatchingOptionsReqMsg)
}
PBLocAPIUpdateBatchingOptionsReqMsg::PBLocAPIUpdateBatchingOptionsReqMsg(const PBLocAPIUpdateBatchingOptionsReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&intervalinms_, &from.intervalinms_,
    reinterpret_cast<char*>(&batchingmode_) -
    reinterpret_cast<char*>(&intervalinms_) + sizeof(batchingmode_));
  // @@protoc_insertion_point(copy_constructor:PBLocAPIUpdateBatchingOptionsReqMsg)
}

void PBLocAPIUpdateBatchingOptionsReqMsg::SharedCtor() {
  ::memset(&intervalinms_, 0, reinterpret_cast<char*>(&batchingmode_) -
    reinterpret_cast<char*>(&intervalinms_) + sizeof(batchingmode_));
  _cached_size_ = 0;
}

PBLocAPIUpdateBatchingOptionsReqMsg::~PBLocAPIUpdateBatchingOptionsReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIUpdateBatchingOptionsReqMsg)
  SharedDtor();
}

void PBLocAPIUpdateBatchingOptionsReqMsg::SharedDtor() {
}

void PBLocAPIUpdateBatchingOptionsReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIUpdateBatchingOptionsReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIUpdateBatchingOptionsReqMsg& PBLocAPIUpdateBatchingOptionsReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIUpdateBatchingOptionsReqMsg* PBLocAPIUpdateBatchingOptionsReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIUpdateBatchingOptionsReqMsg* n = new PBLocAPIUpdateBatchingOptionsReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIUpdateBatchingOptionsReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  ::memset(&intervalinms_, 0, reinterpret_cast<char*>(&batchingmode_) -
    reinterpret_cast<char*>(&intervalinms_) + sizeof(batchingmode_));
}

bool PBLocAPIUpdateBatchingOptionsReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 intervalInMs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intervalinms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 distanceInMeters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &distanceinmeters_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBBatchingMode batchingMode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_batchingmode(static_cast< ::PBBatchingMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIUpdateBatchingOptionsReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIUpdateBatchingOptionsReqMsg)
  return false;
#undef DO_
}

void PBLocAPIUpdateBatchingOptionsReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 intervalInMs = 1;
  if (this->intervalinms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->intervalinms(), output);
  }

  // uint32 distanceInMeters = 2;
  if (this->distanceinmeters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->distanceinmeters(), output);
  }

  // .PBBatchingMode batchingMode = 3;
  if (this->batchingmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->batchingmode(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIUpdateBatchingOptionsReqMsg)
}

::google::protobuf::uint8* PBLocAPIUpdateBatchingOptionsReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 intervalInMs = 1;
  if (this->intervalinms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->intervalinms(), target);
  }

  // uint32 distanceInMeters = 2;
  if (this->distanceinmeters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->distanceinmeters(), target);
  }

  // .PBBatchingMode batchingMode = 3;
  if (this->batchingmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->batchingmode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIUpdateBatchingOptionsReqMsg)
  return target;
}

size_t PBLocAPIUpdateBatchingOptionsReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  size_t total_size = 0;

  // uint32 intervalInMs = 1;
  if (this->intervalinms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intervalinms());
  }

  // uint32 distanceInMeters = 2;
  if (this->distanceinmeters() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->distanceinmeters());
  }

  // .PBBatchingMode batchingMode = 3;
  if (this->batchingmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->batchingmode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIUpdateBatchingOptionsReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIUpdateBatchingOptionsReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIUpdateBatchingOptionsReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIUpdateBatchingOptionsReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIUpdateBatchingOptionsReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIUpdateBatchingOptionsReqMsg::MergeFrom(const PBLocAPIUpdateBatchingOptionsReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.intervalinms() != 0) {
    set_intervalinms(from.intervalinms());
  }
  if (from.distanceinmeters() != 0) {
    set_distanceinmeters(from.distanceinmeters());
  }
  if (from.batchingmode() != 0) {
    set_batchingmode(from.batchingmode());
  }
}

void PBLocAPIUpdateBatchingOptionsReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIUpdateBatchingOptionsReqMsg::CopyFrom(const PBLocAPIUpdateBatchingOptionsReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIUpdateBatchingOptionsReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIUpdateBatchingOptionsReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIUpdateBatchingOptionsReqMsg::Swap(PBLocAPIUpdateBatchingOptionsReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIUpdateBatchingOptionsReqMsg::InternalSwap(PBLocAPIUpdateBatchingOptionsReqMsg* other) {
  std::swap(intervalinms_, other->intervalinms_);
  std::swap(distanceinmeters_, other->distanceinmeters_);
  std::swap(batchingmode_, other->batchingmode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIUpdateBatchingOptionsReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIUpdateBatchingOptionsReqMsg

// uint32 intervalInMs = 1;
void PBLocAPIUpdateBatchingOptionsReqMsg::clear_intervalinms() {
  intervalinms_ = 0u;
}
::google::protobuf::uint32 PBLocAPIUpdateBatchingOptionsReqMsg::intervalinms() const {
  // @@protoc_insertion_point(field_get:PBLocAPIUpdateBatchingOptionsReqMsg.intervalInMs)
  return intervalinms_;
}
void PBLocAPIUpdateBatchingOptionsReqMsg::set_intervalinms(::google::protobuf::uint32 value) {

  intervalinms_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIUpdateBatchingOptionsReqMsg.intervalInMs)
}

// uint32 distanceInMeters = 2;
void PBLocAPIUpdateBatchingOptionsReqMsg::clear_distanceinmeters() {
  distanceinmeters_ = 0u;
}
::google::protobuf::uint32 PBLocAPIUpdateBatchingOptionsReqMsg::distanceinmeters() const {
  // @@protoc_insertion_point(field_get:PBLocAPIUpdateBatchingOptionsReqMsg.distanceInMeters)
  return distanceinmeters_;
}
void PBLocAPIUpdateBatchingOptionsReqMsg::set_distanceinmeters(::google::protobuf::uint32 value) {

  distanceinmeters_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIUpdateBatchingOptionsReqMsg.distanceInMeters)
}

// .PBBatchingMode batchingMode = 3;
void PBLocAPIUpdateBatchingOptionsReqMsg::clear_batchingmode() {
  batchingmode_ = 0;
}
::PBBatchingMode PBLocAPIUpdateBatchingOptionsReqMsg::batchingmode() const {
  // @@protoc_insertion_point(field_get:PBLocAPIUpdateBatchingOptionsReqMsg.batchingMode)
  return static_cast< ::PBBatchingMode >(batchingmode_);
}
void PBLocAPIUpdateBatchingOptionsReqMsg::set_batchingmode(::PBBatchingMode value) {

  batchingmode_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIUpdateBatchingOptionsReqMsg.batchingMode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIAddGeofencesReqMsg::kGeofencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIAddGeofencesReqMsg::PBLocAPIAddGeofencesReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIAddGeofencesReqMsg)
}
PBLocAPIAddGeofencesReqMsg::PBLocAPIAddGeofencesReqMsg(const PBLocAPIAddGeofencesReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geofences()) {
    geofences_ = new ::PBGeofencesAddedReqPayload(*from.geofences_);
  } else {
    geofences_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIAddGeofencesReqMsg)
}

void PBLocAPIAddGeofencesReqMsg::SharedCtor() {
  geofences_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIAddGeofencesReqMsg::~PBLocAPIAddGeofencesReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIAddGeofencesReqMsg)
  SharedDtor();
}

void PBLocAPIAddGeofencesReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete geofences_;
  }
}

void PBLocAPIAddGeofencesReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIAddGeofencesReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIAddGeofencesReqMsg& PBLocAPIAddGeofencesReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIAddGeofencesReqMsg* PBLocAPIAddGeofencesReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIAddGeofencesReqMsg* n = new PBLocAPIAddGeofencesReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIAddGeofencesReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIAddGeofencesReqMsg)
  if (GetArenaNoVirtual() == NULL && geofences_ != NULL) {
    delete geofences_;
  }
  geofences_ = NULL;
}

bool PBLocAPIAddGeofencesReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIAddGeofencesReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGeofencesAddedReqPayload geofences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geofences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIAddGeofencesReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIAddGeofencesReqMsg)
  return false;
#undef DO_
}

void PBLocAPIAddGeofencesReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIAddGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesAddedReqPayload geofences = 1;
  if (this->has_geofences()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->geofences_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIAddGeofencesReqMsg)
}

::google::protobuf::uint8* PBLocAPIAddGeofencesReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIAddGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesAddedReqPayload geofences = 1;
  if (this->has_geofences()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->geofences_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIAddGeofencesReqMsg)
  return target;
}

size_t PBLocAPIAddGeofencesReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIAddGeofencesReqMsg)
  size_t total_size = 0;

  // .PBGeofencesAddedReqPayload geofences = 1;
  if (this->has_geofences()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geofences_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIAddGeofencesReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIAddGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIAddGeofencesReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIAddGeofencesReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIAddGeofencesReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIAddGeofencesReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIAddGeofencesReqMsg::MergeFrom(const PBLocAPIAddGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIAddGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geofences()) {
    mutable_geofences()->::PBGeofencesAddedReqPayload::MergeFrom(from.geofences());
  }
}

void PBLocAPIAddGeofencesReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIAddGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIAddGeofencesReqMsg::CopyFrom(const PBLocAPIAddGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIAddGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIAddGeofencesReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIAddGeofencesReqMsg::Swap(PBLocAPIAddGeofencesReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIAddGeofencesReqMsg::InternalSwap(PBLocAPIAddGeofencesReqMsg* other) {
  std::swap(geofences_, other->geofences_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIAddGeofencesReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIAddGeofencesReqMsg

// .PBGeofencesAddedReqPayload geofences = 1;
bool PBLocAPIAddGeofencesReqMsg::has_geofences() const {
  return this != internal_default_instance() && geofences_ != NULL;
}
void PBLocAPIAddGeofencesReqMsg::clear_geofences() {
  if (GetArenaNoVirtual() == NULL && geofences_ != NULL) delete geofences_;
  geofences_ = NULL;
}
const ::PBGeofencesAddedReqPayload& PBLocAPIAddGeofencesReqMsg::geofences() const {
  // @@protoc_insertion_point(field_get:PBLocAPIAddGeofencesReqMsg.geofences)
  return geofences_ != NULL ? *geofences_
                         : *::PBGeofencesAddedReqPayload::internal_default_instance();
}
::PBGeofencesAddedReqPayload* PBLocAPIAddGeofencesReqMsg::mutable_geofences() {

  if (geofences_ == NULL) {
    geofences_ = new ::PBGeofencesAddedReqPayload;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIAddGeofencesReqMsg.geofences)
  return geofences_;
}
::PBGeofencesAddedReqPayload* PBLocAPIAddGeofencesReqMsg::release_geofences() {
  // @@protoc_insertion_point(field_release:PBLocAPIAddGeofencesReqMsg.geofences)

  ::PBGeofencesAddedReqPayload* temp = geofences_;
  geofences_ = NULL;
  return temp;
}
void PBLocAPIAddGeofencesReqMsg::set_allocated_geofences(::PBGeofencesAddedReqPayload* geofences) {
  delete geofences_;
  geofences_ = geofences;
  if (geofences) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIAddGeofencesReqMsg.geofences)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIRemoveGeofencesReqMsg::kGfClientIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIRemoveGeofencesReqMsg::PBLocAPIRemoveGeofencesReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIRemoveGeofencesReqMsg)
}
PBLocAPIRemoveGeofencesReqMsg::PBLocAPIRemoveGeofencesReqMsg(const PBLocAPIRemoveGeofencesReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gfclientids()) {
    gfclientids_ = new ::PBGeofencesReqClientIdPayload(*from.gfclientids_);
  } else {
    gfclientids_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIRemoveGeofencesReqMsg)
}

void PBLocAPIRemoveGeofencesReqMsg::SharedCtor() {
  gfclientids_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIRemoveGeofencesReqMsg::~PBLocAPIRemoveGeofencesReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIRemoveGeofencesReqMsg)
  SharedDtor();
}

void PBLocAPIRemoveGeofencesReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gfclientids_;
  }
}

void PBLocAPIRemoveGeofencesReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIRemoveGeofencesReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIRemoveGeofencesReqMsg& PBLocAPIRemoveGeofencesReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIRemoveGeofencesReqMsg* PBLocAPIRemoveGeofencesReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIRemoveGeofencesReqMsg* n = new PBLocAPIRemoveGeofencesReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIRemoveGeofencesReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIRemoveGeofencesReqMsg)
  if (GetArenaNoVirtual() == NULL && gfclientids_ != NULL) {
    delete gfclientids_;
  }
  gfclientids_ = NULL;
}

bool PBLocAPIRemoveGeofencesReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIRemoveGeofencesReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGeofencesReqClientIdPayload gfClientIds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gfclientids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIRemoveGeofencesReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIRemoveGeofencesReqMsg)
  return false;
#undef DO_
}

void PBLocAPIRemoveGeofencesReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIRemoveGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gfclientids_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIRemoveGeofencesReqMsg)
}

::google::protobuf::uint8* PBLocAPIRemoveGeofencesReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIRemoveGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gfclientids_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIRemoveGeofencesReqMsg)
  return target;
}

size_t PBLocAPIRemoveGeofencesReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIRemoveGeofencesReqMsg)
  size_t total_size = 0;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gfclientids_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIRemoveGeofencesReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIRemoveGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIRemoveGeofencesReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIRemoveGeofencesReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIRemoveGeofencesReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIRemoveGeofencesReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIRemoveGeofencesReqMsg::MergeFrom(const PBLocAPIRemoveGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIRemoveGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gfclientids()) {
    mutable_gfclientids()->::PBGeofencesReqClientIdPayload::MergeFrom(from.gfclientids());
  }
}

void PBLocAPIRemoveGeofencesReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIRemoveGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIRemoveGeofencesReqMsg::CopyFrom(const PBLocAPIRemoveGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIRemoveGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIRemoveGeofencesReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIRemoveGeofencesReqMsg::Swap(PBLocAPIRemoveGeofencesReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIRemoveGeofencesReqMsg::InternalSwap(PBLocAPIRemoveGeofencesReqMsg* other) {
  std::swap(gfclientids_, other->gfclientids_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIRemoveGeofencesReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIRemoveGeofencesReqMsg

// .PBGeofencesReqClientIdPayload gfClientIds = 1;
bool PBLocAPIRemoveGeofencesReqMsg::has_gfclientids() const {
  return this != internal_default_instance() && gfclientids_ != NULL;
}
void PBLocAPIRemoveGeofencesReqMsg::clear_gfclientids() {
  if (GetArenaNoVirtual() == NULL && gfclientids_ != NULL) delete gfclientids_;
  gfclientids_ = NULL;
}
const ::PBGeofencesReqClientIdPayload& PBLocAPIRemoveGeofencesReqMsg::gfclientids() const {
  // @@protoc_insertion_point(field_get:PBLocAPIRemoveGeofencesReqMsg.gfClientIds)
  return gfclientids_ != NULL ? *gfclientids_
                         : *::PBGeofencesReqClientIdPayload::internal_default_instance();
}
::PBGeofencesReqClientIdPayload* PBLocAPIRemoveGeofencesReqMsg::mutable_gfclientids() {

  if (gfclientids_ == NULL) {
    gfclientids_ = new ::PBGeofencesReqClientIdPayload;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIRemoveGeofencesReqMsg.gfClientIds)
  return gfclientids_;
}
::PBGeofencesReqClientIdPayload* PBLocAPIRemoveGeofencesReqMsg::release_gfclientids() {
  // @@protoc_insertion_point(field_release:PBLocAPIRemoveGeofencesReqMsg.gfClientIds)

  ::PBGeofencesReqClientIdPayload* temp = gfclientids_;
  gfclientids_ = NULL;
  return temp;
}
void PBLocAPIRemoveGeofencesReqMsg::set_allocated_gfclientids(::PBGeofencesReqClientIdPayload* gfclientids) {
  delete gfclientids_;
  gfclientids_ = gfclientids;
  if (gfclientids) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIRemoveGeofencesReqMsg.gfClientIds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIModifyGeofencesReqMsg::kGeofencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIModifyGeofencesReqMsg::PBLocAPIModifyGeofencesReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIModifyGeofencesReqMsg)
}
PBLocAPIModifyGeofencesReqMsg::PBLocAPIModifyGeofencesReqMsg(const PBLocAPIModifyGeofencesReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geofences()) {
    geofences_ = new ::PBGeofencesAddedReqPayload(*from.geofences_);
  } else {
    geofences_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIModifyGeofencesReqMsg)
}

void PBLocAPIModifyGeofencesReqMsg::SharedCtor() {
  geofences_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIModifyGeofencesReqMsg::~PBLocAPIModifyGeofencesReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIModifyGeofencesReqMsg)
  SharedDtor();
}

void PBLocAPIModifyGeofencesReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete geofences_;
  }
}

void PBLocAPIModifyGeofencesReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIModifyGeofencesReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIModifyGeofencesReqMsg& PBLocAPIModifyGeofencesReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIModifyGeofencesReqMsg* PBLocAPIModifyGeofencesReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIModifyGeofencesReqMsg* n = new PBLocAPIModifyGeofencesReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIModifyGeofencesReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIModifyGeofencesReqMsg)
  if (GetArenaNoVirtual() == NULL && geofences_ != NULL) {
    delete geofences_;
  }
  geofences_ = NULL;
}

bool PBLocAPIModifyGeofencesReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIModifyGeofencesReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGeofencesAddedReqPayload geofences = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geofences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIModifyGeofencesReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIModifyGeofencesReqMsg)
  return false;
#undef DO_
}

void PBLocAPIModifyGeofencesReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIModifyGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesAddedReqPayload geofences = 1;
  if (this->has_geofences()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->geofences_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIModifyGeofencesReqMsg)
}

::google::protobuf::uint8* PBLocAPIModifyGeofencesReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIModifyGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesAddedReqPayload geofences = 1;
  if (this->has_geofences()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->geofences_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIModifyGeofencesReqMsg)
  return target;
}

size_t PBLocAPIModifyGeofencesReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIModifyGeofencesReqMsg)
  size_t total_size = 0;

  // .PBGeofencesAddedReqPayload geofences = 1;
  if (this->has_geofences()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geofences_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIModifyGeofencesReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIModifyGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIModifyGeofencesReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIModifyGeofencesReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIModifyGeofencesReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIModifyGeofencesReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIModifyGeofencesReqMsg::MergeFrom(const PBLocAPIModifyGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIModifyGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geofences()) {
    mutable_geofences()->::PBGeofencesAddedReqPayload::MergeFrom(from.geofences());
  }
}

void PBLocAPIModifyGeofencesReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIModifyGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIModifyGeofencesReqMsg::CopyFrom(const PBLocAPIModifyGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIModifyGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIModifyGeofencesReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIModifyGeofencesReqMsg::Swap(PBLocAPIModifyGeofencesReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIModifyGeofencesReqMsg::InternalSwap(PBLocAPIModifyGeofencesReqMsg* other) {
  std::swap(geofences_, other->geofences_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIModifyGeofencesReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIModifyGeofencesReqMsg

// .PBGeofencesAddedReqPayload geofences = 1;
bool PBLocAPIModifyGeofencesReqMsg::has_geofences() const {
  return this != internal_default_instance() && geofences_ != NULL;
}
void PBLocAPIModifyGeofencesReqMsg::clear_geofences() {
  if (GetArenaNoVirtual() == NULL && geofences_ != NULL) delete geofences_;
  geofences_ = NULL;
}
const ::PBGeofencesAddedReqPayload& PBLocAPIModifyGeofencesReqMsg::geofences() const {
  // @@protoc_insertion_point(field_get:PBLocAPIModifyGeofencesReqMsg.geofences)
  return geofences_ != NULL ? *geofences_
                         : *::PBGeofencesAddedReqPayload::internal_default_instance();
}
::PBGeofencesAddedReqPayload* PBLocAPIModifyGeofencesReqMsg::mutable_geofences() {

  if (geofences_ == NULL) {
    geofences_ = new ::PBGeofencesAddedReqPayload;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIModifyGeofencesReqMsg.geofences)
  return geofences_;
}
::PBGeofencesAddedReqPayload* PBLocAPIModifyGeofencesReqMsg::release_geofences() {
  // @@protoc_insertion_point(field_release:PBLocAPIModifyGeofencesReqMsg.geofences)

  ::PBGeofencesAddedReqPayload* temp = geofences_;
  geofences_ = NULL;
  return temp;
}
void PBLocAPIModifyGeofencesReqMsg::set_allocated_geofences(::PBGeofencesAddedReqPayload* geofences) {
  delete geofences_;
  geofences_ = geofences;
  if (geofences) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIModifyGeofencesReqMsg.geofences)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIPauseGeofencesReqMsg::kGfClientIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIPauseGeofencesReqMsg::PBLocAPIPauseGeofencesReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIPauseGeofencesReqMsg)
}
PBLocAPIPauseGeofencesReqMsg::PBLocAPIPauseGeofencesReqMsg(const PBLocAPIPauseGeofencesReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gfclientids()) {
    gfclientids_ = new ::PBGeofencesReqClientIdPayload(*from.gfclientids_);
  } else {
    gfclientids_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIPauseGeofencesReqMsg)
}

void PBLocAPIPauseGeofencesReqMsg::SharedCtor() {
  gfclientids_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIPauseGeofencesReqMsg::~PBLocAPIPauseGeofencesReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIPauseGeofencesReqMsg)
  SharedDtor();
}

void PBLocAPIPauseGeofencesReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gfclientids_;
  }
}

void PBLocAPIPauseGeofencesReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIPauseGeofencesReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIPauseGeofencesReqMsg& PBLocAPIPauseGeofencesReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIPauseGeofencesReqMsg* PBLocAPIPauseGeofencesReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIPauseGeofencesReqMsg* n = new PBLocAPIPauseGeofencesReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIPauseGeofencesReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIPauseGeofencesReqMsg)
  if (GetArenaNoVirtual() == NULL && gfclientids_ != NULL) {
    delete gfclientids_;
  }
  gfclientids_ = NULL;
}

bool PBLocAPIPauseGeofencesReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIPauseGeofencesReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGeofencesReqClientIdPayload gfClientIds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gfclientids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIPauseGeofencesReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIPauseGeofencesReqMsg)
  return false;
#undef DO_
}

void PBLocAPIPauseGeofencesReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIPauseGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gfclientids_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIPauseGeofencesReqMsg)
}

::google::protobuf::uint8* PBLocAPIPauseGeofencesReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIPauseGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gfclientids_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIPauseGeofencesReqMsg)
  return target;
}

size_t PBLocAPIPauseGeofencesReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIPauseGeofencesReqMsg)
  size_t total_size = 0;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gfclientids_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIPauseGeofencesReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIPauseGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIPauseGeofencesReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIPauseGeofencesReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIPauseGeofencesReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIPauseGeofencesReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIPauseGeofencesReqMsg::MergeFrom(const PBLocAPIPauseGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIPauseGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gfclientids()) {
    mutable_gfclientids()->::PBGeofencesReqClientIdPayload::MergeFrom(from.gfclientids());
  }
}

void PBLocAPIPauseGeofencesReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIPauseGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIPauseGeofencesReqMsg::CopyFrom(const PBLocAPIPauseGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIPauseGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIPauseGeofencesReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIPauseGeofencesReqMsg::Swap(PBLocAPIPauseGeofencesReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIPauseGeofencesReqMsg::InternalSwap(PBLocAPIPauseGeofencesReqMsg* other) {
  std::swap(gfclientids_, other->gfclientids_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIPauseGeofencesReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIPauseGeofencesReqMsg

// .PBGeofencesReqClientIdPayload gfClientIds = 1;
bool PBLocAPIPauseGeofencesReqMsg::has_gfclientids() const {
  return this != internal_default_instance() && gfclientids_ != NULL;
}
void PBLocAPIPauseGeofencesReqMsg::clear_gfclientids() {
  if (GetArenaNoVirtual() == NULL && gfclientids_ != NULL) delete gfclientids_;
  gfclientids_ = NULL;
}
const ::PBGeofencesReqClientIdPayload& PBLocAPIPauseGeofencesReqMsg::gfclientids() const {
  // @@protoc_insertion_point(field_get:PBLocAPIPauseGeofencesReqMsg.gfClientIds)
  return gfclientids_ != NULL ? *gfclientids_
                         : *::PBGeofencesReqClientIdPayload::internal_default_instance();
}
::PBGeofencesReqClientIdPayload* PBLocAPIPauseGeofencesReqMsg::mutable_gfclientids() {

  if (gfclientids_ == NULL) {
    gfclientids_ = new ::PBGeofencesReqClientIdPayload;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIPauseGeofencesReqMsg.gfClientIds)
  return gfclientids_;
}
::PBGeofencesReqClientIdPayload* PBLocAPIPauseGeofencesReqMsg::release_gfclientids() {
  // @@protoc_insertion_point(field_release:PBLocAPIPauseGeofencesReqMsg.gfClientIds)

  ::PBGeofencesReqClientIdPayload* temp = gfclientids_;
  gfclientids_ = NULL;
  return temp;
}
void PBLocAPIPauseGeofencesReqMsg::set_allocated_gfclientids(::PBGeofencesReqClientIdPayload* gfclientids) {
  delete gfclientids_;
  gfclientids_ = gfclientids;
  if (gfclientids) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIPauseGeofencesReqMsg.gfClientIds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIResumeGeofencesReqMsg::kGfClientIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIResumeGeofencesReqMsg::PBLocAPIResumeGeofencesReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIResumeGeofencesReqMsg)
}
PBLocAPIResumeGeofencesReqMsg::PBLocAPIResumeGeofencesReqMsg(const PBLocAPIResumeGeofencesReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gfclientids()) {
    gfclientids_ = new ::PBGeofencesReqClientIdPayload(*from.gfclientids_);
  } else {
    gfclientids_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIResumeGeofencesReqMsg)
}

void PBLocAPIResumeGeofencesReqMsg::SharedCtor() {
  gfclientids_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIResumeGeofencesReqMsg::~PBLocAPIResumeGeofencesReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIResumeGeofencesReqMsg)
  SharedDtor();
}

void PBLocAPIResumeGeofencesReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gfclientids_;
  }
}

void PBLocAPIResumeGeofencesReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIResumeGeofencesReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIResumeGeofencesReqMsg& PBLocAPIResumeGeofencesReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIResumeGeofencesReqMsg* PBLocAPIResumeGeofencesReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIResumeGeofencesReqMsg* n = new PBLocAPIResumeGeofencesReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIResumeGeofencesReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIResumeGeofencesReqMsg)
  if (GetArenaNoVirtual() == NULL && gfclientids_ != NULL) {
    delete gfclientids_;
  }
  gfclientids_ = NULL;
}

bool PBLocAPIResumeGeofencesReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIResumeGeofencesReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGeofencesReqClientIdPayload gfClientIds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gfclientids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIResumeGeofencesReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIResumeGeofencesReqMsg)
  return false;
#undef DO_
}

void PBLocAPIResumeGeofencesReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIResumeGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gfclientids_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIResumeGeofencesReqMsg)
}

::google::protobuf::uint8* PBLocAPIResumeGeofencesReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIResumeGeofencesReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gfclientids_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIResumeGeofencesReqMsg)
  return target;
}

size_t PBLocAPIResumeGeofencesReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIResumeGeofencesReqMsg)
  size_t total_size = 0;

  // .PBGeofencesReqClientIdPayload gfClientIds = 1;
  if (this->has_gfclientids()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gfclientids_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIResumeGeofencesReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIResumeGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIResumeGeofencesReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIResumeGeofencesReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIResumeGeofencesReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIResumeGeofencesReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIResumeGeofencesReqMsg::MergeFrom(const PBLocAPIResumeGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIResumeGeofencesReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gfclientids()) {
    mutable_gfclientids()->::PBGeofencesReqClientIdPayload::MergeFrom(from.gfclientids());
  }
}

void PBLocAPIResumeGeofencesReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIResumeGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIResumeGeofencesReqMsg::CopyFrom(const PBLocAPIResumeGeofencesReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIResumeGeofencesReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIResumeGeofencesReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIResumeGeofencesReqMsg::Swap(PBLocAPIResumeGeofencesReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIResumeGeofencesReqMsg::InternalSwap(PBLocAPIResumeGeofencesReqMsg* other) {
  std::swap(gfclientids_, other->gfclientids_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIResumeGeofencesReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIResumeGeofencesReqMsg

// .PBGeofencesReqClientIdPayload gfClientIds = 1;
bool PBLocAPIResumeGeofencesReqMsg::has_gfclientids() const {
  return this != internal_default_instance() && gfclientids_ != NULL;
}
void PBLocAPIResumeGeofencesReqMsg::clear_gfclientids() {
  if (GetArenaNoVirtual() == NULL && gfclientids_ != NULL) delete gfclientids_;
  gfclientids_ = NULL;
}
const ::PBGeofencesReqClientIdPayload& PBLocAPIResumeGeofencesReqMsg::gfclientids() const {
  // @@protoc_insertion_point(field_get:PBLocAPIResumeGeofencesReqMsg.gfClientIds)
  return gfclientids_ != NULL ? *gfclientids_
                         : *::PBGeofencesReqClientIdPayload::internal_default_instance();
}
::PBGeofencesReqClientIdPayload* PBLocAPIResumeGeofencesReqMsg::mutable_gfclientids() {

  if (gfclientids_ == NULL) {
    gfclientids_ = new ::PBGeofencesReqClientIdPayload;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIResumeGeofencesReqMsg.gfClientIds)
  return gfclientids_;
}
::PBGeofencesReqClientIdPayload* PBLocAPIResumeGeofencesReqMsg::release_gfclientids() {
  // @@protoc_insertion_point(field_release:PBLocAPIResumeGeofencesReqMsg.gfClientIds)

  ::PBGeofencesReqClientIdPayload* temp = gfclientids_;
  gfclientids_ = NULL;
  return temp;
}
void PBLocAPIResumeGeofencesReqMsg::set_allocated_gfclientids(::PBGeofencesReqClientIdPayload* gfclientids) {
  delete gfclientids_;
  gfclientids_ = gfclientids;
  if (gfclientids) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIResumeGeofencesReqMsg.gfClientIds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIUpdateNetworkAvailabilityReqMsg::kMAvailabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIUpdateNetworkAvailabilityReqMsg::PBLocAPIUpdateNetworkAvailabilityReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIUpdateNetworkAvailabilityReqMsg)
}
PBLocAPIUpdateNetworkAvailabilityReqMsg::PBLocAPIUpdateNetworkAvailabilityReqMsg(const PBLocAPIUpdateNetworkAvailabilityReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mavailability_ = from.mavailability_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPIUpdateNetworkAvailabilityReqMsg)
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::SharedCtor() {
  mavailability_ = false;
  _cached_size_ = 0;
}

PBLocAPIUpdateNetworkAvailabilityReqMsg::~PBLocAPIUpdateNetworkAvailabilityReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  SharedDtor();
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::SharedDtor() {
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIUpdateNetworkAvailabilityReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIUpdateNetworkAvailabilityReqMsg& PBLocAPIUpdateNetworkAvailabilityReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIUpdateNetworkAvailabilityReqMsg* PBLocAPIUpdateNetworkAvailabilityReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIUpdateNetworkAvailabilityReqMsg* n = new PBLocAPIUpdateNetworkAvailabilityReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  mavailability_ = false;
}

bool PBLocAPIUpdateNetworkAvailabilityReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool mAvailability = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mavailability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  return false;
#undef DO_
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mAvailability = 1;
  if (this->mavailability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->mavailability(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIUpdateNetworkAvailabilityReqMsg)
}

::google::protobuf::uint8* PBLocAPIUpdateNetworkAvailabilityReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mAvailability = 1;
  if (this->mavailability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->mavailability(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  return target;
}

size_t PBLocAPIUpdateNetworkAvailabilityReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  size_t total_size = 0;

  // bool mAvailability = 1;
  if (this->mavailability() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIUpdateNetworkAvailabilityReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIUpdateNetworkAvailabilityReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIUpdateNetworkAvailabilityReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIUpdateNetworkAvailabilityReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::MergeFrom(const PBLocAPIUpdateNetworkAvailabilityReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mavailability() != 0) {
    set_mavailability(from.mavailability());
  }
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::CopyFrom(const PBLocAPIUpdateNetworkAvailabilityReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIUpdateNetworkAvailabilityReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIUpdateNetworkAvailabilityReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIUpdateNetworkAvailabilityReqMsg::Swap(PBLocAPIUpdateNetworkAvailabilityReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIUpdateNetworkAvailabilityReqMsg::InternalSwap(PBLocAPIUpdateNetworkAvailabilityReqMsg* other) {
  std::swap(mavailability_, other->mavailability_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIUpdateNetworkAvailabilityReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIUpdateNetworkAvailabilityReqMsg

// bool mAvailability = 1;
void PBLocAPIUpdateNetworkAvailabilityReqMsg::clear_mavailability() {
  mavailability_ = false;
}
bool PBLocAPIUpdateNetworkAvailabilityReqMsg::mavailability() const {
  // @@protoc_insertion_point(field_get:PBLocAPIUpdateNetworkAvailabilityReqMsg.mAvailability)
  return mavailability_;
}
void PBLocAPIUpdateNetworkAvailabilityReqMsg::set_mavailability(bool value) {

  mavailability_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIUpdateNetworkAvailabilityReqMsg.mAvailability)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPILocationIndMsg::kLocationNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPILocationIndMsg::PBLocAPILocationIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPILocationIndMsg)
}
PBLocAPILocationIndMsg::PBLocAPILocationIndMsg(const PBLocAPILocationIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_locationnotification()) {
    locationnotification_ = new ::PBLocation(*from.locationnotification_);
  } else {
    locationnotification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPILocationIndMsg)
}

void PBLocAPILocationIndMsg::SharedCtor() {
  locationnotification_ = NULL;
  _cached_size_ = 0;
}

PBLocAPILocationIndMsg::~PBLocAPILocationIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPILocationIndMsg)
  SharedDtor();
}

void PBLocAPILocationIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete locationnotification_;
  }
}

void PBLocAPILocationIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPILocationIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPILocationIndMsg& PBLocAPILocationIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPILocationIndMsg* PBLocAPILocationIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPILocationIndMsg* n = new PBLocAPILocationIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPILocationIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPILocationIndMsg)
  if (GetArenaNoVirtual() == NULL && locationnotification_ != NULL) {
    delete locationnotification_;
  }
  locationnotification_ = NULL;
}

bool PBLocAPILocationIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPILocationIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocation locationNotification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locationnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPILocationIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPILocationIndMsg)
  return false;
#undef DO_
}

void PBLocAPILocationIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPILocationIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocation locationNotification = 1;
  if (this->has_locationnotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->locationnotification_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPILocationIndMsg)
}

::google::protobuf::uint8* PBLocAPILocationIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPILocationIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocation locationNotification = 1;
  if (this->has_locationnotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->locationnotification_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPILocationIndMsg)
  return target;
}

size_t PBLocAPILocationIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPILocationIndMsg)
  size_t total_size = 0;

  // .PBLocation locationNotification = 1;
  if (this->has_locationnotification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locationnotification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPILocationIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPILocationIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPILocationIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPILocationIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPILocationIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPILocationIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPILocationIndMsg::MergeFrom(const PBLocAPILocationIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPILocationIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_locationnotification()) {
    mutable_locationnotification()->::PBLocation::MergeFrom(from.locationnotification());
  }
}

void PBLocAPILocationIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPILocationIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPILocationIndMsg::CopyFrom(const PBLocAPILocationIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPILocationIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPILocationIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPILocationIndMsg::Swap(PBLocAPILocationIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPILocationIndMsg::InternalSwap(PBLocAPILocationIndMsg* other) {
  std::swap(locationnotification_, other->locationnotification_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPILocationIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPILocationIndMsg

// .PBLocation locationNotification = 1;
bool PBLocAPILocationIndMsg::has_locationnotification() const {
  return this != internal_default_instance() && locationnotification_ != NULL;
}
void PBLocAPILocationIndMsg::clear_locationnotification() {
  if (GetArenaNoVirtual() == NULL && locationnotification_ != NULL) delete locationnotification_;
  locationnotification_ = NULL;
}
const ::PBLocation& PBLocAPILocationIndMsg::locationnotification() const {
  // @@protoc_insertion_point(field_get:PBLocAPILocationIndMsg.locationNotification)
  return locationnotification_ != NULL ? *locationnotification_
                         : *::PBLocation::internal_default_instance();
}
::PBLocation* PBLocAPILocationIndMsg::mutable_locationnotification() {

  if (locationnotification_ == NULL) {
    locationnotification_ = new ::PBLocation;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPILocationIndMsg.locationNotification)
  return locationnotification_;
}
::PBLocation* PBLocAPILocationIndMsg::release_locationnotification() {
  // @@protoc_insertion_point(field_release:PBLocAPILocationIndMsg.locationNotification)

  ::PBLocation* temp = locationnotification_;
  locationnotification_ = NULL;
  return temp;
}
void PBLocAPILocationIndMsg::set_allocated_locationnotification(::PBLocation* locationnotification) {
  delete locationnotification_;
  locationnotification_ = locationnotification;
  if (locationnotification) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPILocationIndMsg.locationNotification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIBatchingIndMsg::kBatchNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIBatchingIndMsg::PBLocAPIBatchingIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIBatchingIndMsg)
}
PBLocAPIBatchingIndMsg::PBLocAPIBatchingIndMsg(const PBLocAPIBatchingIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_batchnotification()) {
    batchnotification_ = new ::PBLocAPIBatchNotification(*from.batchnotification_);
  } else {
    batchnotification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIBatchingIndMsg)
}

void PBLocAPIBatchingIndMsg::SharedCtor() {
  batchnotification_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIBatchingIndMsg::~PBLocAPIBatchingIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIBatchingIndMsg)
  SharedDtor();
}

void PBLocAPIBatchingIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete batchnotification_;
  }
}

void PBLocAPIBatchingIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIBatchingIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIBatchingIndMsg& PBLocAPIBatchingIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIBatchingIndMsg* PBLocAPIBatchingIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIBatchingIndMsg* n = new PBLocAPIBatchingIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIBatchingIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIBatchingIndMsg)
  if (GetArenaNoVirtual() == NULL && batchnotification_ != NULL) {
    delete batchnotification_;
  }
  batchnotification_ = NULL;
}

bool PBLocAPIBatchingIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIBatchingIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocAPIBatchNotification batchNotification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_batchnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIBatchingIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIBatchingIndMsg)
  return false;
#undef DO_
}

void PBLocAPIBatchingIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIBatchingIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocAPIBatchNotification batchNotification = 1;
  if (this->has_batchnotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->batchnotification_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIBatchingIndMsg)
}

::google::protobuf::uint8* PBLocAPIBatchingIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIBatchingIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocAPIBatchNotification batchNotification = 1;
  if (this->has_batchnotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->batchnotification_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIBatchingIndMsg)
  return target;
}

size_t PBLocAPIBatchingIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIBatchingIndMsg)
  size_t total_size = 0;

  // .PBLocAPIBatchNotification batchNotification = 1;
  if (this->has_batchnotification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->batchnotification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIBatchingIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIBatchingIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIBatchingIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIBatchingIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIBatchingIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIBatchingIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIBatchingIndMsg::MergeFrom(const PBLocAPIBatchingIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIBatchingIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_batchnotification()) {
    mutable_batchnotification()->::PBLocAPIBatchNotification::MergeFrom(from.batchnotification());
  }
}

void PBLocAPIBatchingIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIBatchingIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIBatchingIndMsg::CopyFrom(const PBLocAPIBatchingIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIBatchingIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIBatchingIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPIBatchingIndMsg::Swap(PBLocAPIBatchingIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIBatchingIndMsg::InternalSwap(PBLocAPIBatchingIndMsg* other) {
  std::swap(batchnotification_, other->batchnotification_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIBatchingIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIBatchingIndMsg

// .PBLocAPIBatchNotification batchNotification = 1;
bool PBLocAPIBatchingIndMsg::has_batchnotification() const {
  return this != internal_default_instance() && batchnotification_ != NULL;
}
void PBLocAPIBatchingIndMsg::clear_batchnotification() {
  if (GetArenaNoVirtual() == NULL && batchnotification_ != NULL) delete batchnotification_;
  batchnotification_ = NULL;
}
const ::PBLocAPIBatchNotification& PBLocAPIBatchingIndMsg::batchnotification() const {
  // @@protoc_insertion_point(field_get:PBLocAPIBatchingIndMsg.batchNotification)
  return batchnotification_ != NULL ? *batchnotification_
                         : *::PBLocAPIBatchNotification::internal_default_instance();
}
::PBLocAPIBatchNotification* PBLocAPIBatchingIndMsg::mutable_batchnotification() {

  if (batchnotification_ == NULL) {
    batchnotification_ = new ::PBLocAPIBatchNotification;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIBatchingIndMsg.batchNotification)
  return batchnotification_;
}
::PBLocAPIBatchNotification* PBLocAPIBatchingIndMsg::release_batchnotification() {
  // @@protoc_insertion_point(field_release:PBLocAPIBatchingIndMsg.batchNotification)

  ::PBLocAPIBatchNotification* temp = batchnotification_;
  batchnotification_ = NULL;
  return temp;
}
void PBLocAPIBatchingIndMsg::set_allocated_batchnotification(::PBLocAPIBatchNotification* batchnotification) {
  delete batchnotification_;
  batchnotification_ = batchnotification;
  if (batchnotification) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIBatchingIndMsg.batchNotification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIGeofenceBreachIndMsg::kGfBreachNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIGeofenceBreachIndMsg::PBLocAPIGeofenceBreachIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIGeofenceBreachIndMsg)
}
PBLocAPIGeofenceBreachIndMsg::PBLocAPIGeofenceBreachIndMsg(const PBLocAPIGeofenceBreachIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gfbreachnotification()) {
    gfbreachnotification_ = new ::PBLocAPIGeofenceBreachNotification(*from.gfbreachnotification_);
  } else {
    gfbreachnotification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIGeofenceBreachIndMsg)
}

void PBLocAPIGeofenceBreachIndMsg::SharedCtor() {
  gfbreachnotification_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIGeofenceBreachIndMsg::~PBLocAPIGeofenceBreachIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIGeofenceBreachIndMsg)
  SharedDtor();
}

void PBLocAPIGeofenceBreachIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gfbreachnotification_;
  }
}

void PBLocAPIGeofenceBreachIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIGeofenceBreachIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIGeofenceBreachIndMsg& PBLocAPIGeofenceBreachIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIGeofenceBreachIndMsg* PBLocAPIGeofenceBreachIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIGeofenceBreachIndMsg* n = new PBLocAPIGeofenceBreachIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIGeofenceBreachIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIGeofenceBreachIndMsg)
  if (GetArenaNoVirtual() == NULL && gfbreachnotification_ != NULL) {
    delete gfbreachnotification_;
  }
  gfbreachnotification_ = NULL;
}

bool PBLocAPIGeofenceBreachIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIGeofenceBreachIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocAPIGeofenceBreachNotification gfBreachNotification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gfbreachnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIGeofenceBreachIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIGeofenceBreachIndMsg)
  return false;
#undef DO_
}

void PBLocAPIGeofenceBreachIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIGeofenceBreachIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocAPIGeofenceBreachNotification gfBreachNotification = 1;
  if (this->has_gfbreachnotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gfbreachnotification_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIGeofenceBreachIndMsg)
}

::google::protobuf::uint8* PBLocAPIGeofenceBreachIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIGeofenceBreachIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocAPIGeofenceBreachNotification gfBreachNotification = 1;
  if (this->has_gfbreachnotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gfbreachnotification_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIGeofenceBreachIndMsg)
  return target;
}

size_t PBLocAPIGeofenceBreachIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIGeofenceBreachIndMsg)
  size_t total_size = 0;

  // .PBLocAPIGeofenceBreachNotification gfBreachNotification = 1;
  if (this->has_gfbreachnotification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gfbreachnotification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIGeofenceBreachIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIGeofenceBreachIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIGeofenceBreachIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIGeofenceBreachIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIGeofenceBreachIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIGeofenceBreachIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIGeofenceBreachIndMsg::MergeFrom(const PBLocAPIGeofenceBreachIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIGeofenceBreachIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gfbreachnotification()) {
    mutable_gfbreachnotification()->::PBLocAPIGeofenceBreachNotification::MergeFrom(from.gfbreachnotification());
  }
}

void PBLocAPIGeofenceBreachIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIGeofenceBreachIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIGeofenceBreachIndMsg::CopyFrom(const PBLocAPIGeofenceBreachIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIGeofenceBreachIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIGeofenceBreachIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPIGeofenceBreachIndMsg::Swap(PBLocAPIGeofenceBreachIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIGeofenceBreachIndMsg::InternalSwap(PBLocAPIGeofenceBreachIndMsg* other) {
  std::swap(gfbreachnotification_, other->gfbreachnotification_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIGeofenceBreachIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIGeofenceBreachIndMsg

// .PBLocAPIGeofenceBreachNotification gfBreachNotification = 1;
bool PBLocAPIGeofenceBreachIndMsg::has_gfbreachnotification() const {
  return this != internal_default_instance() && gfbreachnotification_ != NULL;
}
void PBLocAPIGeofenceBreachIndMsg::clear_gfbreachnotification() {
  if (GetArenaNoVirtual() == NULL && gfbreachnotification_ != NULL) delete gfbreachnotification_;
  gfbreachnotification_ = NULL;
}
const ::PBLocAPIGeofenceBreachNotification& PBLocAPIGeofenceBreachIndMsg::gfbreachnotification() const {
  // @@protoc_insertion_point(field_get:PBLocAPIGeofenceBreachIndMsg.gfBreachNotification)
  return gfbreachnotification_ != NULL ? *gfbreachnotification_
                         : *::PBLocAPIGeofenceBreachNotification::internal_default_instance();
}
::PBLocAPIGeofenceBreachNotification* PBLocAPIGeofenceBreachIndMsg::mutable_gfbreachnotification() {

  if (gfbreachnotification_ == NULL) {
    gfbreachnotification_ = new ::PBLocAPIGeofenceBreachNotification;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIGeofenceBreachIndMsg.gfBreachNotification)
  return gfbreachnotification_;
}
::PBLocAPIGeofenceBreachNotification* PBLocAPIGeofenceBreachIndMsg::release_gfbreachnotification() {
  // @@protoc_insertion_point(field_release:PBLocAPIGeofenceBreachIndMsg.gfBreachNotification)

  ::PBLocAPIGeofenceBreachNotification* temp = gfbreachnotification_;
  gfbreachnotification_ = NULL;
  return temp;
}
void PBLocAPIGeofenceBreachIndMsg::set_allocated_gfbreachnotification(::PBLocAPIGeofenceBreachNotification* gfbreachnotification) {
  delete gfbreachnotification_;
  gfbreachnotification_ = gfbreachnotification;
  if (gfbreachnotification) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIGeofenceBreachIndMsg.gfBreachNotification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPILocationInfoIndMsg::kGnssLocationInfoNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPILocationInfoIndMsg::PBLocAPILocationInfoIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPILocationInfoIndMsg)
}
PBLocAPILocationInfoIndMsg::PBLocAPILocationInfoIndMsg(const PBLocAPILocationInfoIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gnsslocationinfonotification()) {
    gnsslocationinfonotification_ = new ::PBGnssLocationInfoNotification(*from.gnsslocationinfonotification_);
  } else {
    gnsslocationinfonotification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPILocationInfoIndMsg)
}

void PBLocAPILocationInfoIndMsg::SharedCtor() {
  gnsslocationinfonotification_ = NULL;
  _cached_size_ = 0;
}

PBLocAPILocationInfoIndMsg::~PBLocAPILocationInfoIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPILocationInfoIndMsg)
  SharedDtor();
}

void PBLocAPILocationInfoIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gnsslocationinfonotification_;
  }
}

void PBLocAPILocationInfoIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPILocationInfoIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPILocationInfoIndMsg& PBLocAPILocationInfoIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPILocationInfoIndMsg* PBLocAPILocationInfoIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPILocationInfoIndMsg* n = new PBLocAPILocationInfoIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPILocationInfoIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPILocationInfoIndMsg)
  if (GetArenaNoVirtual() == NULL && gnsslocationinfonotification_ != NULL) {
    delete gnsslocationinfonotification_;
  }
  gnsslocationinfonotification_ = NULL;
}

bool PBLocAPILocationInfoIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPILocationInfoIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGnssLocationInfoNotification gnssLocationInfoNotification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gnsslocationinfonotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPILocationInfoIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPILocationInfoIndMsg)
  return false;
#undef DO_
}

void PBLocAPILocationInfoIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPILocationInfoIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssLocationInfoNotification gnssLocationInfoNotification = 1;
  if (this->has_gnsslocationinfonotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gnsslocationinfonotification_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPILocationInfoIndMsg)
}

::google::protobuf::uint8* PBLocAPILocationInfoIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPILocationInfoIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssLocationInfoNotification gnssLocationInfoNotification = 1;
  if (this->has_gnsslocationinfonotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gnsslocationinfonotification_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPILocationInfoIndMsg)
  return target;
}

size_t PBLocAPILocationInfoIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPILocationInfoIndMsg)
  size_t total_size = 0;

  // .PBGnssLocationInfoNotification gnssLocationInfoNotification = 1;
  if (this->has_gnsslocationinfonotification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gnsslocationinfonotification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPILocationInfoIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPILocationInfoIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPILocationInfoIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPILocationInfoIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPILocationInfoIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPILocationInfoIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPILocationInfoIndMsg::MergeFrom(const PBLocAPILocationInfoIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPILocationInfoIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gnsslocationinfonotification()) {
    mutable_gnsslocationinfonotification()->::PBGnssLocationInfoNotification::MergeFrom(from.gnsslocationinfonotification());
  }
}

void PBLocAPILocationInfoIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPILocationInfoIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPILocationInfoIndMsg::CopyFrom(const PBLocAPILocationInfoIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPILocationInfoIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPILocationInfoIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPILocationInfoIndMsg::Swap(PBLocAPILocationInfoIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPILocationInfoIndMsg::InternalSwap(PBLocAPILocationInfoIndMsg* other) {
  std::swap(gnsslocationinfonotification_, other->gnsslocationinfonotification_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPILocationInfoIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPILocationInfoIndMsg

// .PBGnssLocationInfoNotification gnssLocationInfoNotification = 1;
bool PBLocAPILocationInfoIndMsg::has_gnsslocationinfonotification() const {
  return this != internal_default_instance() && gnsslocationinfonotification_ != NULL;
}
void PBLocAPILocationInfoIndMsg::clear_gnsslocationinfonotification() {
  if (GetArenaNoVirtual() == NULL && gnsslocationinfonotification_ != NULL) delete gnsslocationinfonotification_;
  gnsslocationinfonotification_ = NULL;
}
const ::PBGnssLocationInfoNotification& PBLocAPILocationInfoIndMsg::gnsslocationinfonotification() const {
  // @@protoc_insertion_point(field_get:PBLocAPILocationInfoIndMsg.gnssLocationInfoNotification)
  return gnsslocationinfonotification_ != NULL ? *gnsslocationinfonotification_
                         : *::PBGnssLocationInfoNotification::internal_default_instance();
}
::PBGnssLocationInfoNotification* PBLocAPILocationInfoIndMsg::mutable_gnsslocationinfonotification() {

  if (gnsslocationinfonotification_ == NULL) {
    gnsslocationinfonotification_ = new ::PBGnssLocationInfoNotification;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPILocationInfoIndMsg.gnssLocationInfoNotification)
  return gnsslocationinfonotification_;
}
::PBGnssLocationInfoNotification* PBLocAPILocationInfoIndMsg::release_gnsslocationinfonotification() {
  // @@protoc_insertion_point(field_release:PBLocAPILocationInfoIndMsg.gnssLocationInfoNotification)

  ::PBGnssLocationInfoNotification* temp = gnsslocationinfonotification_;
  gnsslocationinfonotification_ = NULL;
  return temp;
}
void PBLocAPILocationInfoIndMsg::set_allocated_gnsslocationinfonotification(::PBGnssLocationInfoNotification* gnsslocationinfonotification) {
  delete gnsslocationinfonotification_;
  gnsslocationinfonotification_ = gnsslocationinfonotification;
  if (gnsslocationinfonotification) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPILocationInfoIndMsg.gnssLocationInfoNotification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIEngineLocationsInfoIndMsg::kEngineLocationsInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIEngineLocationsInfoIndMsg::PBLocAPIEngineLocationsInfoIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIEngineLocationsInfoIndMsg)
}
PBLocAPIEngineLocationsInfoIndMsg::PBLocAPIEngineLocationsInfoIndMsg(const PBLocAPIEngineLocationsInfoIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      enginelocationsinfo_(from.enginelocationsinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBLocAPIEngineLocationsInfoIndMsg)
}

void PBLocAPIEngineLocationsInfoIndMsg::SharedCtor() {
  _cached_size_ = 0;
}

PBLocAPIEngineLocationsInfoIndMsg::~PBLocAPIEngineLocationsInfoIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIEngineLocationsInfoIndMsg)
  SharedDtor();
}

void PBLocAPIEngineLocationsInfoIndMsg::SharedDtor() {
}

void PBLocAPIEngineLocationsInfoIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIEngineLocationsInfoIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIEngineLocationsInfoIndMsg& PBLocAPIEngineLocationsInfoIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIEngineLocationsInfoIndMsg* PBLocAPIEngineLocationsInfoIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIEngineLocationsInfoIndMsg* n = new PBLocAPIEngineLocationsInfoIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIEngineLocationsInfoIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIEngineLocationsInfoIndMsg)
  enginelocationsinfo_.Clear();
}

bool PBLocAPIEngineLocationsInfoIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIEngineLocationsInfoIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBGnssLocationInfoNotification engineLocationsInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_enginelocationsinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIEngineLocationsInfoIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIEngineLocationsInfoIndMsg)
  return false;
#undef DO_
}

void PBLocAPIEngineLocationsInfoIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIEngineLocationsInfoIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBGnssLocationInfoNotification engineLocationsInfo = 1;
  for (unsigned int i = 0, n = this->enginelocationsinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->enginelocationsinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIEngineLocationsInfoIndMsg)
}

::google::protobuf::uint8* PBLocAPIEngineLocationsInfoIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIEngineLocationsInfoIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBGnssLocationInfoNotification engineLocationsInfo = 1;
  for (unsigned int i = 0, n = this->enginelocationsinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->enginelocationsinfo(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIEngineLocationsInfoIndMsg)
  return target;
}

size_t PBLocAPIEngineLocationsInfoIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIEngineLocationsInfoIndMsg)
  size_t total_size = 0;

  // repeated .PBGnssLocationInfoNotification engineLocationsInfo = 1;
  {
    unsigned int count = this->enginelocationsinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->enginelocationsinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIEngineLocationsInfoIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIEngineLocationsInfoIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIEngineLocationsInfoIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIEngineLocationsInfoIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIEngineLocationsInfoIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIEngineLocationsInfoIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIEngineLocationsInfoIndMsg::MergeFrom(const PBLocAPIEngineLocationsInfoIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIEngineLocationsInfoIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  enginelocationsinfo_.MergeFrom(from.enginelocationsinfo_);
}

void PBLocAPIEngineLocationsInfoIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIEngineLocationsInfoIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIEngineLocationsInfoIndMsg::CopyFrom(const PBLocAPIEngineLocationsInfoIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIEngineLocationsInfoIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIEngineLocationsInfoIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPIEngineLocationsInfoIndMsg::Swap(PBLocAPIEngineLocationsInfoIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIEngineLocationsInfoIndMsg::InternalSwap(PBLocAPIEngineLocationsInfoIndMsg* other) {
  enginelocationsinfo_.InternalSwap(&other->enginelocationsinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIEngineLocationsInfoIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIEngineLocationsInfoIndMsg

// repeated .PBGnssLocationInfoNotification engineLocationsInfo = 1;
int PBLocAPIEngineLocationsInfoIndMsg::enginelocationsinfo_size() const {
  return enginelocationsinfo_.size();
}
void PBLocAPIEngineLocationsInfoIndMsg::clear_enginelocationsinfo() {
  enginelocationsinfo_.Clear();
}
const ::PBGnssLocationInfoNotification& PBLocAPIEngineLocationsInfoIndMsg::enginelocationsinfo(int index) const {
  // @@protoc_insertion_point(field_get:PBLocAPIEngineLocationsInfoIndMsg.engineLocationsInfo)
  return enginelocationsinfo_.Get(index);
}
::PBGnssLocationInfoNotification* PBLocAPIEngineLocationsInfoIndMsg::mutable_enginelocationsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBLocAPIEngineLocationsInfoIndMsg.engineLocationsInfo)
  return enginelocationsinfo_.Mutable(index);
}
::PBGnssLocationInfoNotification* PBLocAPIEngineLocationsInfoIndMsg::add_enginelocationsinfo() {
  // @@protoc_insertion_point(field_add:PBLocAPIEngineLocationsInfoIndMsg.engineLocationsInfo)
  return enginelocationsinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBGnssLocationInfoNotification >*
PBLocAPIEngineLocationsInfoIndMsg::mutable_enginelocationsinfo() {
  // @@protoc_insertion_point(field_mutable_list:PBLocAPIEngineLocationsInfoIndMsg.engineLocationsInfo)
  return &enginelocationsinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBGnssLocationInfoNotification >&
PBLocAPIEngineLocationsInfoIndMsg::enginelocationsinfo() const {
  // @@protoc_insertion_point(field_list:PBLocAPIEngineLocationsInfoIndMsg.engineLocationsInfo)
  return enginelocationsinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPISatelliteVehicleIndMsg::kGnssSvNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPISatelliteVehicleIndMsg::PBLocAPISatelliteVehicleIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPISatelliteVehicleIndMsg)
}
PBLocAPISatelliteVehicleIndMsg::PBLocAPISatelliteVehicleIndMsg(const PBLocAPISatelliteVehicleIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gnsssvnotification()) {
    gnsssvnotification_ = new ::PBLocApiGnssSvNotification(*from.gnsssvnotification_);
  } else {
    gnsssvnotification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPISatelliteVehicleIndMsg)
}

void PBLocAPISatelliteVehicleIndMsg::SharedCtor() {
  gnsssvnotification_ = NULL;
  _cached_size_ = 0;
}

PBLocAPISatelliteVehicleIndMsg::~PBLocAPISatelliteVehicleIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPISatelliteVehicleIndMsg)
  SharedDtor();
}

void PBLocAPISatelliteVehicleIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gnsssvnotification_;
  }
}

void PBLocAPISatelliteVehicleIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPISatelliteVehicleIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPISatelliteVehicleIndMsg& PBLocAPISatelliteVehicleIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPISatelliteVehicleIndMsg* PBLocAPISatelliteVehicleIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPISatelliteVehicleIndMsg* n = new PBLocAPISatelliteVehicleIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPISatelliteVehicleIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPISatelliteVehicleIndMsg)
  if (GetArenaNoVirtual() == NULL && gnsssvnotification_ != NULL) {
    delete gnsssvnotification_;
  }
  gnsssvnotification_ = NULL;
}

bool PBLocAPISatelliteVehicleIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPISatelliteVehicleIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocApiGnssSvNotification gnssSvNotification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gnsssvnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPISatelliteVehicleIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPISatelliteVehicleIndMsg)
  return false;
#undef DO_
}

void PBLocAPISatelliteVehicleIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPISatelliteVehicleIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocApiGnssSvNotification gnssSvNotification = 1;
  if (this->has_gnsssvnotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gnsssvnotification_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPISatelliteVehicleIndMsg)
}

::google::protobuf::uint8* PBLocAPISatelliteVehicleIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPISatelliteVehicleIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocApiGnssSvNotification gnssSvNotification = 1;
  if (this->has_gnsssvnotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gnsssvnotification_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPISatelliteVehicleIndMsg)
  return target;
}

size_t PBLocAPISatelliteVehicleIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPISatelliteVehicleIndMsg)
  size_t total_size = 0;

  // .PBLocApiGnssSvNotification gnssSvNotification = 1;
  if (this->has_gnsssvnotification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gnsssvnotification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPISatelliteVehicleIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPISatelliteVehicleIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPISatelliteVehicleIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPISatelliteVehicleIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPISatelliteVehicleIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPISatelliteVehicleIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPISatelliteVehicleIndMsg::MergeFrom(const PBLocAPISatelliteVehicleIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPISatelliteVehicleIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gnsssvnotification()) {
    mutable_gnsssvnotification()->::PBLocApiGnssSvNotification::MergeFrom(from.gnsssvnotification());
  }
}

void PBLocAPISatelliteVehicleIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPISatelliteVehicleIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPISatelliteVehicleIndMsg::CopyFrom(const PBLocAPISatelliteVehicleIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPISatelliteVehicleIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPISatelliteVehicleIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPISatelliteVehicleIndMsg::Swap(PBLocAPISatelliteVehicleIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPISatelliteVehicleIndMsg::InternalSwap(PBLocAPISatelliteVehicleIndMsg* other) {
  std::swap(gnsssvnotification_, other->gnsssvnotification_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPISatelliteVehicleIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPISatelliteVehicleIndMsg

// .PBLocApiGnssSvNotification gnssSvNotification = 1;
bool PBLocAPISatelliteVehicleIndMsg::has_gnsssvnotification() const {
  return this != internal_default_instance() && gnsssvnotification_ != NULL;
}
void PBLocAPISatelliteVehicleIndMsg::clear_gnsssvnotification() {
  if (GetArenaNoVirtual() == NULL && gnsssvnotification_ != NULL) delete gnsssvnotification_;
  gnsssvnotification_ = NULL;
}
const ::PBLocApiGnssSvNotification& PBLocAPISatelliteVehicleIndMsg::gnsssvnotification() const {
  // @@protoc_insertion_point(field_get:PBLocAPISatelliteVehicleIndMsg.gnssSvNotification)
  return gnsssvnotification_ != NULL ? *gnsssvnotification_
                         : *::PBLocApiGnssSvNotification::internal_default_instance();
}
::PBLocApiGnssSvNotification* PBLocAPISatelliteVehicleIndMsg::mutable_gnsssvnotification() {

  if (gnsssvnotification_ == NULL) {
    gnsssvnotification_ = new ::PBLocApiGnssSvNotification;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPISatelliteVehicleIndMsg.gnssSvNotification)
  return gnsssvnotification_;
}
::PBLocApiGnssSvNotification* PBLocAPISatelliteVehicleIndMsg::release_gnsssvnotification() {
  // @@protoc_insertion_point(field_release:PBLocAPISatelliteVehicleIndMsg.gnssSvNotification)

  ::PBLocApiGnssSvNotification* temp = gnsssvnotification_;
  gnsssvnotification_ = NULL;
  return temp;
}
void PBLocAPISatelliteVehicleIndMsg::set_allocated_gnsssvnotification(::PBLocApiGnssSvNotification* gnsssvnotification) {
  delete gnsssvnotification_;
  gnsssvnotification_ = gnsssvnotification;
  if (gnsssvnotification) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPISatelliteVehicleIndMsg.gnssSvNotification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPINmeaIndMsg::kGnssNmeaNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPINmeaIndMsg::PBLocAPINmeaIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPINmeaIndMsg)
}
PBLocAPINmeaIndMsg::PBLocAPINmeaIndMsg(const PBLocAPINmeaIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gnssnmeanotification()) {
    gnssnmeanotification_ = new ::PBLocAPINmeaSerializedPayload(*from.gnssnmeanotification_);
  } else {
    gnssnmeanotification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPINmeaIndMsg)
}

void PBLocAPINmeaIndMsg::SharedCtor() {
  gnssnmeanotification_ = NULL;
  _cached_size_ = 0;
}

PBLocAPINmeaIndMsg::~PBLocAPINmeaIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPINmeaIndMsg)
  SharedDtor();
}

void PBLocAPINmeaIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gnssnmeanotification_;
  }
}

void PBLocAPINmeaIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPINmeaIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPINmeaIndMsg& PBLocAPINmeaIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPINmeaIndMsg* PBLocAPINmeaIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPINmeaIndMsg* n = new PBLocAPINmeaIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPINmeaIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPINmeaIndMsg)
  if (GetArenaNoVirtual() == NULL && gnssnmeanotification_ != NULL) {
    delete gnssnmeanotification_;
  }
  gnssnmeanotification_ = NULL;
}

bool PBLocAPINmeaIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPINmeaIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocAPINmeaSerializedPayload gnssNmeaNotification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gnssnmeanotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPINmeaIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPINmeaIndMsg)
  return false;
#undef DO_
}

void PBLocAPINmeaIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPINmeaIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocAPINmeaSerializedPayload gnssNmeaNotification = 1;
  if (this->has_gnssnmeanotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gnssnmeanotification_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPINmeaIndMsg)
}

::google::protobuf::uint8* PBLocAPINmeaIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPINmeaIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocAPINmeaSerializedPayload gnssNmeaNotification = 1;
  if (this->has_gnssnmeanotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gnssnmeanotification_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPINmeaIndMsg)
  return target;
}

size_t PBLocAPINmeaIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPINmeaIndMsg)
  size_t total_size = 0;

  // .PBLocAPINmeaSerializedPayload gnssNmeaNotification = 1;
  if (this->has_gnssnmeanotification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gnssnmeanotification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPINmeaIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPINmeaIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPINmeaIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPINmeaIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPINmeaIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPINmeaIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPINmeaIndMsg::MergeFrom(const PBLocAPINmeaIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPINmeaIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gnssnmeanotification()) {
    mutable_gnssnmeanotification()->::PBLocAPINmeaSerializedPayload::MergeFrom(from.gnssnmeanotification());
  }
}

void PBLocAPINmeaIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPINmeaIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPINmeaIndMsg::CopyFrom(const PBLocAPINmeaIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPINmeaIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPINmeaIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPINmeaIndMsg::Swap(PBLocAPINmeaIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPINmeaIndMsg::InternalSwap(PBLocAPINmeaIndMsg* other) {
  std::swap(gnssnmeanotification_, other->gnssnmeanotification_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPINmeaIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPINmeaIndMsg

// .PBLocAPINmeaSerializedPayload gnssNmeaNotification = 1;
bool PBLocAPINmeaIndMsg::has_gnssnmeanotification() const {
  return this != internal_default_instance() && gnssnmeanotification_ != NULL;
}
void PBLocAPINmeaIndMsg::clear_gnssnmeanotification() {
  if (GetArenaNoVirtual() == NULL && gnssnmeanotification_ != NULL) delete gnssnmeanotification_;
  gnssnmeanotification_ = NULL;
}
const ::PBLocAPINmeaSerializedPayload& PBLocAPINmeaIndMsg::gnssnmeanotification() const {
  // @@protoc_insertion_point(field_get:PBLocAPINmeaIndMsg.gnssNmeaNotification)
  return gnssnmeanotification_ != NULL ? *gnssnmeanotification_
                         : *::PBLocAPINmeaSerializedPayload::internal_default_instance();
}
::PBLocAPINmeaSerializedPayload* PBLocAPINmeaIndMsg::mutable_gnssnmeanotification() {

  if (gnssnmeanotification_ == NULL) {
    gnssnmeanotification_ = new ::PBLocAPINmeaSerializedPayload;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPINmeaIndMsg.gnssNmeaNotification)
  return gnssnmeanotification_;
}
::PBLocAPINmeaSerializedPayload* PBLocAPINmeaIndMsg::release_gnssnmeanotification() {
  // @@protoc_insertion_point(field_release:PBLocAPINmeaIndMsg.gnssNmeaNotification)

  ::PBLocAPINmeaSerializedPayload* temp = gnssnmeanotification_;
  gnssnmeanotification_ = NULL;
  return temp;
}
void PBLocAPINmeaIndMsg::set_allocated_gnssnmeanotification(::PBLocAPINmeaSerializedPayload* gnssnmeanotification) {
  delete gnssnmeanotification_;
  gnssnmeanotification_ = gnssnmeanotification;
  if (gnssnmeanotification) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPINmeaIndMsg.gnssNmeaNotification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIDataIndMsg::kGnssDataNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIDataIndMsg::PBLocAPIDataIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIDataIndMsg)
}
PBLocAPIDataIndMsg::PBLocAPIDataIndMsg(const PBLocAPIDataIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gnssdatanotification()) {
    gnssdatanotification_ = new ::PBGnssDataNotification(*from.gnssdatanotification_);
  } else {
    gnssdatanotification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIDataIndMsg)
}

void PBLocAPIDataIndMsg::SharedCtor() {
  gnssdatanotification_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIDataIndMsg::~PBLocAPIDataIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIDataIndMsg)
  SharedDtor();
}

void PBLocAPIDataIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gnssdatanotification_;
  }
}

void PBLocAPIDataIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIDataIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIDataIndMsg& PBLocAPIDataIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIDataIndMsg* PBLocAPIDataIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIDataIndMsg* n = new PBLocAPIDataIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIDataIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIDataIndMsg)
  if (GetArenaNoVirtual() == NULL && gnssdatanotification_ != NULL) {
    delete gnssdatanotification_;
  }
  gnssdatanotification_ = NULL;
}

bool PBLocAPIDataIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIDataIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGnssDataNotification gnssDataNotification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gnssdatanotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIDataIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIDataIndMsg)
  return false;
#undef DO_
}

void PBLocAPIDataIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIDataIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssDataNotification gnssDataNotification = 1;
  if (this->has_gnssdatanotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gnssdatanotification_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIDataIndMsg)
}

::google::protobuf::uint8* PBLocAPIDataIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIDataIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssDataNotification gnssDataNotification = 1;
  if (this->has_gnssdatanotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gnssdatanotification_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIDataIndMsg)
  return target;
}

size_t PBLocAPIDataIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIDataIndMsg)
  size_t total_size = 0;

  // .PBGnssDataNotification gnssDataNotification = 1;
  if (this->has_gnssdatanotification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gnssdatanotification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIDataIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIDataIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIDataIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIDataIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIDataIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIDataIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIDataIndMsg::MergeFrom(const PBLocAPIDataIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIDataIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gnssdatanotification()) {
    mutable_gnssdatanotification()->::PBGnssDataNotification::MergeFrom(from.gnssdatanotification());
  }
}

void PBLocAPIDataIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIDataIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIDataIndMsg::CopyFrom(const PBLocAPIDataIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIDataIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIDataIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPIDataIndMsg::Swap(PBLocAPIDataIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIDataIndMsg::InternalSwap(PBLocAPIDataIndMsg* other) {
  std::swap(gnssdatanotification_, other->gnssdatanotification_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIDataIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIDataIndMsg

// .PBGnssDataNotification gnssDataNotification = 1;
bool PBLocAPIDataIndMsg::has_gnssdatanotification() const {
  return this != internal_default_instance() && gnssdatanotification_ != NULL;
}
void PBLocAPIDataIndMsg::clear_gnssdatanotification() {
  if (GetArenaNoVirtual() == NULL && gnssdatanotification_ != NULL) delete gnssdatanotification_;
  gnssdatanotification_ = NULL;
}
const ::PBGnssDataNotification& PBLocAPIDataIndMsg::gnssdatanotification() const {
  // @@protoc_insertion_point(field_get:PBLocAPIDataIndMsg.gnssDataNotification)
  return gnssdatanotification_ != NULL ? *gnssdatanotification_
                         : *::PBGnssDataNotification::internal_default_instance();
}
::PBGnssDataNotification* PBLocAPIDataIndMsg::mutable_gnssdatanotification() {

  if (gnssdatanotification_ == NULL) {
    gnssdatanotification_ = new ::PBGnssDataNotification;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIDataIndMsg.gnssDataNotification)
  return gnssdatanotification_;
}
::PBGnssDataNotification* PBLocAPIDataIndMsg::release_gnssdatanotification() {
  // @@protoc_insertion_point(field_release:PBLocAPIDataIndMsg.gnssDataNotification)

  ::PBGnssDataNotification* temp = gnssdatanotification_;
  gnssdatanotification_ = NULL;
  return temp;
}
void PBLocAPIDataIndMsg::set_allocated_gnssdatanotification(::PBGnssDataNotification* gnssdatanotification) {
  delete gnssdatanotification_;
  gnssdatanotification_ = gnssdatanotification;
  if (gnssdatanotification) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIDataIndMsg.gnssDataNotification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIMeasIndMsg::kGnssMeasurementsNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIMeasIndMsg::PBLocAPIMeasIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIMeasIndMsg)
}
PBLocAPIMeasIndMsg::PBLocAPIMeasIndMsg(const PBLocAPIMeasIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gnssmeasurementsnotification()) {
    gnssmeasurementsnotification_ = new ::PBGnssMeasurementsNotification(*from.gnssmeasurementsnotification_);
  } else {
    gnssmeasurementsnotification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPIMeasIndMsg)
}

void PBLocAPIMeasIndMsg::SharedCtor() {
  gnssmeasurementsnotification_ = NULL;
  _cached_size_ = 0;
}

PBLocAPIMeasIndMsg::~PBLocAPIMeasIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIMeasIndMsg)
  SharedDtor();
}

void PBLocAPIMeasIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete gnssmeasurementsnotification_;
  }
}

void PBLocAPIMeasIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIMeasIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIMeasIndMsg& PBLocAPIMeasIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIMeasIndMsg* PBLocAPIMeasIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIMeasIndMsg* n = new PBLocAPIMeasIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIMeasIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIMeasIndMsg)
  if (GetArenaNoVirtual() == NULL && gnssmeasurementsnotification_ != NULL) {
    delete gnssmeasurementsnotification_;
  }
  gnssmeasurementsnotification_ = NULL;
}

bool PBLocAPIMeasIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIMeasIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGnssMeasurementsNotification gnssMeasurementsNotification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gnssmeasurementsnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIMeasIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIMeasIndMsg)
  return false;
#undef DO_
}

void PBLocAPIMeasIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIMeasIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssMeasurementsNotification gnssMeasurementsNotification = 1;
  if (this->has_gnssmeasurementsnotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->gnssmeasurementsnotification_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIMeasIndMsg)
}

::google::protobuf::uint8* PBLocAPIMeasIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIMeasIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssMeasurementsNotification gnssMeasurementsNotification = 1;
  if (this->has_gnssmeasurementsnotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->gnssmeasurementsnotification_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIMeasIndMsg)
  return target;
}

size_t PBLocAPIMeasIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIMeasIndMsg)
  size_t total_size = 0;

  // .PBGnssMeasurementsNotification gnssMeasurementsNotification = 1;
  if (this->has_gnssmeasurementsnotification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gnssmeasurementsnotification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIMeasIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIMeasIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIMeasIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIMeasIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIMeasIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIMeasIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIMeasIndMsg::MergeFrom(const PBLocAPIMeasIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIMeasIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gnssmeasurementsnotification()) {
    mutable_gnssmeasurementsnotification()->::PBGnssMeasurementsNotification::MergeFrom(from.gnssmeasurementsnotification());
  }
}

void PBLocAPIMeasIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIMeasIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIMeasIndMsg::CopyFrom(const PBLocAPIMeasIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIMeasIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIMeasIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPIMeasIndMsg::Swap(PBLocAPIMeasIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIMeasIndMsg::InternalSwap(PBLocAPIMeasIndMsg* other) {
  std::swap(gnssmeasurementsnotification_, other->gnssmeasurementsnotification_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIMeasIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIMeasIndMsg

// .PBGnssMeasurementsNotification gnssMeasurementsNotification = 1;
bool PBLocAPIMeasIndMsg::has_gnssmeasurementsnotification() const {
  return this != internal_default_instance() && gnssmeasurementsnotification_ != NULL;
}
void PBLocAPIMeasIndMsg::clear_gnssmeasurementsnotification() {
  if (GetArenaNoVirtual() == NULL && gnssmeasurementsnotification_ != NULL) delete gnssmeasurementsnotification_;
  gnssmeasurementsnotification_ = NULL;
}
const ::PBGnssMeasurementsNotification& PBLocAPIMeasIndMsg::gnssmeasurementsnotification() const {
  // @@protoc_insertion_point(field_get:PBLocAPIMeasIndMsg.gnssMeasurementsNotification)
  return gnssmeasurementsnotification_ != NULL ? *gnssmeasurementsnotification_
                         : *::PBGnssMeasurementsNotification::internal_default_instance();
}
::PBGnssMeasurementsNotification* PBLocAPIMeasIndMsg::mutable_gnssmeasurementsnotification() {

  if (gnssmeasurementsnotification_ == NULL) {
    gnssmeasurementsnotification_ = new ::PBGnssMeasurementsNotification;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPIMeasIndMsg.gnssMeasurementsNotification)
  return gnssmeasurementsnotification_;
}
::PBGnssMeasurementsNotification* PBLocAPIMeasIndMsg::release_gnssmeasurementsnotification() {
  // @@protoc_insertion_point(field_release:PBLocAPIMeasIndMsg.gnssMeasurementsNotification)

  ::PBGnssMeasurementsNotification* temp = gnssmeasurementsnotification_;
  gnssmeasurementsnotification_ = NULL;
  return temp;
}
void PBLocAPIMeasIndMsg::set_allocated_gnssmeasurementsnotification(::PBGnssMeasurementsNotification* gnssmeasurementsnotification) {
  delete gnssmeasurementsnotification_;
  gnssmeasurementsnotification_ = gnssmeasurementsnotification;
  if (gnssmeasurementsnotification) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIMeasIndMsg.gnssMeasurementsNotification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIGnssEnergyConsumedIndMsg::kTotalGnssEnergyConsumedSinceFirstBootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIGnssEnergyConsumedIndMsg::PBLocAPIGnssEnergyConsumedIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIGnssEnergyConsumedIndMsg)
}
PBLocAPIGnssEnergyConsumedIndMsg::PBLocAPIGnssEnergyConsumedIndMsg(const PBLocAPIGnssEnergyConsumedIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  totalgnssenergyconsumedsincefirstboot_ = from.totalgnssenergyconsumedsincefirstboot_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPIGnssEnergyConsumedIndMsg)
}

void PBLocAPIGnssEnergyConsumedIndMsg::SharedCtor() {
  totalgnssenergyconsumedsincefirstboot_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

PBLocAPIGnssEnergyConsumedIndMsg::~PBLocAPIGnssEnergyConsumedIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIGnssEnergyConsumedIndMsg)
  SharedDtor();
}

void PBLocAPIGnssEnergyConsumedIndMsg::SharedDtor() {
}

void PBLocAPIGnssEnergyConsumedIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIGnssEnergyConsumedIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIGnssEnergyConsumedIndMsg& PBLocAPIGnssEnergyConsumedIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIGnssEnergyConsumedIndMsg* PBLocAPIGnssEnergyConsumedIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIGnssEnergyConsumedIndMsg* n = new PBLocAPIGnssEnergyConsumedIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIGnssEnergyConsumedIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIGnssEnergyConsumedIndMsg)
  totalgnssenergyconsumedsincefirstboot_ = GOOGLE_ULONGLONG(0);
}

bool PBLocAPIGnssEnergyConsumedIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIGnssEnergyConsumedIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 totalGnssEnergyConsumedSinceFirstBoot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalgnssenergyconsumedsincefirstboot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIGnssEnergyConsumedIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIGnssEnergyConsumedIndMsg)
  return false;
#undef DO_
}

void PBLocAPIGnssEnergyConsumedIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIGnssEnergyConsumedIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 totalGnssEnergyConsumedSinceFirstBoot = 1;
  if (this->totalgnssenergyconsumedsincefirstboot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->totalgnssenergyconsumedsincefirstboot(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIGnssEnergyConsumedIndMsg)
}

::google::protobuf::uint8* PBLocAPIGnssEnergyConsumedIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIGnssEnergyConsumedIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 totalGnssEnergyConsumedSinceFirstBoot = 1;
  if (this->totalgnssenergyconsumedsincefirstboot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->totalgnssenergyconsumedsincefirstboot(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIGnssEnergyConsumedIndMsg)
  return target;
}

size_t PBLocAPIGnssEnergyConsumedIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIGnssEnergyConsumedIndMsg)
  size_t total_size = 0;

  // uint64 totalGnssEnergyConsumedSinceFirstBoot = 1;
  if (this->totalgnssenergyconsumedsincefirstboot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalgnssenergyconsumedsincefirstboot());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIGnssEnergyConsumedIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIGnssEnergyConsumedIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIGnssEnergyConsumedIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIGnssEnergyConsumedIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIGnssEnergyConsumedIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIGnssEnergyConsumedIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIGnssEnergyConsumedIndMsg::MergeFrom(const PBLocAPIGnssEnergyConsumedIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIGnssEnergyConsumedIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.totalgnssenergyconsumedsincefirstboot() != 0) {
    set_totalgnssenergyconsumedsincefirstboot(from.totalgnssenergyconsumedsincefirstboot());
  }
}

void PBLocAPIGnssEnergyConsumedIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIGnssEnergyConsumedIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIGnssEnergyConsumedIndMsg::CopyFrom(const PBLocAPIGnssEnergyConsumedIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIGnssEnergyConsumedIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIGnssEnergyConsumedIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPIGnssEnergyConsumedIndMsg::Swap(PBLocAPIGnssEnergyConsumedIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIGnssEnergyConsumedIndMsg::InternalSwap(PBLocAPIGnssEnergyConsumedIndMsg* other) {
  std::swap(totalgnssenergyconsumedsincefirstboot_, other->totalgnssenergyconsumedsincefirstboot_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIGnssEnergyConsumedIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIGnssEnergyConsumedIndMsg

// uint64 totalGnssEnergyConsumedSinceFirstBoot = 1;
void PBLocAPIGnssEnergyConsumedIndMsg::clear_totalgnssenergyconsumedsincefirstboot() {
  totalgnssenergyconsumedsincefirstboot_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PBLocAPIGnssEnergyConsumedIndMsg::totalgnssenergyconsumedsincefirstboot() const {
  // @@protoc_insertion_point(field_get:PBLocAPIGnssEnergyConsumedIndMsg.totalGnssEnergyConsumedSinceFirstBoot)
  return totalgnssenergyconsumedsincefirstboot_;
}
void PBLocAPIGnssEnergyConsumedIndMsg::set_totalgnssenergyconsumedsincefirstboot(::google::protobuf::uint64 value) {

  totalgnssenergyconsumedsincefirstboot_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIGnssEnergyConsumedIndMsg.totalGnssEnergyConsumedSinceFirstBoot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPILocationSystemInfoIndMsg::kLocationSystemInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPILocationSystemInfoIndMsg::PBLocAPILocationSystemInfoIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPILocationSystemInfoIndMsg)
}
PBLocAPILocationSystemInfoIndMsg::PBLocAPILocationSystemInfoIndMsg(const PBLocAPILocationSystemInfoIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_locationsysteminfo()) {
    locationsysteminfo_ = new ::PBLocationSystemInfo(*from.locationsysteminfo_);
  } else {
    locationsysteminfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocAPILocationSystemInfoIndMsg)
}

void PBLocAPILocationSystemInfoIndMsg::SharedCtor() {
  locationsysteminfo_ = NULL;
  _cached_size_ = 0;
}

PBLocAPILocationSystemInfoIndMsg::~PBLocAPILocationSystemInfoIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPILocationSystemInfoIndMsg)
  SharedDtor();
}

void PBLocAPILocationSystemInfoIndMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete locationsysteminfo_;
  }
}

void PBLocAPILocationSystemInfoIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPILocationSystemInfoIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPILocationSystemInfoIndMsg& PBLocAPILocationSystemInfoIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPILocationSystemInfoIndMsg* PBLocAPILocationSystemInfoIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPILocationSystemInfoIndMsg* n = new PBLocAPILocationSystemInfoIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPILocationSystemInfoIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPILocationSystemInfoIndMsg)
  if (GetArenaNoVirtual() == NULL && locationsysteminfo_ != NULL) {
    delete locationsysteminfo_;
  }
  locationsysteminfo_ = NULL;
}

bool PBLocAPILocationSystemInfoIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPILocationSystemInfoIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLocationSystemInfo locationSystemInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locationsysteminfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPILocationSystemInfoIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPILocationSystemInfoIndMsg)
  return false;
#undef DO_
}

void PBLocAPILocationSystemInfoIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPILocationSystemInfoIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationSystemInfo locationSystemInfo = 1;
  if (this->has_locationsysteminfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->locationsysteminfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPILocationSystemInfoIndMsg)
}

::google::protobuf::uint8* PBLocAPILocationSystemInfoIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPILocationSystemInfoIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationSystemInfo locationSystemInfo = 1;
  if (this->has_locationsysteminfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->locationsysteminfo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPILocationSystemInfoIndMsg)
  return target;
}

size_t PBLocAPILocationSystemInfoIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPILocationSystemInfoIndMsg)
  size_t total_size = 0;

  // .PBLocationSystemInfo locationSystemInfo = 1;
  if (this->has_locationsysteminfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locationsysteminfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPILocationSystemInfoIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPILocationSystemInfoIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPILocationSystemInfoIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPILocationSystemInfoIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPILocationSystemInfoIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPILocationSystemInfoIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPILocationSystemInfoIndMsg::MergeFrom(const PBLocAPILocationSystemInfoIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPILocationSystemInfoIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_locationsysteminfo()) {
    mutable_locationsysteminfo()->::PBLocationSystemInfo::MergeFrom(from.locationsysteminfo());
  }
}

void PBLocAPILocationSystemInfoIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPILocationSystemInfoIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPILocationSystemInfoIndMsg::CopyFrom(const PBLocAPILocationSystemInfoIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPILocationSystemInfoIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPILocationSystemInfoIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPILocationSystemInfoIndMsg::Swap(PBLocAPILocationSystemInfoIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPILocationSystemInfoIndMsg::InternalSwap(PBLocAPILocationSystemInfoIndMsg* other) {
  std::swap(locationsysteminfo_, other->locationsysteminfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPILocationSystemInfoIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPILocationSystemInfoIndMsg

// .PBLocationSystemInfo locationSystemInfo = 1;
bool PBLocAPILocationSystemInfoIndMsg::has_locationsysteminfo() const {
  return this != internal_default_instance() && locationsysteminfo_ != NULL;
}
void PBLocAPILocationSystemInfoIndMsg::clear_locationsysteminfo() {
  if (GetArenaNoVirtual() == NULL && locationsysteminfo_ != NULL) delete locationsysteminfo_;
  locationsysteminfo_ = NULL;
}
const ::PBLocationSystemInfo& PBLocAPILocationSystemInfoIndMsg::locationsysteminfo() const {
  // @@protoc_insertion_point(field_get:PBLocAPILocationSystemInfoIndMsg.locationSystemInfo)
  return locationsysteminfo_ != NULL ? *locationsysteminfo_
                         : *::PBLocationSystemInfo::internal_default_instance();
}
::PBLocationSystemInfo* PBLocAPILocationSystemInfoIndMsg::mutable_locationsysteminfo() {

  if (locationsysteminfo_ == NULL) {
    locationsysteminfo_ = new ::PBLocationSystemInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBLocAPILocationSystemInfoIndMsg.locationSystemInfo)
  return locationsysteminfo_;
}
::PBLocationSystemInfo* PBLocAPILocationSystemInfoIndMsg::release_locationsysteminfo() {
  // @@protoc_insertion_point(field_release:PBLocAPILocationSystemInfoIndMsg.locationSystemInfo)

  ::PBLocationSystemInfo* temp = locationsysteminfo_;
  locationsysteminfo_ = NULL;
  return temp;
}
void PBLocAPILocationSystemInfoIndMsg::set_allocated_locationsysteminfo(::PBLocationSystemInfo* locationsysteminfo) {
  delete locationsysteminfo_;
  locationsysteminfo_ = locationsysteminfo;
  if (locationsysteminfo) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocAPILocationSystemInfoIndMsg.locationSystemInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigConstrainedTuncReqMsg::kMEnableFieldNumber;
const int PBLocConfigConstrainedTuncReqMsg::kMTuncConstraintFieldNumber;
const int PBLocConfigConstrainedTuncReqMsg::kMEnergyBudgetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigConstrainedTuncReqMsg::PBLocConfigConstrainedTuncReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigConstrainedTuncReqMsg)
}
PBLocConfigConstrainedTuncReqMsg::PBLocConfigConstrainedTuncReqMsg(const PBLocConfigConstrainedTuncReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&menable_, &from.menable_,
    reinterpret_cast<char*>(&menergybudget_) -
    reinterpret_cast<char*>(&menable_) + sizeof(menergybudget_));
  // @@protoc_insertion_point(copy_constructor:PBLocConfigConstrainedTuncReqMsg)
}

void PBLocConfigConstrainedTuncReqMsg::SharedCtor() {
  ::memset(&menable_, 0, reinterpret_cast<char*>(&menergybudget_) -
    reinterpret_cast<char*>(&menable_) + sizeof(menergybudget_));
  _cached_size_ = 0;
}

PBLocConfigConstrainedTuncReqMsg::~PBLocConfigConstrainedTuncReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigConstrainedTuncReqMsg)
  SharedDtor();
}

void PBLocConfigConstrainedTuncReqMsg::SharedDtor() {
}

void PBLocConfigConstrainedTuncReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigConstrainedTuncReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigConstrainedTuncReqMsg& PBLocConfigConstrainedTuncReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigConstrainedTuncReqMsg* PBLocConfigConstrainedTuncReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigConstrainedTuncReqMsg* n = new PBLocConfigConstrainedTuncReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigConstrainedTuncReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigConstrainedTuncReqMsg)
  ::memset(&menable_, 0, reinterpret_cast<char*>(&menergybudget_) -
    reinterpret_cast<char*>(&menable_) + sizeof(menergybudget_));
}

bool PBLocConfigConstrainedTuncReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigConstrainedTuncReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool mEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &menable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float mTuncConstraint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mtuncconstraint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mEnergyBudget = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &menergybudget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigConstrainedTuncReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigConstrainedTuncReqMsg)
  return false;
#undef DO_
}

void PBLocConfigConstrainedTuncReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigConstrainedTuncReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->menable(), output);
  }

  // float mTuncConstraint = 2;
  if (this->mtuncconstraint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->mtuncconstraint(), output);
  }

  // uint32 mEnergyBudget = 3;
  if (this->menergybudget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->menergybudget(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigConstrainedTuncReqMsg)
}

::google::protobuf::uint8* PBLocConfigConstrainedTuncReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigConstrainedTuncReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->menable(), target);
  }

  // float mTuncConstraint = 2;
  if (this->mtuncconstraint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->mtuncconstraint(), target);
  }

  // uint32 mEnergyBudget = 3;
  if (this->menergybudget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->menergybudget(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigConstrainedTuncReqMsg)
  return target;
}

size_t PBLocConfigConstrainedTuncReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigConstrainedTuncReqMsg)
  size_t total_size = 0;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    total_size += 1 + 1;
  }

  // float mTuncConstraint = 2;
  if (this->mtuncconstraint() != 0) {
    total_size += 1 + 4;
  }

  // uint32 mEnergyBudget = 3;
  if (this->menergybudget() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->menergybudget());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigConstrainedTuncReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigConstrainedTuncReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigConstrainedTuncReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigConstrainedTuncReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigConstrainedTuncReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigConstrainedTuncReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigConstrainedTuncReqMsg::MergeFrom(const PBLocConfigConstrainedTuncReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigConstrainedTuncReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.menable() != 0) {
    set_menable(from.menable());
  }
  if (from.mtuncconstraint() != 0) {
    set_mtuncconstraint(from.mtuncconstraint());
  }
  if (from.menergybudget() != 0) {
    set_menergybudget(from.menergybudget());
  }
}

void PBLocConfigConstrainedTuncReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigConstrainedTuncReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigConstrainedTuncReqMsg::CopyFrom(const PBLocConfigConstrainedTuncReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigConstrainedTuncReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigConstrainedTuncReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigConstrainedTuncReqMsg::Swap(PBLocConfigConstrainedTuncReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigConstrainedTuncReqMsg::InternalSwap(PBLocConfigConstrainedTuncReqMsg* other) {
  std::swap(menable_, other->menable_);
  std::swap(mtuncconstraint_, other->mtuncconstraint_);
  std::swap(menergybudget_, other->menergybudget_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigConstrainedTuncReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigConstrainedTuncReqMsg

// bool mEnable = 1;
void PBLocConfigConstrainedTuncReqMsg::clear_menable() {
  menable_ = false;
}
bool PBLocConfigConstrainedTuncReqMsg::menable() const {
  // @@protoc_insertion_point(field_get:PBLocConfigConstrainedTuncReqMsg.mEnable)
  return menable_;
}
void PBLocConfigConstrainedTuncReqMsg::set_menable(bool value) {

  menable_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigConstrainedTuncReqMsg.mEnable)
}

// float mTuncConstraint = 2;
void PBLocConfigConstrainedTuncReqMsg::clear_mtuncconstraint() {
  mtuncconstraint_ = 0;
}
float PBLocConfigConstrainedTuncReqMsg::mtuncconstraint() const {
  // @@protoc_insertion_point(field_get:PBLocConfigConstrainedTuncReqMsg.mTuncConstraint)
  return mtuncconstraint_;
}
void PBLocConfigConstrainedTuncReqMsg::set_mtuncconstraint(float value) {

  mtuncconstraint_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigConstrainedTuncReqMsg.mTuncConstraint)
}

// uint32 mEnergyBudget = 3;
void PBLocConfigConstrainedTuncReqMsg::clear_menergybudget() {
  menergybudget_ = 0u;
}
::google::protobuf::uint32 PBLocConfigConstrainedTuncReqMsg::menergybudget() const {
  // @@protoc_insertion_point(field_get:PBLocConfigConstrainedTuncReqMsg.mEnergyBudget)
  return menergybudget_;
}
void PBLocConfigConstrainedTuncReqMsg::set_menergybudget(::google::protobuf::uint32 value) {

  menergybudget_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigConstrainedTuncReqMsg.mEnergyBudget)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigPositionAssistedClockEstimatorReqMsg::kMEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigPositionAssistedClockEstimatorReqMsg::PBLocConfigPositionAssistedClockEstimatorReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigPositionAssistedClockEstimatorReqMsg)
}
PBLocConfigPositionAssistedClockEstimatorReqMsg::PBLocConfigPositionAssistedClockEstimatorReqMsg(const PBLocConfigPositionAssistedClockEstimatorReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  menable_ = from.menable_;
  // @@protoc_insertion_point(copy_constructor:PBLocConfigPositionAssistedClockEstimatorReqMsg)
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::SharedCtor() {
  menable_ = false;
  _cached_size_ = 0;
}

PBLocConfigPositionAssistedClockEstimatorReqMsg::~PBLocConfigPositionAssistedClockEstimatorReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  SharedDtor();
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::SharedDtor() {
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigPositionAssistedClockEstimatorReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigPositionAssistedClockEstimatorReqMsg& PBLocConfigPositionAssistedClockEstimatorReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigPositionAssistedClockEstimatorReqMsg* PBLocConfigPositionAssistedClockEstimatorReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigPositionAssistedClockEstimatorReqMsg* n = new PBLocConfigPositionAssistedClockEstimatorReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  menable_ = false;
}

bool PBLocConfigPositionAssistedClockEstimatorReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool mEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &menable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  return false;
#undef DO_
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->menable(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigPositionAssistedClockEstimatorReqMsg)
}

::google::protobuf::uint8* PBLocConfigPositionAssistedClockEstimatorReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->menable(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  return target;
}

size_t PBLocConfigPositionAssistedClockEstimatorReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  size_t total_size = 0;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigPositionAssistedClockEstimatorReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigPositionAssistedClockEstimatorReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigPositionAssistedClockEstimatorReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigPositionAssistedClockEstimatorReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::MergeFrom(const PBLocConfigPositionAssistedClockEstimatorReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.menable() != 0) {
    set_menable(from.menable());
  }
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::CopyFrom(const PBLocConfigPositionAssistedClockEstimatorReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigPositionAssistedClockEstimatorReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigPositionAssistedClockEstimatorReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigPositionAssistedClockEstimatorReqMsg::Swap(PBLocConfigPositionAssistedClockEstimatorReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigPositionAssistedClockEstimatorReqMsg::InternalSwap(PBLocConfigPositionAssistedClockEstimatorReqMsg* other) {
  std::swap(menable_, other->menable_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigPositionAssistedClockEstimatorReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigPositionAssistedClockEstimatorReqMsg

// bool mEnable = 1;
void PBLocConfigPositionAssistedClockEstimatorReqMsg::clear_menable() {
  menable_ = false;
}
bool PBLocConfigPositionAssistedClockEstimatorReqMsg::menable() const {
  // @@protoc_insertion_point(field_get:PBLocConfigPositionAssistedClockEstimatorReqMsg.mEnable)
  return menable_;
}
void PBLocConfigPositionAssistedClockEstimatorReqMsg::set_menable(bool value) {

  menable_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigPositionAssistedClockEstimatorReqMsg.mEnable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigSvConstellationReqMsg::kMConstellationEnablementConfigFieldNumber;
const int PBLocConfigSvConstellationReqMsg::kMBlacklistSvConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigSvConstellationReqMsg::PBLocConfigSvConstellationReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigSvConstellationReqMsg)
}
PBLocConfigSvConstellationReqMsg::PBLocConfigSvConstellationReqMsg(const PBLocConfigSvConstellationReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mconstellationenablementconfig()) {
    mconstellationenablementconfig_ = new ::PBGnssSvTypeConfig(*from.mconstellationenablementconfig_);
  } else {
    mconstellationenablementconfig_ = NULL;
  }
  if (from.has_mblacklistsvconfig()) {
    mblacklistsvconfig_ = new ::PBGnssSvIdConfig(*from.mblacklistsvconfig_);
  } else {
    mblacklistsvconfig_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocConfigSvConstellationReqMsg)
}

void PBLocConfigSvConstellationReqMsg::SharedCtor() {
  ::memset(&mconstellationenablementconfig_, 0, reinterpret_cast<char*>(&mblacklistsvconfig_) -
    reinterpret_cast<char*>(&mconstellationenablementconfig_) + sizeof(mblacklistsvconfig_));
  _cached_size_ = 0;
}

PBLocConfigSvConstellationReqMsg::~PBLocConfigSvConstellationReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigSvConstellationReqMsg)
  SharedDtor();
}

void PBLocConfigSvConstellationReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete mconstellationenablementconfig_;
  }
  if (this != internal_default_instance()) {
    delete mblacklistsvconfig_;
  }
}

void PBLocConfigSvConstellationReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigSvConstellationReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigSvConstellationReqMsg& PBLocConfigSvConstellationReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigSvConstellationReqMsg* PBLocConfigSvConstellationReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigSvConstellationReqMsg* n = new PBLocConfigSvConstellationReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigSvConstellationReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigSvConstellationReqMsg)
  if (GetArenaNoVirtual() == NULL && mconstellationenablementconfig_ != NULL) {
    delete mconstellationenablementconfig_;
  }
  mconstellationenablementconfig_ = NULL;
  if (GetArenaNoVirtual() == NULL && mblacklistsvconfig_ != NULL) {
    delete mblacklistsvconfig_;
  }
  mblacklistsvconfig_ = NULL;
}

bool PBLocConfigSvConstellationReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigSvConstellationReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGnssSvTypeConfig mConstellationEnablementConfig = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mconstellationenablementconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBGnssSvIdConfig mBlacklistSvConfig = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mblacklistsvconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigSvConstellationReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigSvConstellationReqMsg)
  return false;
#undef DO_
}

void PBLocConfigSvConstellationReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigSvConstellationReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssSvTypeConfig mConstellationEnablementConfig = 1;
  if (this->has_mconstellationenablementconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->mconstellationenablementconfig_, output);
  }

  // .PBGnssSvIdConfig mBlacklistSvConfig = 2;
  if (this->has_mblacklistsvconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mblacklistsvconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigSvConstellationReqMsg)
}

::google::protobuf::uint8* PBLocConfigSvConstellationReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigSvConstellationReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssSvTypeConfig mConstellationEnablementConfig = 1;
  if (this->has_mconstellationenablementconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->mconstellationenablementconfig_, deterministic, target);
  }

  // .PBGnssSvIdConfig mBlacklistSvConfig = 2;
  if (this->has_mblacklistsvconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->mblacklistsvconfig_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigSvConstellationReqMsg)
  return target;
}

size_t PBLocConfigSvConstellationReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigSvConstellationReqMsg)
  size_t total_size = 0;

  // .PBGnssSvTypeConfig mConstellationEnablementConfig = 1;
  if (this->has_mconstellationenablementconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mconstellationenablementconfig_);
  }

  // .PBGnssSvIdConfig mBlacklistSvConfig = 2;
  if (this->has_mblacklistsvconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mblacklistsvconfig_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigSvConstellationReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigSvConstellationReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigSvConstellationReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigSvConstellationReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigSvConstellationReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigSvConstellationReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigSvConstellationReqMsg::MergeFrom(const PBLocConfigSvConstellationReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigSvConstellationReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mconstellationenablementconfig()) {
    mutable_mconstellationenablementconfig()->::PBGnssSvTypeConfig::MergeFrom(from.mconstellationenablementconfig());
  }
  if (from.has_mblacklistsvconfig()) {
    mutable_mblacklistsvconfig()->::PBGnssSvIdConfig::MergeFrom(from.mblacklistsvconfig());
  }
}

void PBLocConfigSvConstellationReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigSvConstellationReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigSvConstellationReqMsg::CopyFrom(const PBLocConfigSvConstellationReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigSvConstellationReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigSvConstellationReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigSvConstellationReqMsg::Swap(PBLocConfigSvConstellationReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigSvConstellationReqMsg::InternalSwap(PBLocConfigSvConstellationReqMsg* other) {
  std::swap(mconstellationenablementconfig_, other->mconstellationenablementconfig_);
  std::swap(mblacklistsvconfig_, other->mblacklistsvconfig_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigSvConstellationReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigSvConstellationReqMsg

// .PBGnssSvTypeConfig mConstellationEnablementConfig = 1;
bool PBLocConfigSvConstellationReqMsg::has_mconstellationenablementconfig() const {
  return this != internal_default_instance() && mconstellationenablementconfig_ != NULL;
}
void PBLocConfigSvConstellationReqMsg::clear_mconstellationenablementconfig() {
  if (GetArenaNoVirtual() == NULL && mconstellationenablementconfig_ != NULL) delete mconstellationenablementconfig_;
  mconstellationenablementconfig_ = NULL;
}
const ::PBGnssSvTypeConfig& PBLocConfigSvConstellationReqMsg::mconstellationenablementconfig() const {
  // @@protoc_insertion_point(field_get:PBLocConfigSvConstellationReqMsg.mConstellationEnablementConfig)
  return mconstellationenablementconfig_ != NULL ? *mconstellationenablementconfig_
                         : *::PBGnssSvTypeConfig::internal_default_instance();
}
::PBGnssSvTypeConfig* PBLocConfigSvConstellationReqMsg::mutable_mconstellationenablementconfig() {

  if (mconstellationenablementconfig_ == NULL) {
    mconstellationenablementconfig_ = new ::PBGnssSvTypeConfig;
  }
  // @@protoc_insertion_point(field_mutable:PBLocConfigSvConstellationReqMsg.mConstellationEnablementConfig)
  return mconstellationenablementconfig_;
}
::PBGnssSvTypeConfig* PBLocConfigSvConstellationReqMsg::release_mconstellationenablementconfig() {
  // @@protoc_insertion_point(field_release:PBLocConfigSvConstellationReqMsg.mConstellationEnablementConfig)

  ::PBGnssSvTypeConfig* temp = mconstellationenablementconfig_;
  mconstellationenablementconfig_ = NULL;
  return temp;
}
void PBLocConfigSvConstellationReqMsg::set_allocated_mconstellationenablementconfig(::PBGnssSvTypeConfig* mconstellationenablementconfig) {
  delete mconstellationenablementconfig_;
  mconstellationenablementconfig_ = mconstellationenablementconfig;
  if (mconstellationenablementconfig) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocConfigSvConstellationReqMsg.mConstellationEnablementConfig)
}

// .PBGnssSvIdConfig mBlacklistSvConfig = 2;
bool PBLocConfigSvConstellationReqMsg::has_mblacklistsvconfig() const {
  return this != internal_default_instance() && mblacklistsvconfig_ != NULL;
}
void PBLocConfigSvConstellationReqMsg::clear_mblacklistsvconfig() {
  if (GetArenaNoVirtual() == NULL && mblacklistsvconfig_ != NULL) delete mblacklistsvconfig_;
  mblacklistsvconfig_ = NULL;
}
const ::PBGnssSvIdConfig& PBLocConfigSvConstellationReqMsg::mblacklistsvconfig() const {
  // @@protoc_insertion_point(field_get:PBLocConfigSvConstellationReqMsg.mBlacklistSvConfig)
  return mblacklistsvconfig_ != NULL ? *mblacklistsvconfig_
                         : *::PBGnssSvIdConfig::internal_default_instance();
}
::PBGnssSvIdConfig* PBLocConfigSvConstellationReqMsg::mutable_mblacklistsvconfig() {

  if (mblacklistsvconfig_ == NULL) {
    mblacklistsvconfig_ = new ::PBGnssSvIdConfig;
  }
  // @@protoc_insertion_point(field_mutable:PBLocConfigSvConstellationReqMsg.mBlacklistSvConfig)
  return mblacklistsvconfig_;
}
::PBGnssSvIdConfig* PBLocConfigSvConstellationReqMsg::release_mblacklistsvconfig() {
  // @@protoc_insertion_point(field_release:PBLocConfigSvConstellationReqMsg.mBlacklistSvConfig)

  ::PBGnssSvIdConfig* temp = mblacklistsvconfig_;
  mblacklistsvconfig_ = NULL;
  return temp;
}
void PBLocConfigSvConstellationReqMsg::set_allocated_mblacklistsvconfig(::PBGnssSvIdConfig* mblacklistsvconfig) {
  delete mblacklistsvconfig_;
  mblacklistsvconfig_ = mblacklistsvconfig;
  if (mblacklistsvconfig) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocConfigSvConstellationReqMsg.mBlacklistSvConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigConstellationSecondaryBandReqMsg::kMSecondaryBandConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigConstellationSecondaryBandReqMsg::PBLocConfigConstellationSecondaryBandReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigConstellationSecondaryBandReqMsg)
}
PBLocConfigConstellationSecondaryBandReqMsg::PBLocConfigConstellationSecondaryBandReqMsg(const PBLocConfigConstellationSecondaryBandReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msecondarybandconfig()) {
    msecondarybandconfig_ = new ::PBGnssSvTypeConfig(*from.msecondarybandconfig_);
  } else {
    msecondarybandconfig_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocConfigConstellationSecondaryBandReqMsg)
}

void PBLocConfigConstellationSecondaryBandReqMsg::SharedCtor() {
  msecondarybandconfig_ = NULL;
  _cached_size_ = 0;
}

PBLocConfigConstellationSecondaryBandReqMsg::~PBLocConfigConstellationSecondaryBandReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigConstellationSecondaryBandReqMsg)
  SharedDtor();
}

void PBLocConfigConstellationSecondaryBandReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msecondarybandconfig_;
  }
}

void PBLocConfigConstellationSecondaryBandReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigConstellationSecondaryBandReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigConstellationSecondaryBandReqMsg& PBLocConfigConstellationSecondaryBandReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigConstellationSecondaryBandReqMsg* PBLocConfigConstellationSecondaryBandReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigConstellationSecondaryBandReqMsg* n = new PBLocConfigConstellationSecondaryBandReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigConstellationSecondaryBandReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigConstellationSecondaryBandReqMsg)
  if (GetArenaNoVirtual() == NULL && msecondarybandconfig_ != NULL) {
    delete msecondarybandconfig_;
  }
  msecondarybandconfig_ = NULL;
}

bool PBLocConfigConstellationSecondaryBandReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigConstellationSecondaryBandReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msecondarybandconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigConstellationSecondaryBandReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigConstellationSecondaryBandReqMsg)
  return false;
#undef DO_
}

void PBLocConfigConstellationSecondaryBandReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigConstellationSecondaryBandReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
  if (this->has_msecondarybandconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msecondarybandconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigConstellationSecondaryBandReqMsg)
}

::google::protobuf::uint8* PBLocConfigConstellationSecondaryBandReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigConstellationSecondaryBandReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
  if (this->has_msecondarybandconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msecondarybandconfig_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigConstellationSecondaryBandReqMsg)
  return target;
}

size_t PBLocConfigConstellationSecondaryBandReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigConstellationSecondaryBandReqMsg)
  size_t total_size = 0;

  // .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
  if (this->has_msecondarybandconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msecondarybandconfig_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigConstellationSecondaryBandReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigConstellationSecondaryBandReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigConstellationSecondaryBandReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigConstellationSecondaryBandReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigConstellationSecondaryBandReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigConstellationSecondaryBandReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigConstellationSecondaryBandReqMsg::MergeFrom(const PBLocConfigConstellationSecondaryBandReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigConstellationSecondaryBandReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msecondarybandconfig()) {
    mutable_msecondarybandconfig()->::PBGnssSvTypeConfig::MergeFrom(from.msecondarybandconfig());
  }
}

void PBLocConfigConstellationSecondaryBandReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigConstellationSecondaryBandReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigConstellationSecondaryBandReqMsg::CopyFrom(const PBLocConfigConstellationSecondaryBandReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigConstellationSecondaryBandReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigConstellationSecondaryBandReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigConstellationSecondaryBandReqMsg::Swap(PBLocConfigConstellationSecondaryBandReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigConstellationSecondaryBandReqMsg::InternalSwap(PBLocConfigConstellationSecondaryBandReqMsg* other) {
  std::swap(msecondarybandconfig_, other->msecondarybandconfig_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigConstellationSecondaryBandReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigConstellationSecondaryBandReqMsg

// .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
bool PBLocConfigConstellationSecondaryBandReqMsg::has_msecondarybandconfig() const {
  return this != internal_default_instance() && msecondarybandconfig_ != NULL;
}
void PBLocConfigConstellationSecondaryBandReqMsg::clear_msecondarybandconfig() {
  if (GetArenaNoVirtual() == NULL && msecondarybandconfig_ != NULL) delete msecondarybandconfig_;
  msecondarybandconfig_ = NULL;
}
const ::PBGnssSvTypeConfig& PBLocConfigConstellationSecondaryBandReqMsg::msecondarybandconfig() const {
  // @@protoc_insertion_point(field_get:PBLocConfigConstellationSecondaryBandReqMsg.mSecondaryBandConfig)
  return msecondarybandconfig_ != NULL ? *msecondarybandconfig_
                         : *::PBGnssSvTypeConfig::internal_default_instance();
}
::PBGnssSvTypeConfig* PBLocConfigConstellationSecondaryBandReqMsg::mutable_msecondarybandconfig() {

  if (msecondarybandconfig_ == NULL) {
    msecondarybandconfig_ = new ::PBGnssSvTypeConfig;
  }
  // @@protoc_insertion_point(field_mutable:PBLocConfigConstellationSecondaryBandReqMsg.mSecondaryBandConfig)
  return msecondarybandconfig_;
}
::PBGnssSvTypeConfig* PBLocConfigConstellationSecondaryBandReqMsg::release_msecondarybandconfig() {
  // @@protoc_insertion_point(field_release:PBLocConfigConstellationSecondaryBandReqMsg.mSecondaryBandConfig)

  ::PBGnssSvTypeConfig* temp = msecondarybandconfig_;
  msecondarybandconfig_ = NULL;
  return temp;
}
void PBLocConfigConstellationSecondaryBandReqMsg::set_allocated_msecondarybandconfig(::PBGnssSvTypeConfig* msecondarybandconfig) {
  delete msecondarybandconfig_;
  msecondarybandconfig_ = msecondarybandconfig;
  if (msecondarybandconfig) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocConfigConstellationSecondaryBandReqMsg.mSecondaryBandConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigAidingDataDeletionReqMsg::kMAidingDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigAidingDataDeletionReqMsg::PBLocConfigAidingDataDeletionReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigAidingDataDeletionReqMsg)
}
PBLocConfigAidingDataDeletionReqMsg::PBLocConfigAidingDataDeletionReqMsg(const PBLocConfigAidingDataDeletionReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_maidingdata()) {
    maidingdata_ = new ::PBAidingData(*from.maidingdata_);
  } else {
    maidingdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocConfigAidingDataDeletionReqMsg)
}

void PBLocConfigAidingDataDeletionReqMsg::SharedCtor() {
  maidingdata_ = NULL;
  _cached_size_ = 0;
}

PBLocConfigAidingDataDeletionReqMsg::~PBLocConfigAidingDataDeletionReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigAidingDataDeletionReqMsg)
  SharedDtor();
}

void PBLocConfigAidingDataDeletionReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete maidingdata_;
  }
}

void PBLocConfigAidingDataDeletionReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigAidingDataDeletionReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigAidingDataDeletionReqMsg& PBLocConfigAidingDataDeletionReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigAidingDataDeletionReqMsg* PBLocConfigAidingDataDeletionReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigAidingDataDeletionReqMsg* n = new PBLocConfigAidingDataDeletionReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigAidingDataDeletionReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigAidingDataDeletionReqMsg)
  if (GetArenaNoVirtual() == NULL && maidingdata_ != NULL) {
    delete maidingdata_;
  }
  maidingdata_ = NULL;
}

bool PBLocConfigAidingDataDeletionReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigAidingDataDeletionReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBAidingData mAidingData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maidingdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigAidingDataDeletionReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigAidingDataDeletionReqMsg)
  return false;
#undef DO_
}

void PBLocConfigAidingDataDeletionReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigAidingDataDeletionReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBAidingData mAidingData = 1;
  if (this->has_maidingdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->maidingdata_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigAidingDataDeletionReqMsg)
}

::google::protobuf::uint8* PBLocConfigAidingDataDeletionReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigAidingDataDeletionReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBAidingData mAidingData = 1;
  if (this->has_maidingdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->maidingdata_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigAidingDataDeletionReqMsg)
  return target;
}

size_t PBLocConfigAidingDataDeletionReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigAidingDataDeletionReqMsg)
  size_t total_size = 0;

  // .PBAidingData mAidingData = 1;
  if (this->has_maidingdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->maidingdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigAidingDataDeletionReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigAidingDataDeletionReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigAidingDataDeletionReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigAidingDataDeletionReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigAidingDataDeletionReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigAidingDataDeletionReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigAidingDataDeletionReqMsg::MergeFrom(const PBLocConfigAidingDataDeletionReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigAidingDataDeletionReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_maidingdata()) {
    mutable_maidingdata()->::PBAidingData::MergeFrom(from.maidingdata());
  }
}

void PBLocConfigAidingDataDeletionReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigAidingDataDeletionReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigAidingDataDeletionReqMsg::CopyFrom(const PBLocConfigAidingDataDeletionReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigAidingDataDeletionReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigAidingDataDeletionReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigAidingDataDeletionReqMsg::Swap(PBLocConfigAidingDataDeletionReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigAidingDataDeletionReqMsg::InternalSwap(PBLocConfigAidingDataDeletionReqMsg* other) {
  std::swap(maidingdata_, other->maidingdata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigAidingDataDeletionReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigAidingDataDeletionReqMsg

// .PBAidingData mAidingData = 1;
bool PBLocConfigAidingDataDeletionReqMsg::has_maidingdata() const {
  return this != internal_default_instance() && maidingdata_ != NULL;
}
void PBLocConfigAidingDataDeletionReqMsg::clear_maidingdata() {
  if (GetArenaNoVirtual() == NULL && maidingdata_ != NULL) delete maidingdata_;
  maidingdata_ = NULL;
}
const ::PBAidingData& PBLocConfigAidingDataDeletionReqMsg::maidingdata() const {
  // @@protoc_insertion_point(field_get:PBLocConfigAidingDataDeletionReqMsg.mAidingData)
  return maidingdata_ != NULL ? *maidingdata_
                         : *::PBAidingData::internal_default_instance();
}
::PBAidingData* PBLocConfigAidingDataDeletionReqMsg::mutable_maidingdata() {

  if (maidingdata_ == NULL) {
    maidingdata_ = new ::PBAidingData;
  }
  // @@protoc_insertion_point(field_mutable:PBLocConfigAidingDataDeletionReqMsg.mAidingData)
  return maidingdata_;
}
::PBAidingData* PBLocConfigAidingDataDeletionReqMsg::release_maidingdata() {
  // @@protoc_insertion_point(field_release:PBLocConfigAidingDataDeletionReqMsg.mAidingData)

  ::PBAidingData* temp = maidingdata_;
  maidingdata_ = NULL;
  return temp;
}
void PBLocConfigAidingDataDeletionReqMsg::set_allocated_maidingdata(::PBAidingData* maidingdata) {
  delete maidingdata_;
  maidingdata_ = maidingdata;
  if (maidingdata) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocConfigAidingDataDeletionReqMsg.mAidingData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigLeverArmReqMsg::kMLeverArmConfigInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigLeverArmReqMsg::PBLocConfigLeverArmReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigLeverArmReqMsg)
}
PBLocConfigLeverArmReqMsg::PBLocConfigLeverArmReqMsg(const PBLocConfigLeverArmReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mleverarmconfiginfo()) {
    mleverarmconfiginfo_ = new ::PBLIALeverArmConfigInfo(*from.mleverarmconfiginfo_);
  } else {
    mleverarmconfiginfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocConfigLeverArmReqMsg)
}

void PBLocConfigLeverArmReqMsg::SharedCtor() {
  mleverarmconfiginfo_ = NULL;
  _cached_size_ = 0;
}

PBLocConfigLeverArmReqMsg::~PBLocConfigLeverArmReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigLeverArmReqMsg)
  SharedDtor();
}

void PBLocConfigLeverArmReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete mleverarmconfiginfo_;
  }
}

void PBLocConfigLeverArmReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigLeverArmReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigLeverArmReqMsg& PBLocConfigLeverArmReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigLeverArmReqMsg* PBLocConfigLeverArmReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigLeverArmReqMsg* n = new PBLocConfigLeverArmReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigLeverArmReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigLeverArmReqMsg)
  if (GetArenaNoVirtual() == NULL && mleverarmconfiginfo_ != NULL) {
    delete mleverarmconfiginfo_;
  }
  mleverarmconfiginfo_ = NULL;
}

bool PBLocConfigLeverArmReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigLeverArmReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBLIALeverArmConfigInfo mLeverArmConfigInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mleverarmconfiginfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigLeverArmReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigLeverArmReqMsg)
  return false;
#undef DO_
}

void PBLocConfigLeverArmReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigLeverArmReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLIALeverArmConfigInfo mLeverArmConfigInfo = 1;
  if (this->has_mleverarmconfiginfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->mleverarmconfiginfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigLeverArmReqMsg)
}

::google::protobuf::uint8* PBLocConfigLeverArmReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigLeverArmReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLIALeverArmConfigInfo mLeverArmConfigInfo = 1;
  if (this->has_mleverarmconfiginfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->mleverarmconfiginfo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigLeverArmReqMsg)
  return target;
}

size_t PBLocConfigLeverArmReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigLeverArmReqMsg)
  size_t total_size = 0;

  // .PBLIALeverArmConfigInfo mLeverArmConfigInfo = 1;
  if (this->has_mleverarmconfiginfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mleverarmconfiginfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigLeverArmReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigLeverArmReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigLeverArmReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigLeverArmReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigLeverArmReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigLeverArmReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigLeverArmReqMsg::MergeFrom(const PBLocConfigLeverArmReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigLeverArmReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mleverarmconfiginfo()) {
    mutable_mleverarmconfiginfo()->::PBLIALeverArmConfigInfo::MergeFrom(from.mleverarmconfiginfo());
  }
}

void PBLocConfigLeverArmReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigLeverArmReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigLeverArmReqMsg::CopyFrom(const PBLocConfigLeverArmReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigLeverArmReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigLeverArmReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigLeverArmReqMsg::Swap(PBLocConfigLeverArmReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigLeverArmReqMsg::InternalSwap(PBLocConfigLeverArmReqMsg* other) {
  std::swap(mleverarmconfiginfo_, other->mleverarmconfiginfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigLeverArmReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigLeverArmReqMsg

// .PBLIALeverArmConfigInfo mLeverArmConfigInfo = 1;
bool PBLocConfigLeverArmReqMsg::has_mleverarmconfiginfo() const {
  return this != internal_default_instance() && mleverarmconfiginfo_ != NULL;
}
void PBLocConfigLeverArmReqMsg::clear_mleverarmconfiginfo() {
  if (GetArenaNoVirtual() == NULL && mleverarmconfiginfo_ != NULL) delete mleverarmconfiginfo_;
  mleverarmconfiginfo_ = NULL;
}
const ::PBLIALeverArmConfigInfo& PBLocConfigLeverArmReqMsg::mleverarmconfiginfo() const {
  // @@protoc_insertion_point(field_get:PBLocConfigLeverArmReqMsg.mLeverArmConfigInfo)
  return mleverarmconfiginfo_ != NULL ? *mleverarmconfiginfo_
                         : *::PBLIALeverArmConfigInfo::internal_default_instance();
}
::PBLIALeverArmConfigInfo* PBLocConfigLeverArmReqMsg::mutable_mleverarmconfiginfo() {

  if (mleverarmconfiginfo_ == NULL) {
    mleverarmconfiginfo_ = new ::PBLIALeverArmConfigInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBLocConfigLeverArmReqMsg.mLeverArmConfigInfo)
  return mleverarmconfiginfo_;
}
::PBLIALeverArmConfigInfo* PBLocConfigLeverArmReqMsg::release_mleverarmconfiginfo() {
  // @@protoc_insertion_point(field_release:PBLocConfigLeverArmReqMsg.mLeverArmConfigInfo)

  ::PBLIALeverArmConfigInfo* temp = mleverarmconfiginfo_;
  mleverarmconfiginfo_ = NULL;
  return temp;
}
void PBLocConfigLeverArmReqMsg::set_allocated_mleverarmconfiginfo(::PBLIALeverArmConfigInfo* mleverarmconfiginfo) {
  delete mleverarmconfiginfo_;
  mleverarmconfiginfo_ = mleverarmconfiginfo;
  if (mleverarmconfiginfo) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocConfigLeverArmReqMsg.mLeverArmConfigInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigRobustLocationReqMsg::kMEnableFieldNumber;
const int PBLocConfigRobustLocationReqMsg::kMEnableForE911FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigRobustLocationReqMsg::PBLocConfigRobustLocationReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigRobustLocationReqMsg)
}
PBLocConfigRobustLocationReqMsg::PBLocConfigRobustLocationReqMsg(const PBLocConfigRobustLocationReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&menable_, &from.menable_,
    reinterpret_cast<char*>(&menablefore911_) -
    reinterpret_cast<char*>(&menable_) + sizeof(menablefore911_));
  // @@protoc_insertion_point(copy_constructor:PBLocConfigRobustLocationReqMsg)
}

void PBLocConfigRobustLocationReqMsg::SharedCtor() {
  ::memset(&menable_, 0, reinterpret_cast<char*>(&menablefore911_) -
    reinterpret_cast<char*>(&menable_) + sizeof(menablefore911_));
  _cached_size_ = 0;
}

PBLocConfigRobustLocationReqMsg::~PBLocConfigRobustLocationReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigRobustLocationReqMsg)
  SharedDtor();
}

void PBLocConfigRobustLocationReqMsg::SharedDtor() {
}

void PBLocConfigRobustLocationReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigRobustLocationReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigRobustLocationReqMsg& PBLocConfigRobustLocationReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigRobustLocationReqMsg* PBLocConfigRobustLocationReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigRobustLocationReqMsg* n = new PBLocConfigRobustLocationReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigRobustLocationReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigRobustLocationReqMsg)
  ::memset(&menable_, 0, reinterpret_cast<char*>(&menablefore911_) -
    reinterpret_cast<char*>(&menable_) + sizeof(menablefore911_));
}

bool PBLocConfigRobustLocationReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigRobustLocationReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool mEnable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &menable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool mEnableForE911 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &menablefore911_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigRobustLocationReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigRobustLocationReqMsg)
  return false;
#undef DO_
}

void PBLocConfigRobustLocationReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigRobustLocationReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->menable(), output);
  }

  // bool mEnableForE911 = 2;
  if (this->menablefore911() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->menablefore911(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigRobustLocationReqMsg)
}

::google::protobuf::uint8* PBLocConfigRobustLocationReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigRobustLocationReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->menable(), target);
  }

  // bool mEnableForE911 = 2;
  if (this->menablefore911() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->menablefore911(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigRobustLocationReqMsg)
  return target;
}

size_t PBLocConfigRobustLocationReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigRobustLocationReqMsg)
  size_t total_size = 0;

  // bool mEnable = 1;
  if (this->menable() != 0) {
    total_size += 1 + 1;
  }

  // bool mEnableForE911 = 2;
  if (this->menablefore911() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigRobustLocationReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigRobustLocationReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigRobustLocationReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigRobustLocationReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigRobustLocationReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigRobustLocationReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigRobustLocationReqMsg::MergeFrom(const PBLocConfigRobustLocationReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigRobustLocationReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.menable() != 0) {
    set_menable(from.menable());
  }
  if (from.menablefore911() != 0) {
    set_menablefore911(from.menablefore911());
  }
}

void PBLocConfigRobustLocationReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigRobustLocationReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigRobustLocationReqMsg::CopyFrom(const PBLocConfigRobustLocationReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigRobustLocationReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigRobustLocationReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigRobustLocationReqMsg::Swap(PBLocConfigRobustLocationReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigRobustLocationReqMsg::InternalSwap(PBLocConfigRobustLocationReqMsg* other) {
  std::swap(menable_, other->menable_);
  std::swap(menablefore911_, other->menablefore911_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigRobustLocationReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigRobustLocationReqMsg

// bool mEnable = 1;
void PBLocConfigRobustLocationReqMsg::clear_menable() {
  menable_ = false;
}
bool PBLocConfigRobustLocationReqMsg::menable() const {
  // @@protoc_insertion_point(field_get:PBLocConfigRobustLocationReqMsg.mEnable)
  return menable_;
}
void PBLocConfigRobustLocationReqMsg::set_menable(bool value) {

  menable_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigRobustLocationReqMsg.mEnable)
}

// bool mEnableForE911 = 2;
void PBLocConfigRobustLocationReqMsg::clear_menablefore911() {
  menablefore911_ = false;
}
bool PBLocConfigRobustLocationReqMsg::menablefore911() const {
  // @@protoc_insertion_point(field_get:PBLocConfigRobustLocationReqMsg.mEnableForE911)
  return menablefore911_;
}
void PBLocConfigRobustLocationReqMsg::set_menablefore911(bool value) {

  menablefore911_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigRobustLocationReqMsg.mEnableForE911)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigMinGpsWeekReqMsg::kMMinGpsWeekFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigMinGpsWeekReqMsg::PBLocConfigMinGpsWeekReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigMinGpsWeekReqMsg)
}
PBLocConfigMinGpsWeekReqMsg::PBLocConfigMinGpsWeekReqMsg(const PBLocConfigMinGpsWeekReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mmingpsweek_ = from.mmingpsweek_;
  // @@protoc_insertion_point(copy_constructor:PBLocConfigMinGpsWeekReqMsg)
}

void PBLocConfigMinGpsWeekReqMsg::SharedCtor() {
  mmingpsweek_ = 0u;
  _cached_size_ = 0;
}

PBLocConfigMinGpsWeekReqMsg::~PBLocConfigMinGpsWeekReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigMinGpsWeekReqMsg)
  SharedDtor();
}

void PBLocConfigMinGpsWeekReqMsg::SharedDtor() {
}

void PBLocConfigMinGpsWeekReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigMinGpsWeekReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigMinGpsWeekReqMsg& PBLocConfigMinGpsWeekReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigMinGpsWeekReqMsg* PBLocConfigMinGpsWeekReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigMinGpsWeekReqMsg* n = new PBLocConfigMinGpsWeekReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigMinGpsWeekReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigMinGpsWeekReqMsg)
  mmingpsweek_ = 0u;
}

bool PBLocConfigMinGpsWeekReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigMinGpsWeekReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mMinGpsWeek = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mmingpsweek_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigMinGpsWeekReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigMinGpsWeekReqMsg)
  return false;
#undef DO_
}

void PBLocConfigMinGpsWeekReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigMinGpsWeekReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mMinGpsWeek = 1;
  if (this->mmingpsweek() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mmingpsweek(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigMinGpsWeekReqMsg)
}

::google::protobuf::uint8* PBLocConfigMinGpsWeekReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigMinGpsWeekReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mMinGpsWeek = 1;
  if (this->mmingpsweek() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mmingpsweek(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigMinGpsWeekReqMsg)
  return target;
}

size_t PBLocConfigMinGpsWeekReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigMinGpsWeekReqMsg)
  size_t total_size = 0;

  // uint32 mMinGpsWeek = 1;
  if (this->mmingpsweek() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mmingpsweek());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigMinGpsWeekReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigMinGpsWeekReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigMinGpsWeekReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigMinGpsWeekReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigMinGpsWeekReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigMinGpsWeekReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigMinGpsWeekReqMsg::MergeFrom(const PBLocConfigMinGpsWeekReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigMinGpsWeekReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mmingpsweek() != 0) {
    set_mmingpsweek(from.mmingpsweek());
  }
}

void PBLocConfigMinGpsWeekReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigMinGpsWeekReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigMinGpsWeekReqMsg::CopyFrom(const PBLocConfigMinGpsWeekReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigMinGpsWeekReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigMinGpsWeekReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigMinGpsWeekReqMsg::Swap(PBLocConfigMinGpsWeekReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigMinGpsWeekReqMsg::InternalSwap(PBLocConfigMinGpsWeekReqMsg* other) {
  std::swap(mmingpsweek_, other->mmingpsweek_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigMinGpsWeekReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigMinGpsWeekReqMsg

// uint32 mMinGpsWeek = 1;
void PBLocConfigMinGpsWeekReqMsg::clear_mmingpsweek() {
  mmingpsweek_ = 0u;
}
::google::protobuf::uint32 PBLocConfigMinGpsWeekReqMsg::mmingpsweek() const {
  // @@protoc_insertion_point(field_get:PBLocConfigMinGpsWeekReqMsg.mMinGpsWeek)
  return mmingpsweek_;
}
void PBLocConfigMinGpsWeekReqMsg::set_mmingpsweek(::google::protobuf::uint32 value) {

  mmingpsweek_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigMinGpsWeekReqMsg.mMinGpsWeek)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigDrEngineParamsReqMsg::kMDreConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigDrEngineParamsReqMsg::PBLocConfigDrEngineParamsReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigDrEngineParamsReqMsg)
}
PBLocConfigDrEngineParamsReqMsg::PBLocConfigDrEngineParamsReqMsg(const PBLocConfigDrEngineParamsReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mdreconfig()) {
    mdreconfig_ = new ::PBDeadReckoningEngineConfig(*from.mdreconfig_);
  } else {
    mdreconfig_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocConfigDrEngineParamsReqMsg)
}

void PBLocConfigDrEngineParamsReqMsg::SharedCtor() {
  mdreconfig_ = NULL;
  _cached_size_ = 0;
}

PBLocConfigDrEngineParamsReqMsg::~PBLocConfigDrEngineParamsReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigDrEngineParamsReqMsg)
  SharedDtor();
}

void PBLocConfigDrEngineParamsReqMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete mdreconfig_;
  }
}

void PBLocConfigDrEngineParamsReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigDrEngineParamsReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigDrEngineParamsReqMsg& PBLocConfigDrEngineParamsReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigDrEngineParamsReqMsg* PBLocConfigDrEngineParamsReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigDrEngineParamsReqMsg* n = new PBLocConfigDrEngineParamsReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigDrEngineParamsReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigDrEngineParamsReqMsg)
  if (GetArenaNoVirtual() == NULL && mdreconfig_ != NULL) {
    delete mdreconfig_;
  }
  mdreconfig_ = NULL;
}

bool PBLocConfigDrEngineParamsReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigDrEngineParamsReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBDeadReckoningEngineConfig mDreConfig = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mdreconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigDrEngineParamsReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigDrEngineParamsReqMsg)
  return false;
#undef DO_
}

void PBLocConfigDrEngineParamsReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigDrEngineParamsReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBDeadReckoningEngineConfig mDreConfig = 1;
  if (this->has_mdreconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->mdreconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigDrEngineParamsReqMsg)
}

::google::protobuf::uint8* PBLocConfigDrEngineParamsReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigDrEngineParamsReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBDeadReckoningEngineConfig mDreConfig = 1;
  if (this->has_mdreconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->mdreconfig_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigDrEngineParamsReqMsg)
  return target;
}

size_t PBLocConfigDrEngineParamsReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigDrEngineParamsReqMsg)
  size_t total_size = 0;

  // .PBDeadReckoningEngineConfig mDreConfig = 1;
  if (this->has_mdreconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mdreconfig_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigDrEngineParamsReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigDrEngineParamsReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigDrEngineParamsReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigDrEngineParamsReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigDrEngineParamsReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigDrEngineParamsReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigDrEngineParamsReqMsg::MergeFrom(const PBLocConfigDrEngineParamsReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigDrEngineParamsReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mdreconfig()) {
    mutable_mdreconfig()->::PBDeadReckoningEngineConfig::MergeFrom(from.mdreconfig());
  }
}

void PBLocConfigDrEngineParamsReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigDrEngineParamsReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigDrEngineParamsReqMsg::CopyFrom(const PBLocConfigDrEngineParamsReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigDrEngineParamsReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigDrEngineParamsReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigDrEngineParamsReqMsg::Swap(PBLocConfigDrEngineParamsReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigDrEngineParamsReqMsg::InternalSwap(PBLocConfigDrEngineParamsReqMsg* other) {
  std::swap(mdreconfig_, other->mdreconfig_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigDrEngineParamsReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigDrEngineParamsReqMsg

// .PBDeadReckoningEngineConfig mDreConfig = 1;
bool PBLocConfigDrEngineParamsReqMsg::has_mdreconfig() const {
  return this != internal_default_instance() && mdreconfig_ != NULL;
}
void PBLocConfigDrEngineParamsReqMsg::clear_mdreconfig() {
  if (GetArenaNoVirtual() == NULL && mdreconfig_ != NULL) delete mdreconfig_;
  mdreconfig_ = NULL;
}
const ::PBDeadReckoningEngineConfig& PBLocConfigDrEngineParamsReqMsg::mdreconfig() const {
  // @@protoc_insertion_point(field_get:PBLocConfigDrEngineParamsReqMsg.mDreConfig)
  return mdreconfig_ != NULL ? *mdreconfig_
                         : *::PBDeadReckoningEngineConfig::internal_default_instance();
}
::PBDeadReckoningEngineConfig* PBLocConfigDrEngineParamsReqMsg::mutable_mdreconfig() {

  if (mdreconfig_ == NULL) {
    mdreconfig_ = new ::PBDeadReckoningEngineConfig;
  }
  // @@protoc_insertion_point(field_mutable:PBLocConfigDrEngineParamsReqMsg.mDreConfig)
  return mdreconfig_;
}
::PBDeadReckoningEngineConfig* PBLocConfigDrEngineParamsReqMsg::release_mdreconfig() {
  // @@protoc_insertion_point(field_release:PBLocConfigDrEngineParamsReqMsg.mDreConfig)

  ::PBDeadReckoningEngineConfig* temp = mdreconfig_;
  mdreconfig_ = NULL;
  return temp;
}
void PBLocConfigDrEngineParamsReqMsg::set_allocated_mdreconfig(::PBDeadReckoningEngineConfig* mdreconfig) {
  delete mdreconfig_;
  mdreconfig_ = mdreconfig;
  if (mdreconfig) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocConfigDrEngineParamsReqMsg.mDreConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigMinSvElevationReqMsg::kMMinSvElevationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigMinSvElevationReqMsg::PBLocConfigMinSvElevationReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigMinSvElevationReqMsg)
}
PBLocConfigMinSvElevationReqMsg::PBLocConfigMinSvElevationReqMsg(const PBLocConfigMinSvElevationReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mminsvelevation_ = from.mminsvelevation_;
  // @@protoc_insertion_point(copy_constructor:PBLocConfigMinSvElevationReqMsg)
}

void PBLocConfigMinSvElevationReqMsg::SharedCtor() {
  mminsvelevation_ = 0u;
  _cached_size_ = 0;
}

PBLocConfigMinSvElevationReqMsg::~PBLocConfigMinSvElevationReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigMinSvElevationReqMsg)
  SharedDtor();
}

void PBLocConfigMinSvElevationReqMsg::SharedDtor() {
}

void PBLocConfigMinSvElevationReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigMinSvElevationReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigMinSvElevationReqMsg& PBLocConfigMinSvElevationReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigMinSvElevationReqMsg* PBLocConfigMinSvElevationReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigMinSvElevationReqMsg* n = new PBLocConfigMinSvElevationReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigMinSvElevationReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigMinSvElevationReqMsg)
  mminsvelevation_ = 0u;
}

bool PBLocConfigMinSvElevationReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigMinSvElevationReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mMinSvElevation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mminsvelevation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigMinSvElevationReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigMinSvElevationReqMsg)
  return false;
#undef DO_
}

void PBLocConfigMinSvElevationReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigMinSvElevationReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mMinSvElevation = 1;
  if (this->mminsvelevation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mminsvelevation(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigMinSvElevationReqMsg)
}

::google::protobuf::uint8* PBLocConfigMinSvElevationReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigMinSvElevationReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mMinSvElevation = 1;
  if (this->mminsvelevation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mminsvelevation(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigMinSvElevationReqMsg)
  return target;
}

size_t PBLocConfigMinSvElevationReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigMinSvElevationReqMsg)
  size_t total_size = 0;

  // uint32 mMinSvElevation = 1;
  if (this->mminsvelevation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mminsvelevation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigMinSvElevationReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigMinSvElevationReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigMinSvElevationReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigMinSvElevationReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigMinSvElevationReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigMinSvElevationReqMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigMinSvElevationReqMsg::MergeFrom(const PBLocConfigMinSvElevationReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigMinSvElevationReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mminsvelevation() != 0) {
    set_mminsvelevation(from.mminsvelevation());
  }
}

void PBLocConfigMinSvElevationReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigMinSvElevationReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigMinSvElevationReqMsg::CopyFrom(const PBLocConfigMinSvElevationReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigMinSvElevationReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigMinSvElevationReqMsg::IsInitialized() const {
  return true;
}

void PBLocConfigMinSvElevationReqMsg::Swap(PBLocConfigMinSvElevationReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigMinSvElevationReqMsg::InternalSwap(PBLocConfigMinSvElevationReqMsg* other) {
  std::swap(mminsvelevation_, other->mminsvelevation_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigMinSvElevationReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigMinSvElevationReqMsg

// uint32 mMinSvElevation = 1;
void PBLocConfigMinSvElevationReqMsg::clear_mminsvelevation() {
  mminsvelevation_ = 0u;
}
::google::protobuf::uint32 PBLocConfigMinSvElevationReqMsg::mminsvelevation() const {
  // @@protoc_insertion_point(field_get:PBLocConfigMinSvElevationReqMsg.mMinSvElevation)
  return mminsvelevation_;
}
void PBLocConfigMinSvElevationReqMsg::set_mminsvelevation(::google::protobuf::uint32 value) {

  mminsvelevation_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigMinSvElevationReqMsg.mMinSvElevation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigGetConstltnSecondaryBandConfigRespMsg::kMSecondaryBandConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigGetConstltnSecondaryBandConfigRespMsg::PBLocConfigGetConstltnSecondaryBandConfigRespMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
}
PBLocConfigGetConstltnSecondaryBandConfigRespMsg::PBLocConfigGetConstltnSecondaryBandConfigRespMsg(const PBLocConfigGetConstltnSecondaryBandConfigRespMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msecondarybandconfig()) {
    msecondarybandconfig_ = new ::PBGnssSvTypeConfig(*from.msecondarybandconfig_);
  } else {
    msecondarybandconfig_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::SharedCtor() {
  msecondarybandconfig_ = NULL;
  _cached_size_ = 0;
}

PBLocConfigGetConstltnSecondaryBandConfigRespMsg::~PBLocConfigGetConstltnSecondaryBandConfigRespMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  SharedDtor();
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msecondarybandconfig_;
  }
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigGetConstltnSecondaryBandConfigRespMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigGetConstltnSecondaryBandConfigRespMsg& PBLocConfigGetConstltnSecondaryBandConfigRespMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigGetConstltnSecondaryBandConfigRespMsg* PBLocConfigGetConstltnSecondaryBandConfigRespMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigGetConstltnSecondaryBandConfigRespMsg* n = new PBLocConfigGetConstltnSecondaryBandConfigRespMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  if (GetArenaNoVirtual() == NULL && msecondarybandconfig_ != NULL) {
    delete msecondarybandconfig_;
  }
  msecondarybandconfig_ = NULL;
}

bool PBLocConfigGetConstltnSecondaryBandConfigRespMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msecondarybandconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  return false;
#undef DO_
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
  if (this->has_msecondarybandconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msecondarybandconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
}

::google::protobuf::uint8* PBLocConfigGetConstltnSecondaryBandConfigRespMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
  if (this->has_msecondarybandconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msecondarybandconfig_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  return target;
}

size_t PBLocConfigGetConstltnSecondaryBandConfigRespMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  size_t total_size = 0;

  // .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
  if (this->has_msecondarybandconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msecondarybandconfig_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigGetConstltnSecondaryBandConfigRespMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigGetConstltnSecondaryBandConfigRespMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::MergeFrom(const PBLocConfigGetConstltnSecondaryBandConfigRespMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msecondarybandconfig()) {
    mutable_msecondarybandconfig()->::PBGnssSvTypeConfig::MergeFrom(from.msecondarybandconfig());
  }
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::CopyFrom(const PBLocConfigGetConstltnSecondaryBandConfigRespMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigGetConstltnSecondaryBandConfigRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigGetConstltnSecondaryBandConfigRespMsg::IsInitialized() const {
  return true;
}

void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::Swap(PBLocConfigGetConstltnSecondaryBandConfigRespMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::InternalSwap(PBLocConfigGetConstltnSecondaryBandConfigRespMsg* other) {
  std::swap(msecondarybandconfig_, other->msecondarybandconfig_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigGetConstltnSecondaryBandConfigRespMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigGetConstltnSecondaryBandConfigRespMsg

// .PBGnssSvTypeConfig mSecondaryBandConfig = 1;
bool PBLocConfigGetConstltnSecondaryBandConfigRespMsg::has_msecondarybandconfig() const {
  return this != internal_default_instance() && msecondarybandconfig_ != NULL;
}
void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::clear_msecondarybandconfig() {
  if (GetArenaNoVirtual() == NULL && msecondarybandconfig_ != NULL) delete msecondarybandconfig_;
  msecondarybandconfig_ = NULL;
}
const ::PBGnssSvTypeConfig& PBLocConfigGetConstltnSecondaryBandConfigRespMsg::msecondarybandconfig() const {
  // @@protoc_insertion_point(field_get:PBLocConfigGetConstltnSecondaryBandConfigRespMsg.mSecondaryBandConfig)
  return msecondarybandconfig_ != NULL ? *msecondarybandconfig_
                         : *::PBGnssSvTypeConfig::internal_default_instance();
}
::PBGnssSvTypeConfig* PBLocConfigGetConstltnSecondaryBandConfigRespMsg::mutable_msecondarybandconfig() {

  if (msecondarybandconfig_ == NULL) {
    msecondarybandconfig_ = new ::PBGnssSvTypeConfig;
  }
  // @@protoc_insertion_point(field_mutable:PBLocConfigGetConstltnSecondaryBandConfigRespMsg.mSecondaryBandConfig)
  return msecondarybandconfig_;
}
::PBGnssSvTypeConfig* PBLocConfigGetConstltnSecondaryBandConfigRespMsg::release_msecondarybandconfig() {
  // @@protoc_insertion_point(field_release:PBLocConfigGetConstltnSecondaryBandConfigRespMsg.mSecondaryBandConfig)

  ::PBGnssSvTypeConfig* temp = msecondarybandconfig_;
  msecondarybandconfig_ = NULL;
  return temp;
}
void PBLocConfigGetConstltnSecondaryBandConfigRespMsg::set_allocated_msecondarybandconfig(::PBGnssSvTypeConfig* msecondarybandconfig) {
  delete msecondarybandconfig_;
  msecondarybandconfig_ = msecondarybandconfig;
  if (msecondarybandconfig) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocConfigGetConstltnSecondaryBandConfigRespMsg.mSecondaryBandConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigGetRobustLocationConfigRespMsg::kMRobustLoationConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigGetRobustLocationConfigRespMsg::PBLocConfigGetRobustLocationConfigRespMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigGetRobustLocationConfigRespMsg)
}
PBLocConfigGetRobustLocationConfigRespMsg::PBLocConfigGetRobustLocationConfigRespMsg(const PBLocConfigGetRobustLocationConfigRespMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mrobustloationconfig()) {
    mrobustloationconfig_ = new ::PBGnssConfigRobustLocation(*from.mrobustloationconfig_);
  } else {
    mrobustloationconfig_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBLocConfigGetRobustLocationConfigRespMsg)
}

void PBLocConfigGetRobustLocationConfigRespMsg::SharedCtor() {
  mrobustloationconfig_ = NULL;
  _cached_size_ = 0;
}

PBLocConfigGetRobustLocationConfigRespMsg::~PBLocConfigGetRobustLocationConfigRespMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigGetRobustLocationConfigRespMsg)
  SharedDtor();
}

void PBLocConfigGetRobustLocationConfigRespMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete mrobustloationconfig_;
  }
}

void PBLocConfigGetRobustLocationConfigRespMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigGetRobustLocationConfigRespMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigGetRobustLocationConfigRespMsg& PBLocConfigGetRobustLocationConfigRespMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigGetRobustLocationConfigRespMsg* PBLocConfigGetRobustLocationConfigRespMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigGetRobustLocationConfigRespMsg* n = new PBLocConfigGetRobustLocationConfigRespMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigGetRobustLocationConfigRespMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigGetRobustLocationConfigRespMsg)
  if (GetArenaNoVirtual() == NULL && mrobustloationconfig_ != NULL) {
    delete mrobustloationconfig_;
  }
  mrobustloationconfig_ = NULL;
}

bool PBLocConfigGetRobustLocationConfigRespMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigGetRobustLocationConfigRespMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PBGnssConfigRobustLocation mRobustLoationConfig = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mrobustloationconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigGetRobustLocationConfigRespMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigGetRobustLocationConfigRespMsg)
  return false;
#undef DO_
}

void PBLocConfigGetRobustLocationConfigRespMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigGetRobustLocationConfigRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssConfigRobustLocation mRobustLoationConfig = 1;
  if (this->has_mrobustloationconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->mrobustloationconfig_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigGetRobustLocationConfigRespMsg)
}

::google::protobuf::uint8* PBLocConfigGetRobustLocationConfigRespMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigGetRobustLocationConfigRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBGnssConfigRobustLocation mRobustLoationConfig = 1;
  if (this->has_mrobustloationconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->mrobustloationconfig_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigGetRobustLocationConfigRespMsg)
  return target;
}

size_t PBLocConfigGetRobustLocationConfigRespMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigGetRobustLocationConfigRespMsg)
  size_t total_size = 0;

  // .PBGnssConfigRobustLocation mRobustLoationConfig = 1;
  if (this->has_mrobustloationconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mrobustloationconfig_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigGetRobustLocationConfigRespMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigGetRobustLocationConfigRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigGetRobustLocationConfigRespMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigGetRobustLocationConfigRespMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigGetRobustLocationConfigRespMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigGetRobustLocationConfigRespMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigGetRobustLocationConfigRespMsg::MergeFrom(const PBLocConfigGetRobustLocationConfigRespMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigGetRobustLocationConfigRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mrobustloationconfig()) {
    mutable_mrobustloationconfig()->::PBGnssConfigRobustLocation::MergeFrom(from.mrobustloationconfig());
  }
}

void PBLocConfigGetRobustLocationConfigRespMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigGetRobustLocationConfigRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigGetRobustLocationConfigRespMsg::CopyFrom(const PBLocConfigGetRobustLocationConfigRespMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigGetRobustLocationConfigRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigGetRobustLocationConfigRespMsg::IsInitialized() const {
  return true;
}

void PBLocConfigGetRobustLocationConfigRespMsg::Swap(PBLocConfigGetRobustLocationConfigRespMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigGetRobustLocationConfigRespMsg::InternalSwap(PBLocConfigGetRobustLocationConfigRespMsg* other) {
  std::swap(mrobustloationconfig_, other->mrobustloationconfig_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigGetRobustLocationConfigRespMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigGetRobustLocationConfigRespMsg

// .PBGnssConfigRobustLocation mRobustLoationConfig = 1;
bool PBLocConfigGetRobustLocationConfigRespMsg::has_mrobustloationconfig() const {
  return this != internal_default_instance() && mrobustloationconfig_ != NULL;
}
void PBLocConfigGetRobustLocationConfigRespMsg::clear_mrobustloationconfig() {
  if (GetArenaNoVirtual() == NULL && mrobustloationconfig_ != NULL) delete mrobustloationconfig_;
  mrobustloationconfig_ = NULL;
}
const ::PBGnssConfigRobustLocation& PBLocConfigGetRobustLocationConfigRespMsg::mrobustloationconfig() const {
  // @@protoc_insertion_point(field_get:PBLocConfigGetRobustLocationConfigRespMsg.mRobustLoationConfig)
  return mrobustloationconfig_ != NULL ? *mrobustloationconfig_
                         : *::PBGnssConfigRobustLocation::internal_default_instance();
}
::PBGnssConfigRobustLocation* PBLocConfigGetRobustLocationConfigRespMsg::mutable_mrobustloationconfig() {

  if (mrobustloationconfig_ == NULL) {
    mrobustloationconfig_ = new ::PBGnssConfigRobustLocation;
  }
  // @@protoc_insertion_point(field_mutable:PBLocConfigGetRobustLocationConfigRespMsg.mRobustLoationConfig)
  return mrobustloationconfig_;
}
::PBGnssConfigRobustLocation* PBLocConfigGetRobustLocationConfigRespMsg::release_mrobustloationconfig() {
  // @@protoc_insertion_point(field_release:PBLocConfigGetRobustLocationConfigRespMsg.mRobustLoationConfig)

  ::PBGnssConfigRobustLocation* temp = mrobustloationconfig_;
  mrobustloationconfig_ = NULL;
  return temp;
}
void PBLocConfigGetRobustLocationConfigRespMsg::set_allocated_mrobustloationconfig(::PBGnssConfigRobustLocation* mrobustloationconfig) {
  delete mrobustloationconfig_;
  mrobustloationconfig_ = mrobustloationconfig;
  if (mrobustloationconfig) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocConfigGetRobustLocationConfigRespMsg.mRobustLoationConfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigGetMinGpsWeekRespMsg::kMMinGpsWeekFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigGetMinGpsWeekRespMsg::PBLocConfigGetMinGpsWeekRespMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigGetMinGpsWeekRespMsg)
}
PBLocConfigGetMinGpsWeekRespMsg::PBLocConfigGetMinGpsWeekRespMsg(const PBLocConfigGetMinGpsWeekRespMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mmingpsweek_ = from.mmingpsweek_;
  // @@protoc_insertion_point(copy_constructor:PBLocConfigGetMinGpsWeekRespMsg)
}

void PBLocConfigGetMinGpsWeekRespMsg::SharedCtor() {
  mmingpsweek_ = 0u;
  _cached_size_ = 0;
}

PBLocConfigGetMinGpsWeekRespMsg::~PBLocConfigGetMinGpsWeekRespMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigGetMinGpsWeekRespMsg)
  SharedDtor();
}

void PBLocConfigGetMinGpsWeekRespMsg::SharedDtor() {
}

void PBLocConfigGetMinGpsWeekRespMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigGetMinGpsWeekRespMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigGetMinGpsWeekRespMsg& PBLocConfigGetMinGpsWeekRespMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigGetMinGpsWeekRespMsg* PBLocConfigGetMinGpsWeekRespMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigGetMinGpsWeekRespMsg* n = new PBLocConfigGetMinGpsWeekRespMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigGetMinGpsWeekRespMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigGetMinGpsWeekRespMsg)
  mmingpsweek_ = 0u;
}

bool PBLocConfigGetMinGpsWeekRespMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigGetMinGpsWeekRespMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mMinGpsWeek = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mmingpsweek_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigGetMinGpsWeekRespMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigGetMinGpsWeekRespMsg)
  return false;
#undef DO_
}

void PBLocConfigGetMinGpsWeekRespMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigGetMinGpsWeekRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mMinGpsWeek = 1;
  if (this->mmingpsweek() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mmingpsweek(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigGetMinGpsWeekRespMsg)
}

::google::protobuf::uint8* PBLocConfigGetMinGpsWeekRespMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigGetMinGpsWeekRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mMinGpsWeek = 1;
  if (this->mmingpsweek() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mmingpsweek(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigGetMinGpsWeekRespMsg)
  return target;
}

size_t PBLocConfigGetMinGpsWeekRespMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigGetMinGpsWeekRespMsg)
  size_t total_size = 0;

  // uint32 mMinGpsWeek = 1;
  if (this->mmingpsweek() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mmingpsweek());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigGetMinGpsWeekRespMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigGetMinGpsWeekRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigGetMinGpsWeekRespMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigGetMinGpsWeekRespMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigGetMinGpsWeekRespMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigGetMinGpsWeekRespMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigGetMinGpsWeekRespMsg::MergeFrom(const PBLocConfigGetMinGpsWeekRespMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigGetMinGpsWeekRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mmingpsweek() != 0) {
    set_mmingpsweek(from.mmingpsweek());
  }
}

void PBLocConfigGetMinGpsWeekRespMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigGetMinGpsWeekRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigGetMinGpsWeekRespMsg::CopyFrom(const PBLocConfigGetMinGpsWeekRespMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigGetMinGpsWeekRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigGetMinGpsWeekRespMsg::IsInitialized() const {
  return true;
}

void PBLocConfigGetMinGpsWeekRespMsg::Swap(PBLocConfigGetMinGpsWeekRespMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigGetMinGpsWeekRespMsg::InternalSwap(PBLocConfigGetMinGpsWeekRespMsg* other) {
  std::swap(mmingpsweek_, other->mmingpsweek_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigGetMinGpsWeekRespMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigGetMinGpsWeekRespMsg

// uint32 mMinGpsWeek = 1;
void PBLocConfigGetMinGpsWeekRespMsg::clear_mmingpsweek() {
  mmingpsweek_ = 0u;
}
::google::protobuf::uint32 PBLocConfigGetMinGpsWeekRespMsg::mmingpsweek() const {
  // @@protoc_insertion_point(field_get:PBLocConfigGetMinGpsWeekRespMsg.mMinGpsWeek)
  return mmingpsweek_;
}
void PBLocConfigGetMinGpsWeekRespMsg::set_mmingpsweek(::google::protobuf::uint32 value) {

  mmingpsweek_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigGetMinGpsWeekRespMsg.mMinGpsWeek)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocConfigGetMinSvElevationRespMsg::kMMinSvElevationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocConfigGetMinSvElevationRespMsg::PBLocConfigGetMinSvElevationRespMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocConfigGetMinSvElevationRespMsg)
}
PBLocConfigGetMinSvElevationRespMsg::PBLocConfigGetMinSvElevationRespMsg(const PBLocConfigGetMinSvElevationRespMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mminsvelevation_ = from.mminsvelevation_;
  // @@protoc_insertion_point(copy_constructor:PBLocConfigGetMinSvElevationRespMsg)
}

void PBLocConfigGetMinSvElevationRespMsg::SharedCtor() {
  mminsvelevation_ = 0u;
  _cached_size_ = 0;
}

PBLocConfigGetMinSvElevationRespMsg::~PBLocConfigGetMinSvElevationRespMsg() {
  // @@protoc_insertion_point(destructor:PBLocConfigGetMinSvElevationRespMsg)
  SharedDtor();
}

void PBLocConfigGetMinSvElevationRespMsg::SharedDtor() {
}

void PBLocConfigGetMinSvElevationRespMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocConfigGetMinSvElevationRespMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocConfigGetMinSvElevationRespMsg& PBLocConfigGetMinSvElevationRespMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocConfigGetMinSvElevationRespMsg* PBLocConfigGetMinSvElevationRespMsg::New(::google::protobuf::Arena* arena) const {
  PBLocConfigGetMinSvElevationRespMsg* n = new PBLocConfigGetMinSvElevationRespMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocConfigGetMinSvElevationRespMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocConfigGetMinSvElevationRespMsg)
  mminsvelevation_ = 0u;
}

bool PBLocConfigGetMinSvElevationRespMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocConfigGetMinSvElevationRespMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mMinSvElevation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mminsvelevation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocConfigGetMinSvElevationRespMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocConfigGetMinSvElevationRespMsg)
  return false;
#undef DO_
}

void PBLocConfigGetMinSvElevationRespMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocConfigGetMinSvElevationRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mMinSvElevation = 1;
  if (this->mminsvelevation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mminsvelevation(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocConfigGetMinSvElevationRespMsg)
}

::google::protobuf::uint8* PBLocConfigGetMinSvElevationRespMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocConfigGetMinSvElevationRespMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mMinSvElevation = 1;
  if (this->mminsvelevation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mminsvelevation(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocConfigGetMinSvElevationRespMsg)
  return target;
}

size_t PBLocConfigGetMinSvElevationRespMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocConfigGetMinSvElevationRespMsg)
  size_t total_size = 0;

  // uint32 mMinSvElevation = 1;
  if (this->mminsvelevation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mminsvelevation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocConfigGetMinSvElevationRespMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocConfigGetMinSvElevationRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocConfigGetMinSvElevationRespMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocConfigGetMinSvElevationRespMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocConfigGetMinSvElevationRespMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocConfigGetMinSvElevationRespMsg)
    MergeFrom(*source);
  }
}

void PBLocConfigGetMinSvElevationRespMsg::MergeFrom(const PBLocConfigGetMinSvElevationRespMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocConfigGetMinSvElevationRespMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mminsvelevation() != 0) {
    set_mminsvelevation(from.mminsvelevation());
  }
}

void PBLocConfigGetMinSvElevationRespMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocConfigGetMinSvElevationRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocConfigGetMinSvElevationRespMsg::CopyFrom(const PBLocConfigGetMinSvElevationRespMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocConfigGetMinSvElevationRespMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocConfigGetMinSvElevationRespMsg::IsInitialized() const {
  return true;
}

void PBLocConfigGetMinSvElevationRespMsg::Swap(PBLocConfigGetMinSvElevationRespMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocConfigGetMinSvElevationRespMsg::InternalSwap(PBLocConfigGetMinSvElevationRespMsg* other) {
  std::swap(mminsvelevation_, other->mminsvelevation_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocConfigGetMinSvElevationRespMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocConfigGetMinSvElevationRespMsg

// uint32 mMinSvElevation = 1;
void PBLocConfigGetMinSvElevationRespMsg::clear_mminsvelevation() {
  mminsvelevation_ = 0u;
}
::google::protobuf::uint32 PBLocConfigGetMinSvElevationRespMsg::mminsvelevation() const {
  // @@protoc_insertion_point(field_get:PBLocConfigGetMinSvElevationRespMsg.mMinSvElevation)
  return mminsvelevation_;
}
void PBLocConfigGetMinSvElevationRespMsg::set_mminsvelevation(::google::protobuf::uint32 value) {

  mminsvelevation_ = value;
  // @@protoc_insertion_point(field_set:PBLocConfigGetMinSvElevationRespMsg.mMinSvElevation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIPingTestReqMsg::kNumberOfPingFieldNumber;
const int PBLocAPIPingTestReqMsg::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIPingTestReqMsg::PBLocAPIPingTestReqMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIPingTestReqMsg)
}
PBLocAPIPingTestReqMsg::PBLocAPIPingTestReqMsg(const PBLocAPIPingTestReqMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  numberofping_ = from.numberofping_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPIPingTestReqMsg)
}

void PBLocAPIPingTestReqMsg::SharedCtor() {
  numberofping_ = 0u;
  _cached_size_ = 0;
}

PBLocAPIPingTestReqMsg::~PBLocAPIPingTestReqMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIPingTestReqMsg)
  SharedDtor();
}

void PBLocAPIPingTestReqMsg::SharedDtor() {
}

void PBLocAPIPingTestReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIPingTestReqMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIPingTestReqMsg& PBLocAPIPingTestReqMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIPingTestReqMsg* PBLocAPIPingTestReqMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIPingTestReqMsg* n = new PBLocAPIPingTestReqMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIPingTestReqMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIPingTestReqMsg)
  data_.Clear();
  numberofping_ = 0u;
}

bool PBLocAPIPingTestReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIPingTestReqMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 numberOfPing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numberofping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_data())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIPingTestReqMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIPingTestReqMsg)
  return false;
#undef DO_
}

void PBLocAPIPingTestReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIPingTestReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 numberOfPing = 1;
  if (this->numberofping() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->numberofping(), output);
  }

  // repeated uint32 data = 2;
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_data_cached_byte_size_);
  }
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIPingTestReqMsg)
}

::google::protobuf::uint8* PBLocAPIPingTestReqMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIPingTestReqMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 numberOfPing = 1;
  if (this->numberofping() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->numberofping(), target);
  }

  // repeated uint32 data = 2;
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _data_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->data_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIPingTestReqMsg)
  return target;
}

size_t PBLocAPIPingTestReqMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIPingTestReqMsg)
  size_t total_size = 0;

  // repeated uint32 data = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->data_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 numberOfPing = 1;
  if (this->numberofping() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numberofping());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIPingTestReqMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIPingTestReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIPingTestReqMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIPingTestReqMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIPingTestReqMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIPingTestReqMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIPingTestReqMsg::MergeFrom(const PBLocAPIPingTestReqMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIPingTestReqMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.numberofping() != 0) {
    set_numberofping(from.numberofping());
  }
}

void PBLocAPIPingTestReqMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIPingTestReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIPingTestReqMsg::CopyFrom(const PBLocAPIPingTestReqMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIPingTestReqMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIPingTestReqMsg::IsInitialized() const {
  return true;
}

void PBLocAPIPingTestReqMsg::Swap(PBLocAPIPingTestReqMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIPingTestReqMsg::InternalSwap(PBLocAPIPingTestReqMsg* other) {
  data_.InternalSwap(&other->data_);
  std::swap(numberofping_, other->numberofping_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIPingTestReqMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIPingTestReqMsg

// uint32 numberOfPing = 1;
void PBLocAPIPingTestReqMsg::clear_numberofping() {
  numberofping_ = 0u;
}
::google::protobuf::uint32 PBLocAPIPingTestReqMsg::numberofping() const {
  // @@protoc_insertion_point(field_get:PBLocAPIPingTestReqMsg.numberOfPing)
  return numberofping_;
}
void PBLocAPIPingTestReqMsg::set_numberofping(::google::protobuf::uint32 value) {

  numberofping_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIPingTestReqMsg.numberOfPing)
}

// repeated uint32 data = 2;
int PBLocAPIPingTestReqMsg::data_size() const {
  return data_.size();
}
void PBLocAPIPingTestReqMsg::clear_data() {
  data_.Clear();
}
::google::protobuf::uint32 PBLocAPIPingTestReqMsg::data(int index) const {
  // @@protoc_insertion_point(field_get:PBLocAPIPingTestReqMsg.data)
  return data_.Get(index);
}
void PBLocAPIPingTestReqMsg::set_data(int index, ::google::protobuf::uint32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBLocAPIPingTestReqMsg.data)
}
void PBLocAPIPingTestReqMsg::add_data(::google::protobuf::uint32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:PBLocAPIPingTestReqMsg.data)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLocAPIPingTestReqMsg::data() const {
  // @@protoc_insertion_point(field_list:PBLocAPIPingTestReqMsg.data)
  return data_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLocAPIPingTestReqMsg::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:PBLocAPIPingTestReqMsg.data)
  return &data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIPingTestIndMsg::kNumberOfPingFieldNumber;
const int PBLocAPIPingTestIndMsg::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIPingTestIndMsg::PBLocAPIPingTestIndMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIPingTestIndMsg)
}
PBLocAPIPingTestIndMsg::PBLocAPIPingTestIndMsg(const PBLocAPIPingTestIndMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  numberofping_ = from.numberofping_;
  // @@protoc_insertion_point(copy_constructor:PBLocAPIPingTestIndMsg)
}

void PBLocAPIPingTestIndMsg::SharedCtor() {
  numberofping_ = 0u;
  _cached_size_ = 0;
}

PBLocAPIPingTestIndMsg::~PBLocAPIPingTestIndMsg() {
  // @@protoc_insertion_point(destructor:PBLocAPIPingTestIndMsg)
  SharedDtor();
}

void PBLocAPIPingTestIndMsg::SharedDtor() {
}

void PBLocAPIPingTestIndMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIPingTestIndMsg::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIPingTestIndMsg& PBLocAPIPingTestIndMsg::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIPingTestIndMsg* PBLocAPIPingTestIndMsg::New(::google::protobuf::Arena* arena) const {
  PBLocAPIPingTestIndMsg* n = new PBLocAPIPingTestIndMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIPingTestIndMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIPingTestIndMsg)
  data_.Clear();
  numberofping_ = 0u;
}

bool PBLocAPIPingTestIndMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIPingTestIndMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 numberOfPing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numberofping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_data())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIPingTestIndMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIPingTestIndMsg)
  return false;
#undef DO_
}

void PBLocAPIPingTestIndMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIPingTestIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 numberOfPing = 1;
  if (this->numberofping() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->numberofping(), output);
  }

  // repeated uint32 data = 2;
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_data_cached_byte_size_);
  }
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIPingTestIndMsg)
}

::google::protobuf::uint8* PBLocAPIPingTestIndMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIPingTestIndMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 numberOfPing = 1;
  if (this->numberofping() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->numberofping(), target);
  }

  // repeated uint32 data = 2;
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _data_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->data_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIPingTestIndMsg)
  return target;
}

size_t PBLocAPIPingTestIndMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIPingTestIndMsg)
  size_t total_size = 0;

  // repeated uint32 data = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->data_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 numberOfPing = 1;
  if (this->numberofping() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numberofping());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIPingTestIndMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIPingTestIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIPingTestIndMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIPingTestIndMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIPingTestIndMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIPingTestIndMsg)
    MergeFrom(*source);
  }
}

void PBLocAPIPingTestIndMsg::MergeFrom(const PBLocAPIPingTestIndMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIPingTestIndMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.numberofping() != 0) {
    set_numberofping(from.numberofping());
  }
}

void PBLocAPIPingTestIndMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIPingTestIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIPingTestIndMsg::CopyFrom(const PBLocAPIPingTestIndMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIPingTestIndMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIPingTestIndMsg::IsInitialized() const {
  return true;
}

void PBLocAPIPingTestIndMsg::Swap(PBLocAPIPingTestIndMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIPingTestIndMsg::InternalSwap(PBLocAPIPingTestIndMsg* other) {
  data_.InternalSwap(&other->data_);
  std::swap(numberofping_, other->numberofping_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIPingTestIndMsg::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIPingTestIndMsg

// uint32 numberOfPing = 1;
void PBLocAPIPingTestIndMsg::clear_numberofping() {
  numberofping_ = 0u;
}
::google::protobuf::uint32 PBLocAPIPingTestIndMsg::numberofping() const {
  // @@protoc_insertion_point(field_get:PBLocAPIPingTestIndMsg.numberOfPing)
  return numberofping_;
}
void PBLocAPIPingTestIndMsg::set_numberofping(::google::protobuf::uint32 value) {

  numberofping_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIPingTestIndMsg.numberOfPing)
}

// repeated uint32 data = 2;
int PBLocAPIPingTestIndMsg::data_size() const {
  return data_.size();
}
void PBLocAPIPingTestIndMsg::clear_data() {
  data_.Clear();
}
::google::protobuf::uint32 PBLocAPIPingTestIndMsg::data(int index) const {
  // @@protoc_insertion_point(field_get:PBLocAPIPingTestIndMsg.data)
  return data_.Get(index);
}
void PBLocAPIPingTestIndMsg::set_data(int index, ::google::protobuf::uint32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBLocAPIPingTestIndMsg.data)
}
void PBLocAPIPingTestIndMsg::add_data(::google::protobuf::uint32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:PBLocAPIPingTestIndMsg.data)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLocAPIPingTestIndMsg::data() const {
  // @@protoc_insertion_point(field_list:PBLocAPIPingTestIndMsg.data)
  return data_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLocAPIPingTestIndMsg::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:PBLocAPIPingTestIndMsg.data)
  return &data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocAPIMsgHeader::kMSocketNameFieldNumber;
const int PBLocAPIMsgHeader::kMsgIdFieldNumber;
const int PBLocAPIMsgHeader::kMsgVersionFieldNumber;
const int PBLocAPIMsgHeader::kPayloadFieldNumber;
const int PBLocAPIMsgHeader::kPayloadSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocAPIMsgHeader::PBLocAPIMsgHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LocationApiMsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLocAPIMsgHeader)
}
PBLocAPIMsgHeader::PBLocAPIMsgHeader(const PBLocAPIMsgHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msocketname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msocketname().size() > 0) {
    msocketname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msocketname_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    reinterpret_cast<char*>(&payloadsize_) -
    reinterpret_cast<char*>(&msgid_) + sizeof(payloadsize_));
  // @@protoc_insertion_point(copy_constructor:PBLocAPIMsgHeader)
}

void PBLocAPIMsgHeader::SharedCtor() {
  msocketname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, reinterpret_cast<char*>(&payloadsize_) -
    reinterpret_cast<char*>(&msgid_) + sizeof(payloadsize_));
  _cached_size_ = 0;
}

PBLocAPIMsgHeader::~PBLocAPIMsgHeader() {
  // @@protoc_insertion_point(destructor:PBLocAPIMsgHeader)
  SharedDtor();
}

void PBLocAPIMsgHeader::SharedDtor() {
  msocketname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBLocAPIMsgHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocAPIMsgHeader::descriptor() {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocAPIMsgHeader& PBLocAPIMsgHeader::default_instance() {
  protobuf_LocationApiMsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocAPIMsgHeader* PBLocAPIMsgHeader::New(::google::protobuf::Arena* arena) const {
  PBLocAPIMsgHeader* n = new PBLocAPIMsgHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocAPIMsgHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocAPIMsgHeader)
  msocketname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, reinterpret_cast<char*>(&payloadsize_) -
    reinterpret_cast<char*>(&msgid_) + sizeof(payloadsize_));
}

bool PBLocAPIMsgHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLocAPIMsgHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mSocketName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msocketname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msocketname().data(), this->msocketname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBLocAPIMsgHeader.mSocketName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBELocMsgID msgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgid(static_cast< ::PBELocMsgID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgVersion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 payloadSize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payloadsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLocAPIMsgHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLocAPIMsgHeader)
  return false;
#undef DO_
}

void PBLocAPIMsgHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLocAPIMsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mSocketName = 1;
  if (this->msocketname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msocketname().data(), this->msocketname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBLocAPIMsgHeader.mSocketName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msocketname(), output);
  }

  // .PBELocMsgID msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgid(), output);
  }

  // uint32 msgVersion = 3;
  if (this->msgversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgversion(), output);
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->payload(), output);
  }

  // uint32 payloadSize = 5;
  if (this->payloadsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->payloadsize(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBLocAPIMsgHeader)
}

::google::protobuf::uint8* PBLocAPIMsgHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocAPIMsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mSocketName = 1;
  if (this->msocketname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msocketname().data(), this->msocketname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBLocAPIMsgHeader.mSocketName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msocketname(), target);
  }

  // .PBELocMsgID msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgid(), target);
  }

  // uint32 msgVersion = 3;
  if (this->msgversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgversion(), target);
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->payload(), target);
  }

  // uint32 payloadSize = 5;
  if (this->payloadsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->payloadsize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBLocAPIMsgHeader)
  return target;
}

size_t PBLocAPIMsgHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocAPIMsgHeader)
  size_t total_size = 0;

  // string mSocketName = 1;
  if (this->msocketname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msocketname());
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // .PBELocMsgID msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgid());
  }

  // uint32 msgVersion = 3;
  if (this->msgversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgversion());
  }

  // uint32 payloadSize = 5;
  if (this->payloadsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->payloadsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocAPIMsgHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocAPIMsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocAPIMsgHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocAPIMsgHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocAPIMsgHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocAPIMsgHeader)
    MergeFrom(*source);
  }
}

void PBLocAPIMsgHeader::MergeFrom(const PBLocAPIMsgHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocAPIMsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msocketname().size() > 0) {

    msocketname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msocketname_);
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.msgversion() != 0) {
    set_msgversion(from.msgversion());
  }
  if (from.payloadsize() != 0) {
    set_payloadsize(from.payloadsize());
  }
}

void PBLocAPIMsgHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocAPIMsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocAPIMsgHeader::CopyFrom(const PBLocAPIMsgHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocAPIMsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocAPIMsgHeader::IsInitialized() const {
  return true;
}

void PBLocAPIMsgHeader::Swap(PBLocAPIMsgHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocAPIMsgHeader::InternalSwap(PBLocAPIMsgHeader* other) {
  msocketname_.Swap(&other->msocketname_);
  payload_.Swap(&other->payload_);
  std::swap(msgid_, other->msgid_);
  std::swap(msgversion_, other->msgversion_);
  std::swap(payloadsize_, other->payloadsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocAPIMsgHeader::GetMetadata() const {
  protobuf_LocationApiMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LocationApiMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocAPIMsgHeader

// string mSocketName = 1;
void PBLocAPIMsgHeader::clear_msocketname() {
  msocketname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBLocAPIMsgHeader::msocketname() const {
  // @@protoc_insertion_point(field_get:PBLocAPIMsgHeader.mSocketName)
  return msocketname_.GetNoArena();
}
void PBLocAPIMsgHeader::set_msocketname(const ::std::string& value) {

  msocketname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLocAPIMsgHeader.mSocketName)
}
#if LANG_CXX11
void PBLocAPIMsgHeader::set_msocketname(::std::string&& value) {

  msocketname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLocAPIMsgHeader.mSocketName)
}
#endif
void PBLocAPIMsgHeader::set_msocketname(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  msocketname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLocAPIMsgHeader.mSocketName)
}
void PBLocAPIMsgHeader::set_msocketname(const char* value, size_t size) {

  msocketname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLocAPIMsgHeader.mSocketName)
}
::std::string* PBLocAPIMsgHeader::mutable_msocketname() {

  // @@protoc_insertion_point(field_mutable:PBLocAPIMsgHeader.mSocketName)
  return msocketname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBLocAPIMsgHeader::release_msocketname() {
  // @@protoc_insertion_point(field_release:PBLocAPIMsgHeader.mSocketName)

  return msocketname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBLocAPIMsgHeader::set_allocated_msocketname(::std::string* msocketname) {
  if (msocketname != NULL) {

  } else {

  }
  msocketname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msocketname);
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIMsgHeader.mSocketName)
}

// .PBELocMsgID msgId = 2;
void PBLocAPIMsgHeader::clear_msgid() {
  msgid_ = 0;
}
::PBELocMsgID PBLocAPIMsgHeader::msgid() const {
  // @@protoc_insertion_point(field_get:PBLocAPIMsgHeader.msgId)
  return static_cast< ::PBELocMsgID >(msgid_);
}
void PBLocAPIMsgHeader::set_msgid(::PBELocMsgID value) {

  msgid_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIMsgHeader.msgId)
}

// uint32 msgVersion = 3;
void PBLocAPIMsgHeader::clear_msgversion() {
  msgversion_ = 0u;
}
::google::protobuf::uint32 PBLocAPIMsgHeader::msgversion() const {
  // @@protoc_insertion_point(field_get:PBLocAPIMsgHeader.msgVersion)
  return msgversion_;
}
void PBLocAPIMsgHeader::set_msgversion(::google::protobuf::uint32 value) {

  msgversion_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIMsgHeader.msgVersion)
}

// bytes payload = 4;
void PBLocAPIMsgHeader::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBLocAPIMsgHeader::payload() const {
  // @@protoc_insertion_point(field_get:PBLocAPIMsgHeader.payload)
  return payload_.GetNoArena();
}
void PBLocAPIMsgHeader::set_payload(const ::std::string& value) {

  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLocAPIMsgHeader.payload)
}
#if LANG_CXX11
void PBLocAPIMsgHeader::set_payload(::std::string&& value) {

  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLocAPIMsgHeader.payload)
}
#endif
void PBLocAPIMsgHeader::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLocAPIMsgHeader.payload)
}
void PBLocAPIMsgHeader::set_payload(const void* value, size_t size) {

  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLocAPIMsgHeader.payload)
}
::std::string* PBLocAPIMsgHeader::mutable_payload() {

  // @@protoc_insertion_point(field_mutable:PBLocAPIMsgHeader.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBLocAPIMsgHeader::release_payload() {
  // @@protoc_insertion_point(field_release:PBLocAPIMsgHeader.payload)

  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBLocAPIMsgHeader::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {

  } else {

  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:PBLocAPIMsgHeader.payload)
}

// uint32 payloadSize = 5;
void PBLocAPIMsgHeader::clear_payloadsize() {
  payloadsize_ = 0u;
}
::google::protobuf::uint32 PBLocAPIMsgHeader::payloadsize() const {
  // @@protoc_insertion_point(field_get:PBLocAPIMsgHeader.payloadSize)
  return payloadsize_;
}
void PBLocAPIMsgHeader::set_payloadsize(::google::protobuf::uint32 value) {

  payloadsize_ = value;
  // @@protoc_insertion_point(field_set:PBLocAPIMsgHeader.payloadSize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
