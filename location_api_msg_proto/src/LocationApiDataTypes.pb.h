/* Copyright (c) 2020 The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials provided
 *       with the distribution.
 *     * Neither the name of The Linux Foundation nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
 * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LocationApiDataTypes.proto

#ifndef PROTOBUF_LocationApiDataTypes_2eproto__INCLUDED
#define PROTOBUF_LocationApiDataTypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class PBAidingData;
class PBAidingDataDefaultTypeInternal;
extern PBAidingDataDefaultTypeInternal _PBAidingData_default_instance_;
class PBDeadReckoningEngineConfig;
class PBDeadReckoningEngineConfigDefaultTypeInternal;
extern PBDeadReckoningEngineConfigDefaultTypeInternal _PBDeadReckoningEngineConfig_default_instance_;
class PBGnssConfigRobustLocation;
class PBGnssConfigRobustLocationDefaultTypeInternal;
extern PBGnssConfigRobustLocationDefaultTypeInternal _PBGnssConfigRobustLocation_default_instance_;
class PBGnssConfigRobustLocationVersion;
class PBGnssConfigRobustLocationVersionDefaultTypeInternal;
extern PBGnssConfigRobustLocationVersionDefaultTypeInternal _PBGnssConfigRobustLocationVersion_default_instance_;
class PBGnssDataNotification;
class PBGnssDataNotificationDefaultTypeInternal;
extern PBGnssDataNotificationDefaultTypeInternal _PBGnssDataNotification_default_instance_;
class PBGnssLocationInfoNotification;
class PBGnssLocationInfoNotificationDefaultTypeInternal;
extern PBGnssLocationInfoNotificationDefaultTypeInternal _PBGnssLocationInfoNotification_default_instance_;
class PBGnssLocationSvUsedInPosition;
class PBGnssLocationSvUsedInPositionDefaultTypeInternal;
extern PBGnssLocationSvUsedInPositionDefaultTypeInternal _PBGnssLocationSvUsedInPosition_default_instance_;
class PBGnssMeasUsageInfo;
class PBGnssMeasUsageInfoDefaultTypeInternal;
extern PBGnssMeasUsageInfoDefaultTypeInternal _PBGnssMeasUsageInfo_default_instance_;
class PBGnssMeasurementsClock;
class PBGnssMeasurementsClockDefaultTypeInternal;
extern PBGnssMeasurementsClockDefaultTypeInternal _PBGnssMeasurementsClock_default_instance_;
class PBGnssMeasurementsData;
class PBGnssMeasurementsDataDefaultTypeInternal;
extern PBGnssMeasurementsDataDefaultTypeInternal _PBGnssMeasurementsData_default_instance_;
class PBGnssMeasurementsNotification;
class PBGnssMeasurementsNotificationDefaultTypeInternal;
extern PBGnssMeasurementsNotificationDefaultTypeInternal _PBGnssMeasurementsNotification_default_instance_;
class PBGnssSvIdConfig;
class PBGnssSvIdConfigDefaultTypeInternal;
extern PBGnssSvIdConfigDefaultTypeInternal _PBGnssSvIdConfig_default_instance_;
class PBGnssSvTypeConfig;
class PBGnssSvTypeConfigDefaultTypeInternal;
extern PBGnssSvTypeConfigDefaultTypeInternal _PBGnssSvTypeConfig_default_instance_;
class PBLIABodyToSensorMountParams;
class PBLIABodyToSensorMountParamsDefaultTypeInternal;
extern PBLIABodyToSensorMountParamsDefaultTypeInternal _PBLIABodyToSensorMountParams_default_instance_;
class PBLIALeverArmConfigInfo;
class PBLIALeverArmConfigInfoDefaultTypeInternal;
extern PBLIALeverArmConfigInfoDefaultTypeInternal _PBLIALeverArmConfigInfo_default_instance_;
class PBLIALeverArmParams;
class PBLIALeverArmParamsDefaultTypeInternal;
extern PBLIALeverArmParamsDefaultTypeInternal _PBLIALeverArmParams_default_instance_;
class PBLLAInfo;
class PBLLAInfoDefaultTypeInternal;
extern PBLLAInfoDefaultTypeInternal _PBLLAInfo_default_instance_;
class PBLeapSecondChangeInfo;
class PBLeapSecondChangeInfoDefaultTypeInternal;
extern PBLeapSecondChangeInfoDefaultTypeInternal _PBLeapSecondChangeInfo_default_instance_;
class PBLeapSecondSystemInfo;
class PBLeapSecondSystemInfoDefaultTypeInternal;
extern PBLeapSecondSystemInfoDefaultTypeInternal _PBLeapSecondSystemInfo_default_instance_;
class PBLocApiGnssGloTimeStructType;
class PBLocApiGnssGloTimeStructTypeDefaultTypeInternal;
extern PBLocApiGnssGloTimeStructTypeDefaultTypeInternal _PBLocApiGnssGloTimeStructType_default_instance_;
class PBLocApiGnssLocationPositionDynamics;
class PBLocApiGnssLocationPositionDynamicsDefaultTypeInternal;
extern PBLocApiGnssLocationPositionDynamicsDefaultTypeInternal _PBLocApiGnssLocationPositionDynamics_default_instance_;
class PBLocApiGnssSv;
class PBLocApiGnssSvDefaultTypeInternal;
extern PBLocApiGnssSvDefaultTypeInternal _PBLocApiGnssSv_default_instance_;
class PBLocApiGnssSvNotification;
class PBLocApiGnssSvNotificationDefaultTypeInternal;
extern PBLocApiGnssSvNotificationDefaultTypeInternal _PBLocApiGnssSvNotification_default_instance_;
class PBLocApiGnssSystemTime;
class PBLocApiGnssSystemTimeDefaultTypeInternal;
extern PBLocApiGnssSystemTimeDefaultTypeInternal _PBLocApiGnssSystemTime_default_instance_;
class PBLocApiGnssSystemTimeStructType;
class PBLocApiGnssSystemTimeStructTypeDefaultTypeInternal;
extern PBLocApiGnssSystemTimeStructTypeDefaultTypeInternal _PBLocApiGnssSystemTimeStructType_default_instance_;
class PBLocApiSystemTimeStructUnion;
class PBLocApiSystemTimeStructUnionDefaultTypeInternal;
extern PBLocApiSystemTimeStructUnionDefaultTypeInternal _PBLocApiSystemTimeStructUnion_default_instance_;
class PBLocation;
class PBLocationDefaultTypeInternal;
extern PBLocationDefaultTypeInternal _PBLocation_default_instance_;
class PBLocationOptions;
class PBLocationOptionsDefaultTypeInternal;
extern PBLocationOptionsDefaultTypeInternal _PBLocationOptions_default_instance_;
class PBLocationSystemInfo;
class PBLocationSystemInfoDefaultTypeInternal;
extern PBLocationSystemInfoDefaultTypeInternal _PBLocationSystemInfo_default_instance_;

namespace protobuf_LocationApiDataTypes_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_LocationApiDataTypes_2eproto

enum LocationApiDataTypesVersion {
  LOCAPI_DATA_TYPES_VER_INVALID = 0,
  LOCAPI_DATA_TYPES_VER_MAJOR = 1,
  LOCAPI_DATA_TYPES_VER_MINOR = 0,
  LOCAPI_DATA_TYPES_VER_MICRO = 0,
  LocationApiDataTypesVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LocationApiDataTypesVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LocationApiDataTypesVersion_IsValid(int value);
const LocationApiDataTypesVersion LocationApiDataTypesVersion_MIN = LOCAPI_DATA_TYPES_VER_INVALID;
const LocationApiDataTypesVersion LocationApiDataTypesVersion_MAX = LOCAPI_DATA_TYPES_VER_MAJOR;
const int LocationApiDataTypesVersion_ARRAYSIZE = LocationApiDataTypesVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* LocationApiDataTypesVersion_descriptor();
inline const ::std::string& LocationApiDataTypesVersion_Name(LocationApiDataTypesVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    LocationApiDataTypesVersion_descriptor(), value);
}
inline bool LocationApiDataTypesVersion_Parse(
    const ::std::string& name, LocationApiDataTypesVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocationApiDataTypesVersion>(
    LocationApiDataTypesVersion_descriptor(), name, value);
}
enum PBGnssSuplMode {
  PB_GNSS_SUPL_MODE_STANDALONE = 0,
  PB_GNSS_SUPL_MODE_MSB = 1,
  PB_GNSS_SUPL_MODE_MSA = 2,
  PBGnssSuplMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSuplMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSuplMode_IsValid(int value);
const PBGnssSuplMode PBGnssSuplMode_MIN = PB_GNSS_SUPL_MODE_STANDALONE;
const PBGnssSuplMode PBGnssSuplMode_MAX = PB_GNSS_SUPL_MODE_MSA;
const int PBGnssSuplMode_ARRAYSIZE = PBGnssSuplMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSuplMode_descriptor();
inline const ::std::string& PBGnssSuplMode_Name(PBGnssSuplMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSuplMode_descriptor(), value);
}
inline bool PBGnssSuplMode_Parse(
    const ::std::string& name, PBGnssSuplMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSuplMode>(
    PBGnssSuplMode_descriptor(), name, value);
}
enum PBGnssSignalTypeMask {
  PB_GNSS_SIGNAL_TYPE_MASK_INVALID = 0,
  PB_GNSS_SIGNAL_GPS_L1CA_BIT = 1,
  PB_GNSS_SIGNAL_GPS_L1C_BIT = 2,
  PB_GNSS_SIGNAL_GPS_L2_BIT = 4,
  PB_GNSS_SIGNAL_GPS_L5_BIT = 8,
  PB_GNSS_SIGNAL_GLONASS_G1_BIT = 16,
  PB_GNSS_SIGNAL_GLONASS_G2_BIT = 32,
  PB_GNSS_SIGNAL_GALILEO_E1_BIT = 64,
  PB_GNSS_SIGNAL_GALILEO_E5A_BIT = 128,
  PB_GNSS_SIGNAL_GALILEO_E5B_BIT = 256,
  PB_GNSS_SIGNAL_BEIDOU_B1_BIT = 512,
  PB_GNSS_SIGNAL_BEIDOU_B2_BIT = 1024,
  PB_GNSS_SIGNAL_QZSS_L1CA_BIT = 2048,
  PB_GNSS_SIGNAL_QZSS_L1S_BIT = 4096,
  PB_GNSS_SIGNAL_QZSS_L2_BIT = 8192,
  PB_GNSS_SIGNAL_QZSS_L5_BIT = 16384,
  PB_GNSS_SIGNAL_SBAS_L1_BIT = 32768,
  PB_GNSS_SIGNAL_BEIDOU_B1I_BIT = 65536,
  PB_GNSS_SIGNAL_BEIDOU_B1C_BIT = 131072,
  PB_GNSS_SIGNAL_BEIDOU_B2I_BIT = 262144,
  PB_GNSS_SIGNAL_BEIDOU_B2AI_BIT = 524288,
  PB_GNSS_SIGNAL_NAVIC_L5_BIT = 1048576,
  PB_GNSS_SIGNAL_BEIDOU_B2AQ_BIT = 2097152,
  PBGnssSignalTypeMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSignalTypeMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSignalTypeMask_IsValid(int value);
const PBGnssSignalTypeMask PBGnssSignalTypeMask_MIN = PB_GNSS_SIGNAL_TYPE_MASK_INVALID;
const PBGnssSignalTypeMask PBGnssSignalTypeMask_MAX = PB_GNSS_SIGNAL_BEIDOU_B2AQ_BIT;
const int PBGnssSignalTypeMask_ARRAYSIZE = PBGnssSignalTypeMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSignalTypeMask_descriptor();
inline const ::std::string& PBGnssSignalTypeMask_Name(PBGnssSignalTypeMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSignalTypeMask_descriptor(), value);
}
inline bool PBGnssSignalTypeMask_Parse(
    const ::std::string& name, PBGnssSignalTypeMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSignalTypeMask>(
    PBGnssSignalTypeMask_descriptor(), name, value);
}
enum PBLocApiGnss_LocSvSystemEnumType {
  PB_GNSS_LOC_SV_SYSTEM_INVALID = 0,
  PB_GNSS_LOC_SV_SYSTEM_GPS = 1,
  PB_GNSS_LOC_SV_SYSTEM_GALILEO = 2,
  PB_GNSS_LOC_SV_SYSTEM_SBAS = 3,
  PB_GNSS_LOC_SV_SYSTEM_GLONASS = 4,
  PB_GNSS_LOC_SV_SYSTEM_BDS = 5,
  PB_GNSS_LOC_SV_SYSTEM_QZSS = 6,
  PB_GNSS_LOC_SV_SYSTEM_NAVIC = 7,
  PBLocApiGnss_LocSvSystemEnumType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocApiGnss_LocSvSystemEnumType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocApiGnss_LocSvSystemEnumType_IsValid(int value);
const PBLocApiGnss_LocSvSystemEnumType PBLocApiGnss_LocSvSystemEnumType_MIN = PB_GNSS_LOC_SV_SYSTEM_INVALID;
const PBLocApiGnss_LocSvSystemEnumType PBLocApiGnss_LocSvSystemEnumType_MAX = PB_GNSS_LOC_SV_SYSTEM_NAVIC;
const int PBLocApiGnss_LocSvSystemEnumType_ARRAYSIZE = PBLocApiGnss_LocSvSystemEnumType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocApiGnss_LocSvSystemEnumType_descriptor();
inline const ::std::string& PBLocApiGnss_LocSvSystemEnumType_Name(PBLocApiGnss_LocSvSystemEnumType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocApiGnss_LocSvSystemEnumType_descriptor(), value);
}
inline bool PBLocApiGnss_LocSvSystemEnumType_Parse(
    const ::std::string& name, PBLocApiGnss_LocSvSystemEnumType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocApiGnss_LocSvSystemEnumType>(
    PBLocApiGnss_LocSvSystemEnumType_descriptor(), name, value);
}
enum PBLocApiOutputEngineType {
  PB_LOC_OUTPUT_ENGINE_FUSED = 0,
  PB_LOC_OUTPUT_ENGINE_SPE = 1,
  PB_LOC_OUTPUT_ENGINE_PPE = 2,
  PB_LOC_OUTPUT_ENGINE_COUNT = 3,
  PBLocApiOutputEngineType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocApiOutputEngineType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocApiOutputEngineType_IsValid(int value);
const PBLocApiOutputEngineType PBLocApiOutputEngineType_MIN = PB_LOC_OUTPUT_ENGINE_FUSED;
const PBLocApiOutputEngineType PBLocApiOutputEngineType_MAX = PB_LOC_OUTPUT_ENGINE_COUNT;
const int PBLocApiOutputEngineType_ARRAYSIZE = PBLocApiOutputEngineType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocApiOutputEngineType_descriptor();
inline const ::std::string& PBLocApiOutputEngineType_Name(PBLocApiOutputEngineType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocApiOutputEngineType_descriptor(), value);
}
inline bool PBLocApiOutputEngineType_Parse(
    const ::std::string& name, PBLocApiOutputEngineType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocApiOutputEngineType>(
    PBLocApiOutputEngineType_descriptor(), name, value);
}
enum PBLocationReliability {
  PB_LOCATION_RELIABILITY_NOT_SET = 0,
  PB_LOCATION_RELIABILITY_VERY_LOW = 1,
  PB_LOCATION_RELIABILITY_LOW = 2,
  PB_LOCATION_RELIABILITY_MEDIUM = 3,
  PB_LOCATION_RELIABILITY_HIGH = 4,
  PBLocationReliability_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocationReliability_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocationReliability_IsValid(int value);
const PBLocationReliability PBLocationReliability_MIN = PB_LOCATION_RELIABILITY_NOT_SET;
const PBLocationReliability PBLocationReliability_MAX = PB_LOCATION_RELIABILITY_HIGH;
const int PBLocationReliability_ARRAYSIZE = PBLocationReliability_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocationReliability_descriptor();
inline const ::std::string& PBLocationReliability_Name(PBLocationReliability value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocationReliability_descriptor(), value);
}
inline bool PBLocationReliability_Parse(
    const ::std::string& name, PBLocationReliability* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocationReliability>(
    PBLocationReliability_descriptor(), name, value);
}
enum PBGnssLocationInfoFlagMask {
  PB_GNSS_LOCATION_INFO_INVALID = 0,
  PB_GNSS_LOCATION_INFO_ALTITUDE_MEAN_SEA_LEVEL_BIT = 1,
  PB_GNSS_LOCATION_INFO_DOP_BIT = 2,
  PB_GNSS_LOCATION_INFO_EXT_DOP_BIT = 4,
  PB_GNSS_LOCATION_INFO_MAGNETIC_DEVIATION_BIT = 8,
  PB_GNSS_LOCATION_INFO_HOR_RELIABILITY_BIT = 16,
  PB_GNSS_LOCATION_INFO_VER_RELIABILITY_BIT = 32,
  PB_GNSS_LOCATION_INFO_HOR_ACCURACY_ELIP_SEMI_MAJOR_BIT = 64,
  PB_GNSS_LOCATION_INFO_HOR_ACCURACY_ELIP_SEMI_MINOR_BIT = 128,
  PB_GNSS_LOCATION_INFO_HOR_ACCURACY_ELIP_AZIMUTH_BIT = 256,
  PB_GNSS_LOCATION_INFO_GNSS_SV_USED_DATA_BIT = 512,
  PB_GNSS_LOCATION_INFO_NAV_SOLUTION_MASK_BIT = 1024,
  PB_GNSS_LOCATION_INFO_POS_DYNAMICS_DATA_BIT = 2048,
  PB_GNSS_LOCATION_INFO_NORTH_STD_DEV_BIT = 4096,
  PB_GNSS_LOCATION_INFO_EAST_STD_DEV_BIT = 8192,
  PB_GNSS_LOCATION_INFO_NORTH_VEL_BIT = 16384,
  PB_GNSS_LOCATION_INFO_EAST_VEL_BIT = 32768,
  PB_GNSS_LOCATION_INFO_UP_VEL_BIT = 65536,
  PB_GNSS_LOCATION_INFO_NORTH_VEL_UNC_BIT = 131072,
  PB_GNSS_LOCATION_INFO_EAST_VEL_UNC_BIT = 262144,
  PB_GNSS_LOCATION_INFO_UP_VEL_UNC_BIT = 524288,
  PB_GNSS_LOCATION_INFO_LEAP_SECONDS_BIT = 1048576,
  PB_GNSS_LOCATION_INFO_TIME_UNC_BIT = 2097152,
  PB_GNSS_LOCATION_INFO_NUM_SV_USED_IN_POSITION_BIT = 4194304,
  PB_GNSS_LOCATION_INFO_CALIBRATION_CONFIDENCE_PERCENT_BIT = 8388608,
  PB_GNSS_LOCATION_INFO_CALIBRATION_STATUS_BIT = 16777216,
  PB_GNSS_LOCATION_INFO_OUTPUT_ENG_TYPE_BIT = 33554432,
  PB_GNSS_LOCATION_INFO_OUTPUT_ENG_MASK_BIT = 67108864,
  PB_GNSS_LOCATION_INFO_CONFORMITY_INDEX_BIT = 134217728,
  PB_GNSS_LOCATION_INFO_LLA_VRP_BASED_BIT = 268435456,
  PB_GNSS_LOCATION_INFO_ENU_VELOCITY_VRP_BASED_BIT = 536870912,
  PB_GNSS_LOCATION_INFO_DR_SOLUTION_STATUS_MASK_BIT = 1073741824,
  PBGnssLocationInfoFlagMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssLocationInfoFlagMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssLocationInfoFlagMask_IsValid(int value);
const PBGnssLocationInfoFlagMask PBGnssLocationInfoFlagMask_MIN = PB_GNSS_LOCATION_INFO_INVALID;
const PBGnssLocationInfoFlagMask PBGnssLocationInfoFlagMask_MAX = PB_GNSS_LOCATION_INFO_DR_SOLUTION_STATUS_MASK_BIT;
const int PBGnssLocationInfoFlagMask_ARRAYSIZE = PBGnssLocationInfoFlagMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssLocationInfoFlagMask_descriptor();
inline const ::std::string& PBGnssLocationInfoFlagMask_Name(PBGnssLocationInfoFlagMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssLocationInfoFlagMask_descriptor(), value);
}
inline bool PBGnssLocationInfoFlagMask_Parse(
    const ::std::string& name, PBGnssLocationInfoFlagMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssLocationInfoFlagMask>(
    PBGnssLocationInfoFlagMask_descriptor(), name, value);
}
enum PBGnssLocationNavSolutionMask {
  PB_LOCATION_NAV_SOLUTION_MASK_INVALID = 0,
  PB_LOCATION_SBAS_CORRECTION_IONO_BIT = 1,
  PB_LOCATION_SBAS_CORRECTION_FAST_BIT = 2,
  PB_LOCATION_SBAS_CORRECTION_LONG_BIT = 4,
  PB_LOCATION_SBAS_INTEGRITY_BIT = 8,
  PB_LOCATION_NAV_CORRECTION_DGNSS_BIT = 16,
  PB_LOCATION_NAV_CORRECTION_RTK_BIT = 32,
  PB_LOCATION_NAV_CORRECTION_PPP_BIT = 64,
  PB_LOCATION_NAV_CORRECTION_RTK_FIXED_BIT = 128,
  PB_LOCATION_NAV_CORRECTION_ONLY_SBAS_CORRECTED_SV_USED_BIT = 256,
  PBGnssLocationNavSolutionMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssLocationNavSolutionMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssLocationNavSolutionMask_IsValid(int value);
const PBGnssLocationNavSolutionMask PBGnssLocationNavSolutionMask_MIN = PB_LOCATION_NAV_SOLUTION_MASK_INVALID;
const PBGnssLocationNavSolutionMask PBGnssLocationNavSolutionMask_MAX = PB_LOCATION_NAV_CORRECTION_ONLY_SBAS_CORRECTED_SV_USED_BIT;
const int PBGnssLocationNavSolutionMask_ARRAYSIZE = PBGnssLocationNavSolutionMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssLocationNavSolutionMask_descriptor();
inline const ::std::string& PBGnssLocationNavSolutionMask_Name(PBGnssLocationNavSolutionMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssLocationNavSolutionMask_descriptor(), value);
}
inline bool PBGnssLocationNavSolutionMask_Parse(
    const ::std::string& name, PBGnssLocationNavSolutionMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssLocationNavSolutionMask>(
    PBGnssLocationNavSolutionMask_descriptor(), name, value);
}
enum PBGnssSvTypesMask {
  PB_GNSS_SV_TYPES_MASK_INVALID = 0,
  PB_GNSS_SV_TYPES_MASK_GLO_BIT = 1,
  PB_GNSS_SV_TYPES_MASK_BDS_BIT = 2,
  PB_GNSS_SV_TYPES_MASK_QZSS_BIT = 4,
  PB_GNSS_SV_TYPES_MASK_GAL_BIT = 8,
  PB_GNSS_SV_TYPES_MASK_NAVIC_BIT = 16,
  PB_GNSS_SV_TYPES_MASK_GPS_BIT = 32,
  PBGnssSvTypesMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssSvTypesMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssSvTypesMask_IsValid(int value);
const PBGnssSvTypesMask PBGnssSvTypesMask_MIN = PB_GNSS_SV_TYPES_MASK_INVALID;
const PBGnssSvTypesMask PBGnssSvTypesMask_MAX = PB_GNSS_SV_TYPES_MASK_GPS_BIT;
const int PBGnssSvTypesMask_ARRAYSIZE = PBGnssSvTypesMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssSvTypesMask_descriptor();
inline const ::std::string& PBGnssSvTypesMask_Name(PBGnssSvTypesMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssSvTypesMask_descriptor(), value);
}
inline bool PBGnssSvTypesMask_Parse(
    const ::std::string& name, PBGnssSvTypesMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssSvTypesMask>(
    PBGnssSvTypesMask_descriptor(), name, value);
}
enum PBLocApiGnssSvOptionsMask {
  PB_GNSS_SV_OPTIONS_INVALID = 0,
  PB_GNSS_SV_OPTIONS_HAS_EPHEMER_BIT = 1,
  PB_GNSS_SV_OPTIONS_HAS_ALMANAC_BIT = 2,
  PB_GNSS_SV_OPTIONS_USED_IN_FIX_BIT = 4,
  PB_GNSS_SV_OPTIONS_HAS_CARRIER_FREQUENCY_BIT = 8,
  PB_GNSS_SV_OPTIONS_HAS_GNSS_SIGNAL_TYPE_BIT = 16,
  PBLocApiGnssSvOptionsMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocApiGnssSvOptionsMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocApiGnssSvOptionsMask_IsValid(int value);
const PBLocApiGnssSvOptionsMask PBLocApiGnssSvOptionsMask_MIN = PB_GNSS_SV_OPTIONS_INVALID;
const PBLocApiGnssSvOptionsMask PBLocApiGnssSvOptionsMask_MAX = PB_GNSS_SV_OPTIONS_HAS_GNSS_SIGNAL_TYPE_BIT;
const int PBLocApiGnssSvOptionsMask_ARRAYSIZE = PBLocApiGnssSvOptionsMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocApiGnssSvOptionsMask_descriptor();
inline const ::std::string& PBLocApiGnssSvOptionsMask_Name(PBLocApiGnssSvOptionsMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocApiGnssSvOptionsMask_descriptor(), value);
}
inline bool PBLocApiGnssSvOptionsMask_Parse(
    const ::std::string& name, PBLocApiGnssSvOptionsMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocApiGnssSvOptionsMask>(
    PBLocApiGnssSvOptionsMask_descriptor(), name, value);
}
enum PBGnssGloTimeStructTypeFlags {
  PB_GNSS_CLO_TIME_UNKNOWN = 0,
  PB_GNSS_GLO_FOUR_YEAR_VALID = 1,
  PB_GNSS_CLO_DAYS_VALID = 2,
  PB_GNSS_GLO_MSEC_VALID = 4,
  PB_GNSS_GLO_CLK_TIME_BIAS_VALID = 8,
  PB_GNSS_GLO_CLK_TIME_BIAS_UNC_VALID = 16,
  PB_GNSS_GLO_REF_FCOUNT_VALID = 32,
  PB_GNSS_GLO_NUM_CLOCK_RESETS_VALID = 64,
  PBGnssGloTimeStructTypeFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssGloTimeStructTypeFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssGloTimeStructTypeFlags_IsValid(int value);
const PBGnssGloTimeStructTypeFlags PBGnssGloTimeStructTypeFlags_MIN = PB_GNSS_CLO_TIME_UNKNOWN;
const PBGnssGloTimeStructTypeFlags PBGnssGloTimeStructTypeFlags_MAX = PB_GNSS_GLO_NUM_CLOCK_RESETS_VALID;
const int PBGnssGloTimeStructTypeFlags_ARRAYSIZE = PBGnssGloTimeStructTypeFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssGloTimeStructTypeFlags_descriptor();
inline const ::std::string& PBGnssGloTimeStructTypeFlags_Name(PBGnssGloTimeStructTypeFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssGloTimeStructTypeFlags_descriptor(), value);
}
inline bool PBGnssGloTimeStructTypeFlags_Parse(
    const ::std::string& name, PBGnssGloTimeStructTypeFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssGloTimeStructTypeFlags>(
    PBGnssGloTimeStructTypeFlags_descriptor(), name, value);
}
enum PBGnssMeasurementsClockFlagsMask {
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_INVALID = 0,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_LEAP_SECOND_BIT = 1,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_TIME_BIT = 2,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_TIME_UNCERTAINTY_BIT = 4,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_FULL_BIAS_BIT = 8,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_BIAS_BIT = 16,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_BIAS_UNCERTAINTY_BIT = 32,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_DRIFT_BIT = 64,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_DRIFT_UNCERTAINTY_BIT = 128,
  PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_HW_CLOCK_DISCONTINUITY_COUNT_BIT = 256,
  PBGnssMeasurementsClockFlagsMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssMeasurementsClockFlagsMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssMeasurementsClockFlagsMask_IsValid(int value);
const PBGnssMeasurementsClockFlagsMask PBGnssMeasurementsClockFlagsMask_MIN = PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_INVALID;
const PBGnssMeasurementsClockFlagsMask PBGnssMeasurementsClockFlagsMask_MAX = PB_GNSS_MEASUREMENTS_CLOCK_FLAGS_HW_CLOCK_DISCONTINUITY_COUNT_BIT;
const int PBGnssMeasurementsClockFlagsMask_ARRAYSIZE = PBGnssMeasurementsClockFlagsMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssMeasurementsClockFlagsMask_descriptor();
inline const ::std::string& PBGnssMeasurementsClockFlagsMask_Name(PBGnssMeasurementsClockFlagsMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssMeasurementsClockFlagsMask_descriptor(), value);
}
inline bool PBGnssMeasurementsClockFlagsMask_Parse(
    const ::std::string& name, PBGnssMeasurementsClockFlagsMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssMeasurementsClockFlagsMask>(
    PBGnssMeasurementsClockFlagsMask_descriptor(), name, value);
}
enum PBLocApiGnssSystemTimeStructTypeFlags {
  PB_GNSS_SYSTEM_TIME_FLAG_INVALID = 0,
  PB_GNSS_SYSTEM_TIME_WEEK_VALID = 1,
  PB_GNSS_SYSTEM_TIME_WEEK_MS_VALID = 2,
  PB_GNSS_SYSTEM_CLK_TIME_BIAS_VALID = 4,
  PB_GNSS_SYSTEM_CLK_TIME_BIAS_UNC_VALID = 8,
  PB_GNSS_SYSTEM_REF_FCOUNT_VALID = 16,
  PB_GNSS_SYSTEM_NUM_CLOCK_RESETS_VALID = 32,
  PBLocApiGnssSystemTimeStructTypeFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocApiGnssSystemTimeStructTypeFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocApiGnssSystemTimeStructTypeFlags_IsValid(int value);
const PBLocApiGnssSystemTimeStructTypeFlags PBLocApiGnssSystemTimeStructTypeFlags_MIN = PB_GNSS_SYSTEM_TIME_FLAG_INVALID;
const PBLocApiGnssSystemTimeStructTypeFlags PBLocApiGnssSystemTimeStructTypeFlags_MAX = PB_GNSS_SYSTEM_NUM_CLOCK_RESETS_VALID;
const int PBLocApiGnssSystemTimeStructTypeFlags_ARRAYSIZE = PBLocApiGnssSystemTimeStructTypeFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocApiGnssSystemTimeStructTypeFlags_descriptor();
inline const ::std::string& PBLocApiGnssSystemTimeStructTypeFlags_Name(PBLocApiGnssSystemTimeStructTypeFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocApiGnssSystemTimeStructTypeFlags_descriptor(), value);
}
inline bool PBLocApiGnssSystemTimeStructTypeFlags_Parse(
    const ::std::string& name, PBLocApiGnssSystemTimeStructTypeFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocApiGnssSystemTimeStructTypeFlags>(
    PBLocApiGnssSystemTimeStructTypeFlags_descriptor(), name, value);
}
enum PBGnssConfigRobustLocationValidMask {
  PB_GNSS_CONFIG_ROBUST_LOCATION_INVALID = 0,
  PB_GNSS_CONFIG_ROBUST_LOCATION_ENABLED_VALID_BIT = 1,
  PB_GNSS_CONFIG_ROBUST_LOCATION_ENABLED_FOR_E911_VALID_BIT = 2,
  PB_GNSS_CONFIG_ROBUST_LOCATION_VERSION_VALID_BIT = 4,
  PBGnssConfigRobustLocationValidMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssConfigRobustLocationValidMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssConfigRobustLocationValidMask_IsValid(int value);
const PBGnssConfigRobustLocationValidMask PBGnssConfigRobustLocationValidMask_MIN = PB_GNSS_CONFIG_ROBUST_LOCATION_INVALID;
const PBGnssConfigRobustLocationValidMask PBGnssConfigRobustLocationValidMask_MAX = PB_GNSS_CONFIG_ROBUST_LOCATION_VERSION_VALID_BIT;
const int PBGnssConfigRobustLocationValidMask_ARRAYSIZE = PBGnssConfigRobustLocationValidMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssConfigRobustLocationValidMask_descriptor();
inline const ::std::string& PBGnssConfigRobustLocationValidMask_Name(PBGnssConfigRobustLocationValidMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssConfigRobustLocationValidMask_descriptor(), value);
}
inline bool PBGnssConfigRobustLocationValidMask_Parse(
    const ::std::string& name, PBGnssConfigRobustLocationValidMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssConfigRobustLocationValidMask>(
    PBGnssConfigRobustLocationValidMask_descriptor(), name, value);
}
enum PBLocationSystemInfoMask {
  PB_LOCATION_SYS_INFO_INVALID = 0,
  PB_LOCATION_SYS_INFO_LEAP_SECOND = 1,
  PBLocationSystemInfoMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocationSystemInfoMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocationSystemInfoMask_IsValid(int value);
const PBLocationSystemInfoMask PBLocationSystemInfoMask_MIN = PB_LOCATION_SYS_INFO_INVALID;
const PBLocationSystemInfoMask PBLocationSystemInfoMask_MAX = PB_LOCATION_SYS_INFO_LEAP_SECOND;
const int PBLocationSystemInfoMask_ARRAYSIZE = PBLocationSystemInfoMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocationSystemInfoMask_descriptor();
inline const ::std::string& PBLocationSystemInfoMask_Name(PBLocationSystemInfoMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocationSystemInfoMask_descriptor(), value);
}
inline bool PBLocationSystemInfoMask_Parse(
    const ::std::string& name, PBLocationSystemInfoMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocationSystemInfoMask>(
    PBLocationSystemInfoMask_descriptor(), name, value);
}
enum PBLocApiDrCalibrationStatusMask {
  PB_DR_CALIBRATION_INVALID = 0,
  PB_DR_ROLL_CALIBRATION_NEEDED = 1,
  PB_DR_PITCH_CALIBRATION_NEEDED = 2,
  PB_DR_YAW_CALIBRATION_NEEDED = 4,
  PB_DR_ODO_CALIBRATION_NEEDED = 8,
  PB_DR_GYRO_CALIBRATION_NEEDED = 16,
  PBLocApiDrCalibrationStatusMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocApiDrCalibrationStatusMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocApiDrCalibrationStatusMask_IsValid(int value);
const PBLocApiDrCalibrationStatusMask PBLocApiDrCalibrationStatusMask_MIN = PB_DR_CALIBRATION_INVALID;
const PBLocApiDrCalibrationStatusMask PBLocApiDrCalibrationStatusMask_MAX = PB_DR_GYRO_CALIBRATION_NEEDED;
const int PBLocApiDrCalibrationStatusMask_ARRAYSIZE = PBLocApiDrCalibrationStatusMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocApiDrCalibrationStatusMask_descriptor();
inline const ::std::string& PBLocApiDrCalibrationStatusMask_Name(PBLocApiDrCalibrationStatusMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocApiDrCalibrationStatusMask_descriptor(), value);
}
inline bool PBLocApiDrCalibrationStatusMask_Parse(
    const ::std::string& name, PBLocApiDrCalibrationStatusMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocApiDrCalibrationStatusMask>(
    PBLocApiDrCalibrationStatusMask_descriptor(), name, value);
}
enum PBLeapSecondSysInfoMask {
  PB_LEAP_SECOND_SYS_INFO_INVALID = 0,
  PB_LEAP_SECOND_SYS_INFO_CURRENT_LEAP_SECONDS_BIT = 1,
  PB_LEAP_SECOND_SYS_INFO_LEAP_SECOND_CHANGE_BIT = 2,
  PBLeapSecondSysInfoMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLeapSecondSysInfoMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLeapSecondSysInfoMask_IsValid(int value);
const PBLeapSecondSysInfoMask PBLeapSecondSysInfoMask_MIN = PB_LEAP_SECOND_SYS_INFO_INVALID;
const PBLeapSecondSysInfoMask PBLeapSecondSysInfoMask_MAX = PB_LEAP_SECOND_SYS_INFO_LEAP_SECOND_CHANGE_BIT;
const int PBLeapSecondSysInfoMask_ARRAYSIZE = PBLeapSecondSysInfoMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLeapSecondSysInfoMask_descriptor();
inline const ::std::string& PBLeapSecondSysInfoMask_Name(PBLeapSecondSysInfoMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLeapSecondSysInfoMask_descriptor(), value);
}
inline bool PBLeapSecondSysInfoMask_Parse(
    const ::std::string& name, PBLeapSecondSysInfoMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLeapSecondSysInfoMask>(
    PBLeapSecondSysInfoMask_descriptor(), name, value);
}
enum PBLocApiGnssLocationPosDataMask {
  PB_LOCATION_NAV_DATA_INVALID = 0,
  PB_LOCATION_NAV_DATA_HAS_LONG_ACCEL_BIT = 1,
  PB_LOCATION_NAV_DATA_HAS_LAT_ACCEL_BIT = 2,
  PB_LOCATION_NAV_DATA_HAS_VERT_ACCEL_BIT = 4,
  PB_LOCATION_NAV_DATA_HAS_YAW_RATE_BIT = 8,
  PB_LOCATION_NAV_DATA_HAS_YAW_RATE_UNC_BIT = 16,
  PB_LOCATION_NAV_DATA_HAS_YAW_BIT = 32,
  PB_LOCATION_NAV_DATA_HAS_YAW_UNC_BIT = 64,
  PB_LOCATION_NAV_DATA_HAS_PITCH_BIT = 128,
  PB_LOCATION_NAV_DATA_HAS_PITCH_UNC_BIT = 256,
  PB_LOCATION_NAV_DATA_HAS_PITCH_RATE_BIT = 512,
  PB_LOCATION_NAV_DATA_HAS_PITCH_RATE_UNC_BIT = 1024,
  PB_LOCATION_NAV_DATA_HAS_LONG_ACCEL_UNC_BIT = 2048,
  PB_LOCATION_NAV_DATA_HAS_LAT_ACCEL_UNC_BIT = 4096,
  PB_LOCATION_NAV_DATA_HAS_VERT_ACCEL_UNC_BIT = 8192,
  PB_LOCATION_NAV_DATA_HAS_ROLL_BIT = 16384,
  PB_LOCATION_NAV_DATA_HAS_ROLL_UNC_BIT = 32768,
  PB_LOCATION_NAV_DATA_HAS_ROLL_RATE_BIT = 65536,
  PB_LOCATION_NAV_DATA_HAS_ROLL_RATE_UNC_BIT = 131072,
  PBLocApiGnssLocationPosDataMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocApiGnssLocationPosDataMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocApiGnssLocationPosDataMask_IsValid(int value);
const PBLocApiGnssLocationPosDataMask PBLocApiGnssLocationPosDataMask_MIN = PB_LOCATION_NAV_DATA_INVALID;
const PBLocApiGnssLocationPosDataMask PBLocApiGnssLocationPosDataMask_MAX = PB_LOCATION_NAV_DATA_HAS_ROLL_RATE_UNC_BIT;
const int PBLocApiGnssLocationPosDataMask_ARRAYSIZE = PBLocApiGnssLocationPosDataMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocApiGnssLocationPosDataMask_descriptor();
inline const ::std::string& PBLocApiGnssLocationPosDataMask_Name(PBLocApiGnssLocationPosDataMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocApiGnssLocationPosDataMask_descriptor(), value);
}
inline bool PBLocApiGnssLocationPosDataMask_Parse(
    const ::std::string& name, PBLocApiGnssLocationPosDataMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocApiGnssLocationPosDataMask>(
    PBLocApiGnssLocationPosDataMask_descriptor(), name, value);
}
enum PBBatchingMode {
  PB_BATCHING_MODE_ROUTINE = 0,
  PB_BATCHING_MODE_TRIP = 1,
  PB_BATCHING_MODE_NO_AUTO_REPORT = 2,
  PBBatchingMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBBatchingMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBBatchingMode_IsValid(int value);
const PBBatchingMode PBBatchingMode_MIN = PB_BATCHING_MODE_ROUTINE;
const PBBatchingMode PBBatchingMode_MAX = PB_BATCHING_MODE_NO_AUTO_REPORT;
const int PBBatchingMode_ARRAYSIZE = PBBatchingMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBBatchingMode_descriptor();
inline const ::std::string& PBBatchingMode_Name(PBBatchingMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBBatchingMode_descriptor(), value);
}
inline bool PBBatchingMode_Parse(
    const ::std::string& name, PBBatchingMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBBatchingMode>(
    PBBatchingMode_descriptor(), name, value);
}
enum PBBatchingStatus {
  PB_BATCHING_STATUS_TRIP_COMPLETED = 0,
  PB_BATCHING_STATUS_POSITION_AVAILABE = 1,
  PB_BATCHING_STATUS_POSITION_UNAVAILABLE = 2,
  PBBatchingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBBatchingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBBatchingStatus_IsValid(int value);
const PBBatchingStatus PBBatchingStatus_MIN = PB_BATCHING_STATUS_TRIP_COMPLETED;
const PBBatchingStatus PBBatchingStatus_MAX = PB_BATCHING_STATUS_POSITION_UNAVAILABLE;
const int PBBatchingStatus_ARRAYSIZE = PBBatchingStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBBatchingStatus_descriptor();
inline const ::std::string& PBBatchingStatus_Name(PBBatchingStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBBatchingStatus_descriptor(), value);
}
inline bool PBBatchingStatus_Parse(
    const ::std::string& name, PBBatchingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBBatchingStatus>(
    PBBatchingStatus_descriptor(), name, value);
}
enum PBLocationError {
  PB_LOCATION_ERROR_SUCCESS = 0,
  PB_LOCATION_ERROR_INVALID_PARAMETER = 1,
  PB_LOCATION_ERROR_NOT_SUPPORTED = 2,
  PBLocationError_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocationError_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocationError_IsValid(int value);
const PBLocationError PBLocationError_MIN = PB_LOCATION_ERROR_SUCCESS;
const PBLocationError PBLocationError_MAX = PB_LOCATION_ERROR_NOT_SUPPORTED;
const int PBLocationError_ARRAYSIZE = PBLocationError_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocationError_descriptor();
inline const ::std::string& PBLocationError_Name(PBLocationError value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocationError_descriptor(), value);
}
inline bool PBLocationError_Parse(
    const ::std::string& name, PBLocationError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocationError>(
    PBLocationError_descriptor(), name, value);
}
enum PBLocReqEngineTypeMask {
  PB_LOC_REQ_ENGINE_INVALID = 0,
  PB_LOC_REQ_ENGINE_FUSED_BIT = 1,
  PB_LOC_REQ_ENGINE_SPE_BIT = 2,
  PB_LOC_REQ_ENGINE_PPE_BIT = 4,
  PBLocReqEngineTypeMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocReqEngineTypeMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocReqEngineTypeMask_IsValid(int value);
const PBLocReqEngineTypeMask PBLocReqEngineTypeMask_MIN = PB_LOC_REQ_ENGINE_INVALID;
const PBLocReqEngineTypeMask PBLocReqEngineTypeMask_MAX = PB_LOC_REQ_ENGINE_PPE_BIT;
const int PBLocReqEngineTypeMask_ARRAYSIZE = PBLocReqEngineTypeMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocReqEngineTypeMask_descriptor();
inline const ::std::string& PBLocReqEngineTypeMask_Name(PBLocReqEngineTypeMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocReqEngineTypeMask_descriptor(), value);
}
inline bool PBLocReqEngineTypeMask_Parse(
    const ::std::string& name, PBLocReqEngineTypeMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocReqEngineTypeMask>(
    PBLocReqEngineTypeMask_descriptor(), name, value);
}
enum PBLocApiPositioningEngineMask {
  PB_POS_ENG_MASK_INVALID = 0,
  PB_STANDARD_POSITIONING_ENGINE = 1,
  PB_DEAD_RECKONING_ENGINE = 2,
  PB_PRECISE_POSITIONING_ENGINE = 4,
  PBLocApiPositioningEngineMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocApiPositioningEngineMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocApiPositioningEngineMask_IsValid(int value);
const PBLocApiPositioningEngineMask PBLocApiPositioningEngineMask_MIN = PB_POS_ENG_MASK_INVALID;
const PBLocApiPositioningEngineMask PBLocApiPositioningEngineMask_MAX = PB_PRECISE_POSITIONING_ENGINE;
const int PBLocApiPositioningEngineMask_ARRAYSIZE = PBLocApiPositioningEngineMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocApiPositioningEngineMask_descriptor();
inline const ::std::string& PBLocApiPositioningEngineMask_Name(PBLocApiPositioningEngineMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocApiPositioningEngineMask_descriptor(), value);
}
inline bool PBLocApiPositioningEngineMask_Parse(
    const ::std::string& name, PBLocApiPositioningEngineMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocApiPositioningEngineMask>(
    PBLocApiPositioningEngineMask_descriptor(), name, value);
}
enum PBDrEngineAidingDataMask {
  PB_DR_ENGINE_AIDING_DATA_INVALID = 0,
  PB_DR_ENGINE_AIDING_DATA_CALIBRATION_BIT = 1,
  PBDrEngineAidingDataMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDrEngineAidingDataMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDrEngineAidingDataMask_IsValid(int value);
const PBDrEngineAidingDataMask PBDrEngineAidingDataMask_MIN = PB_DR_ENGINE_AIDING_DATA_INVALID;
const PBDrEngineAidingDataMask PBDrEngineAidingDataMask_MAX = PB_DR_ENGINE_AIDING_DATA_CALIBRATION_BIT;
const int PBDrEngineAidingDataMask_ARRAYSIZE = PBDrEngineAidingDataMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDrEngineAidingDataMask_descriptor();
inline const ::std::string& PBDrEngineAidingDataMask_Name(PBDrEngineAidingDataMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDrEngineAidingDataMask_descriptor(), value);
}
inline bool PBDrEngineAidingDataMask_Parse(
    const ::std::string& name, PBDrEngineAidingDataMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDrEngineAidingDataMask>(
    PBDrEngineAidingDataMask_descriptor(), name, value);
}
enum PBGnssMeasurementsAdrStateMask {
  PB_GNSS_MEASUREMENTS_ACCUMULATED_DELTA_RANGE_STATE_UNKNOWN = 0,
  PB_GNSS_MEASUREMENTS_ACCUMULATED_DELTA_RANGE_STATE_VALID_BIT = 1,
  PB_GNSS_MEASUREMENTS_ACCUMULATED_DELTA_RANGE_STATE_RESET_BIT = 2,
  PB_GNSS_MEASUREMENTS_ACCUMULATED_DELTA_RANGE_STATE_CYCLE_SLIP_BIT = 4,
  PBGnssMeasurementsAdrStateMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssMeasurementsAdrStateMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssMeasurementsAdrStateMask_IsValid(int value);
const PBGnssMeasurementsAdrStateMask PBGnssMeasurementsAdrStateMask_MIN = PB_GNSS_MEASUREMENTS_ACCUMULATED_DELTA_RANGE_STATE_UNKNOWN;
const PBGnssMeasurementsAdrStateMask PBGnssMeasurementsAdrStateMask_MAX = PB_GNSS_MEASUREMENTS_ACCUMULATED_DELTA_RANGE_STATE_CYCLE_SLIP_BIT;
const int PBGnssMeasurementsAdrStateMask_ARRAYSIZE = PBGnssMeasurementsAdrStateMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssMeasurementsAdrStateMask_descriptor();
inline const ::std::string& PBGnssMeasurementsAdrStateMask_Name(PBGnssMeasurementsAdrStateMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssMeasurementsAdrStateMask_descriptor(), value);
}
inline bool PBGnssMeasurementsAdrStateMask_Parse(
    const ::std::string& name, PBGnssMeasurementsAdrStateMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssMeasurementsAdrStateMask>(
    PBGnssMeasurementsAdrStateMask_descriptor(), name, value);
}
enum PBGnssMeasurementsDataFlagsMask {
  PB_GNSS_MEASUREMENTS_DATA_INVALID = 0,
  PB_GNSS_MEASUREMENTS_DATA_SV_ID_BIT = 1,
  PB_GNSS_MEASUREMENTS_DATA_SV_TYPE_BIT = 2,
  PB_GNSS_MEASUREMENTS_DATA_STATE_BIT = 4,
  PB_GNSS_MEASUREMENTS_DATA_RECEIVED_SV_TIME_BIT = 8,
  PB_GNSS_MEASUREMENTS_DATA_RECEIVED_SV_TIME_UNCERTAINTY_BIT = 16,
  PB_GNSS_MEASUREMENTS_DATA_CARRIER_TO_NOISE_BIT = 32,
  PB_GNSS_MEASUREMENTS_DATA_PSEUDORANGE_RATE_BIT = 64,
  PB_GNSS_MEASUREMENTS_DATA_PSEUDORANGE_RATE_UNCERTAINTY_BIT = 128,
  PB_GNSS_MEASUREMENTS_DATA_ADR_STATE_BIT = 256,
  PB_GNSS_MEASUREMENTS_DATA_ADR_BIT = 512,
  PB_GNSS_MEASUREMENTS_DATA_ADR_UNCERTAINTY_BIT = 1024,
  PB_GNSS_MEASUREMENTS_DATA_CARRIER_FREQUENCY_BIT = 2048,
  PB_GNSS_MEASUREMENTS_DATA_CARRIER_CYCLES_BIT = 4096,
  PB_GNSS_MEASUREMENTS_DATA_CARRIER_PHASE_BIT = 8192,
  PB_GNSS_MEASUREMENTS_DATA_CARRIER_PHASE_UNCERTAINTY_BIT = 16384,
  PB_GNSS_MEASUREMENTS_DATA_MULTIPATH_INDICATOR_BIT = 32768,
  PB_GNSS_MEASUREMENTS_DATA_SIGNAL_TO_NOISE_RATIO_BIT = 65536,
  PB_GNSS_MEASUREMENTS_DATA_AUTOMATIC_GAIN_CONTROL_BIT = 131072,
  PBGnssMeasurementsDataFlagsMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssMeasurementsDataFlagsMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssMeasurementsDataFlagsMask_IsValid(int value);
const PBGnssMeasurementsDataFlagsMask PBGnssMeasurementsDataFlagsMask_MIN = PB_GNSS_MEASUREMENTS_DATA_INVALID;
const PBGnssMeasurementsDataFlagsMask PBGnssMeasurementsDataFlagsMask_MAX = PB_GNSS_MEASUREMENTS_DATA_AUTOMATIC_GAIN_CONTROL_BIT;
const int PBGnssMeasurementsDataFlagsMask_ARRAYSIZE = PBGnssMeasurementsDataFlagsMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssMeasurementsDataFlagsMask_descriptor();
inline const ::std::string& PBGnssMeasurementsDataFlagsMask_Name(PBGnssMeasurementsDataFlagsMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssMeasurementsDataFlagsMask_descriptor(), value);
}
inline bool PBGnssMeasurementsDataFlagsMask_Parse(
    const ::std::string& name, PBGnssMeasurementsDataFlagsMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssMeasurementsDataFlagsMask>(
    PBGnssMeasurementsDataFlagsMask_descriptor(), name, value);
}
enum PBGnssMeasurementsStateMask {
  PB_GNSS_MEASUREMENTS_STATE_UNKNOWN_BIT = 0,
  PB_GNSS_MEASUREMENTS_STATE_CODE_LOCK_BIT = 1,
  PB_GNSS_MEASUREMENTS_STATE_BIT_SYNC_BIT = 2,
  PB_GNSS_MEASUREMENTS_STATE_SUBFRAME_SYNC_BIT = 4,
  PB_GNSS_MEASUREMENTS_STATE_TOW_DECODED_BIT = 8,
  PB_GNSS_MEASUREMENTS_STATE_MSEC_AMBIGUOUS_BIT = 16,
  PB_GNSS_MEASUREMENTS_STATE_SYMBOL_SYNC_BIT = 32,
  PB_GNSS_MEASUREMENTS_STATE_GLO_STRING_SYNC_BIT = 64,
  PB_GNSS_MEASUREMENTS_STATE_GLO_TOD_DECODED_BIT = 128,
  PB_GNSS_MEASUREMENTS_STATE_BDS_D2_BIT_SYNC_BIT = 256,
  PB_GNSS_MEASUREMENTS_STATE_BDS_D2_SUBFRAME_SYNC_BIT = 512,
  PB_GNSS_MEASUREMENTS_STATE_GAL_E1BC_CODE_LOCK_BIT = 1024,
  PB_GNSS_MEASUREMENTS_STATE_GAL_E1C_2ND_CODE_LOCK_BIT = 2048,
  PB_GNSS_MEASUREMENTS_STATE_GAL_E1B_PAGE_SYNC_BIT = 4096,
  PB_GNSS_MEASUREMENTS_STATE_SBAS_SYNC_BIT = 8192,
  PBGnssMeasurementsStateMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssMeasurementsStateMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssMeasurementsStateMask_IsValid(int value);
const PBGnssMeasurementsStateMask PBGnssMeasurementsStateMask_MIN = PB_GNSS_MEASUREMENTS_STATE_UNKNOWN_BIT;
const PBGnssMeasurementsStateMask PBGnssMeasurementsStateMask_MAX = PB_GNSS_MEASUREMENTS_STATE_SBAS_SYNC_BIT;
const int PBGnssMeasurementsStateMask_ARRAYSIZE = PBGnssMeasurementsStateMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssMeasurementsStateMask_descriptor();
inline const ::std::string& PBGnssMeasurementsStateMask_Name(PBGnssMeasurementsStateMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssMeasurementsStateMask_descriptor(), value);
}
inline bool PBGnssMeasurementsStateMask_Parse(
    const ::std::string& name, PBGnssMeasurementsStateMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssMeasurementsStateMask>(
    PBGnssMeasurementsStateMask_descriptor(), name, value);
}
enum PBGnssMeasurementsMultipathIndicator {
  PB_GNSS_MEASUREMENTS_MULTIPATH_INDICATOR_UNKNOWN = 0,
  PB_GNSS_MEASUREMENTS_MULTIPATH_INDICATOR_PRESENT = 1,
  PB_GNSS_MEASUREMENTS_MULTIPATH_INDICATOR_NOT_PRESENT = 2,
  PBGnssMeasurementsMultipathIndicator_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssMeasurementsMultipathIndicator_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssMeasurementsMultipathIndicator_IsValid(int value);
const PBGnssMeasurementsMultipathIndicator PBGnssMeasurementsMultipathIndicator_MIN = PB_GNSS_MEASUREMENTS_MULTIPATH_INDICATOR_UNKNOWN;
const PBGnssMeasurementsMultipathIndicator PBGnssMeasurementsMultipathIndicator_MAX = PB_GNSS_MEASUREMENTS_MULTIPATH_INDICATOR_NOT_PRESENT;
const int PBGnssMeasurementsMultipathIndicator_ARRAYSIZE = PBGnssMeasurementsMultipathIndicator_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssMeasurementsMultipathIndicator_descriptor();
inline const ::std::string& PBGnssMeasurementsMultipathIndicator_Name(PBGnssMeasurementsMultipathIndicator value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssMeasurementsMultipathIndicator_descriptor(), value);
}
inline bool PBGnssMeasurementsMultipathIndicator_Parse(
    const ::std::string& name, PBGnssMeasurementsMultipathIndicator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssMeasurementsMultipathIndicator>(
    PBGnssMeasurementsMultipathIndicator_descriptor(), name, value);
}
enum PBLocApiGnssAidingDataSvMask {
  PB_AIDING_DATA_SV_MASK_INVALID = 0,
  PB_AIDING_DATA_SV_EPHEMERIS_BIT = 1,
  PBLocApiGnssAidingDataSvMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocApiGnssAidingDataSvMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocApiGnssAidingDataSvMask_IsValid(int value);
const PBLocApiGnssAidingDataSvMask PBLocApiGnssAidingDataSvMask_MIN = PB_AIDING_DATA_SV_MASK_INVALID;
const PBLocApiGnssAidingDataSvMask PBLocApiGnssAidingDataSvMask_MAX = PB_AIDING_DATA_SV_EPHEMERIS_BIT;
const int PBLocApiGnssAidingDataSvMask_ARRAYSIZE = PBLocApiGnssAidingDataSvMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocApiGnssAidingDataSvMask_descriptor();
inline const ::std::string& PBLocApiGnssAidingDataSvMask_Name(PBLocApiGnssAidingDataSvMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocApiGnssAidingDataSvMask_descriptor(), value);
}
inline bool PBLocApiGnssAidingDataSvMask_Parse(
    const ::std::string& name, PBLocApiGnssAidingDataSvMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocApiGnssAidingDataSvMask>(
    PBLocApiGnssAidingDataSvMask_descriptor(), name, value);
}
enum PBLocationFlagsMask {
  PB_LOCATION_FLAGS_INVALID = 0,
  PB_LOCATION_HAS_LAT_LONG_BIT = 1,
  PB_LOCATION_HAS_ALTITUDE_BIT = 2,
  PB_LOCATION_HAS_SPEED_BIT = 4,
  PB_LOCATION_HAS_BEARING_BIT = 8,
  PB_LOCATION_HAS_ACCURACY_BIT = 16,
  PB_LOCATION_HAS_VERTICAL_ACCURACY_BIT = 32,
  PB_LOCATION_HAS_SPEED_ACCURACY_BIT = 64,
  PB_LOCATION_HAS_BEARING_ACCURACY_BIT = 128,
  PB_LOCATION_HAS_TIMESTAMP_BIT = 256,
  PBLocationFlagsMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocationFlagsMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocationFlagsMask_IsValid(int value);
const PBLocationFlagsMask PBLocationFlagsMask_MIN = PB_LOCATION_FLAGS_INVALID;
const PBLocationFlagsMask PBLocationFlagsMask_MAX = PB_LOCATION_HAS_TIMESTAMP_BIT;
const int PBLocationFlagsMask_ARRAYSIZE = PBLocationFlagsMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocationFlagsMask_descriptor();
inline const ::std::string& PBLocationFlagsMask_Name(PBLocationFlagsMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocationFlagsMask_descriptor(), value);
}
inline bool PBLocationFlagsMask_Parse(
    const ::std::string& name, PBLocationFlagsMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocationFlagsMask>(
    PBLocationFlagsMask_descriptor(), name, value);
}
enum PBLocationTechnologyMask {
  PB_LOCATION_TECHNOLOGY_INVALID = 0,
  PB_LOCATION_TECHNOLOGY_GNSS_BIT = 1,
  PB_LOCATION_TECHNOLOGY_CELL_BIT = 2,
  PB_LOCATION_TECHNOLOGY_WIFI_BIT = 4,
  PB_LOCATION_TECHNOLOGY_SENSORS_BIT = 8,
  PB_LOCATION_TECHNOLOGY_REFERENCE_LOCATION_BIT = 16,
  PB_LOCATION_TECHNOLOGY_INJECTED_COARSE_POSITION_BIT = 32,
  PB_LOCATION_TECHNOLOGY_AFLT_BIT = 64,
  PB_LOCATION_TECHNOLOGY_HYBRID_BIT = 128,
  PB_LOCATION_TECHNOLOGY_PPE_BIT = 256,
  PBLocationTechnologyMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocationTechnologyMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocationTechnologyMask_IsValid(int value);
const PBLocationTechnologyMask PBLocationTechnologyMask_MIN = PB_LOCATION_TECHNOLOGY_INVALID;
const PBLocationTechnologyMask PBLocationTechnologyMask_MAX = PB_LOCATION_TECHNOLOGY_PPE_BIT;
const int PBLocationTechnologyMask_ARRAYSIZE = PBLocationTechnologyMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocationTechnologyMask_descriptor();
inline const ::std::string& PBLocationTechnologyMask_Name(PBLocationTechnologyMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocationTechnologyMask_descriptor(), value);
}
inline bool PBLocationTechnologyMask_Parse(
    const ::std::string& name, PBLocationTechnologyMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocationTechnologyMask>(
    PBLocationTechnologyMask_descriptor(), name, value);
}
enum PBLocationCapabilitiesMask {
  PB_LOCATION_CAPS_INVALID = 0,
  PB_LOCATION_CAPS_TIME_BASED_TRACKING_BIT = 1,
  PB_LOCATION_CAPS_TIME_BASED_BATCHING_BIT = 2,
  PB_LOCATION_CAPS_DISTANCE_BASED_TRACKING_BIT = 4,
  PB_LOCATION_CAPS_DISTANCE_BASED_BATCHING_BIT = 8,
  PB_LOCATION_CAPS_GEOFENCE_BIT = 16,
  PB_LOCATION_CAPS_OUTDOOR_TRIP_BATCHING_BIT = 32,
  PBLocationCapabilitiesMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLocationCapabilitiesMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLocationCapabilitiesMask_IsValid(int value);
const PBLocationCapabilitiesMask PBLocationCapabilitiesMask_MIN = PB_LOCATION_CAPS_INVALID;
const PBLocationCapabilitiesMask PBLocationCapabilitiesMask_MAX = PB_LOCATION_CAPS_OUTDOOR_TRIP_BATCHING_BIT;
const int PBLocationCapabilitiesMask_ARRAYSIZE = PBLocationCapabilitiesMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLocationCapabilitiesMask_descriptor();
inline const ::std::string& PBLocationCapabilitiesMask_Name(PBLocationCapabilitiesMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLocationCapabilitiesMask_descriptor(), value);
}
inline bool PBLocationCapabilitiesMask_Parse(
    const ::std::string& name, PBLocationCapabilitiesMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLocationCapabilitiesMask>(
    PBLocationCapabilitiesMask_descriptor(), name, value);
}
enum PBGnssDataMask {
  PB_GNSS_LOC_DATA_INVALID = 0,
  PB_GNSS_LOC_DATA_JAMMER_IND_BIT = 1,
  PB_GNSS_LOC_DATA_AGC_BIT = 2,
  PBGnssDataMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBGnssDataMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBGnssDataMask_IsValid(int value);
const PBGnssDataMask PBGnssDataMask_MIN = PB_GNSS_LOC_DATA_INVALID;
const PBGnssDataMask PBGnssDataMask_MAX = PB_GNSS_LOC_DATA_AGC_BIT;
const int PBGnssDataMask_ARRAYSIZE = PBGnssDataMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBGnssDataMask_descriptor();
inline const ::std::string& PBGnssDataMask_Name(PBGnssDataMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBGnssDataMask_descriptor(), value);
}
inline bool PBGnssDataMask_Parse(
    const ::std::string& name, PBGnssDataMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBGnssDataMask>(
    PBGnssDataMask_descriptor(), name, value);
}
enum PBLIALeverArmTypeMask {
  PB_LEVER_ARM_TYPE_INVALID = 0,
  PB_LEVER_ARM_TYPE_GNSS_TO_VRP_BIT = 1,
  PB_LEVER_ARM_TYPE_DR_IMU_TO_GNSS_BIT = 2,
  PB_LEVER_ARM_TYPE_VEPP_IMU_TO_GNSS_BIT = 4,
  PBLIALeverArmTypeMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBLIALeverArmTypeMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBLIALeverArmTypeMask_IsValid(int value);
const PBLIALeverArmTypeMask PBLIALeverArmTypeMask_MIN = PB_LEVER_ARM_TYPE_INVALID;
const PBLIALeverArmTypeMask PBLIALeverArmTypeMask_MAX = PB_LEVER_ARM_TYPE_VEPP_IMU_TO_GNSS_BIT;
const int PBLIALeverArmTypeMask_ARRAYSIZE = PBLIALeverArmTypeMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBLIALeverArmTypeMask_descriptor();
inline const ::std::string& PBLIALeverArmTypeMask_Name(PBLIALeverArmTypeMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBLIALeverArmTypeMask_descriptor(), value);
}
inline bool PBLIALeverArmTypeMask_Parse(
    const ::std::string& name, PBLIALeverArmTypeMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBLIALeverArmTypeMask>(
    PBLIALeverArmTypeMask_descriptor(), name, value);
}
enum PBDrSolutionStatusMask {
  PB_VEHICLE_DRSOLUTION_INVALID = 0,
  PB_VEHICLE_SENSOR_SPEED_INPUT_DETECTED = 1,
  PB_VEHICLE_SENSOR_SPEED_INPUT_USED = 2,
  PBDrSolutionStatusMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDrSolutionStatusMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDrSolutionStatusMask_IsValid(int value);
const PBDrSolutionStatusMask PBDrSolutionStatusMask_MIN = PB_VEHICLE_DRSOLUTION_INVALID;
const PBDrSolutionStatusMask PBDrSolutionStatusMask_MAX = PB_VEHICLE_SENSOR_SPEED_INPUT_USED;
const int PBDrSolutionStatusMask_ARRAYSIZE = PBDrSolutionStatusMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDrSolutionStatusMask_descriptor();
inline const ::std::string& PBDrSolutionStatusMask_Name(PBDrSolutionStatusMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDrSolutionStatusMask_descriptor(), value);
}
inline bool PBDrSolutionStatusMask_Parse(
    const ::std::string& name, PBDrSolutionStatusMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDrSolutionStatusMask>(
    PBDrSolutionStatusMask_descriptor(), name, value);
}
enum PBDeadReckoningEngineConfigValidMask {
  PB_DR_RECKON_ENGINE_CONFIG_INVALID = 0,
  PB_BODY_TO_SENSOR_MOUNT_PARAMS_BIT = 1,
  PB_VEHICLE_SPEED_SCALE_FACTOR_BIT = 2,
  PB_VEHICLE_SPEED_SCALE_FACTOR_UNC_BIT = 4,
  PB_GYRO_SCALE_FACTOR_BIT = 8,
  PB_GYRO_SCALE_FACTOR_UNC_BIT = 16,
  PBDeadReckoningEngineConfigValidMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBDeadReckoningEngineConfigValidMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBDeadReckoningEngineConfigValidMask_IsValid(int value);
const PBDeadReckoningEngineConfigValidMask PBDeadReckoningEngineConfigValidMask_MIN = PB_DR_RECKON_ENGINE_CONFIG_INVALID;
const PBDeadReckoningEngineConfigValidMask PBDeadReckoningEngineConfigValidMask_MAX = PB_GYRO_SCALE_FACTOR_UNC_BIT;
const int PBDeadReckoningEngineConfigValidMask_ARRAYSIZE = PBDeadReckoningEngineConfigValidMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBDeadReckoningEngineConfigValidMask_descriptor();
inline const ::std::string& PBDeadReckoningEngineConfigValidMask_Name(PBDeadReckoningEngineConfigValidMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBDeadReckoningEngineConfigValidMask_descriptor(), value);
}
inline bool PBDeadReckoningEngineConfigValidMask_Parse(
    const ::std::string& name, PBDeadReckoningEngineConfigValidMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBDeadReckoningEngineConfigValidMask>(
    PBDeadReckoningEngineConfigValidMask_descriptor(), name, value);
}
// ===================================================================

class PBLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocation) */ {
 public:
  PBLocation();
  virtual ~PBLocation();

  PBLocation(const PBLocation& from);

  inline PBLocation& operator=(const PBLocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocation& default_instance();

  static inline const PBLocation* internal_default_instance() {
    return reinterpret_cast<const PBLocation*>(
               &_PBLocation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PBLocation* other);

  // implements Message ----------------------------------------------

  inline PBLocation* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocation& from);
  void MergeFrom(const PBLocation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // double latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // uint32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // float speed = 6;
  void clear_speed();
  static const int kSpeedFieldNumber = 6;
  float speed() const;
  void set_speed(float value);

  // double longitude = 4;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  double longitude() const;
  void set_longitude(double value);

  // double altitude = 5;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 5;
  double altitude() const;
  void set_altitude(double value);

  // float bearing = 7;
  void clear_bearing();
  static const int kBearingFieldNumber = 7;
  float bearing() const;
  void set_bearing(float value);

  // float horizontalAccuracy = 8;
  void clear_horizontalaccuracy();
  static const int kHorizontalAccuracyFieldNumber = 8;
  float horizontalaccuracy() const;
  void set_horizontalaccuracy(float value);

  // float verticalAccuracy = 9;
  void clear_verticalaccuracy();
  static const int kVerticalAccuracyFieldNumber = 9;
  float verticalaccuracy() const;
  void set_verticalaccuracy(float value);

  // float speedAccuracy = 10;
  void clear_speedaccuracy();
  static const int kSpeedAccuracyFieldNumber = 10;
  float speedaccuracy() const;
  void set_speedaccuracy(float value);

  // float bearingAccuracy = 11;
  void clear_bearingaccuracy();
  static const int kBearingAccuracyFieldNumber = 11;
  float bearingaccuracy() const;
  void set_bearingaccuracy(float value);

  // uint32 techMask = 12;
  void clear_techmask();
  static const int kTechMaskFieldNumber = 12;
  ::google::protobuf::uint32 techmask() const;
  void set_techmask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 timestamp_;
  double latitude_;
  ::google::protobuf::uint32 flags_;
  float speed_;
  double longitude_;
  double altitude_;
  float bearing_;
  float horizontalaccuracy_;
  float verticalaccuracy_;
  float speedaccuracy_;
  float bearingaccuracy_;
  ::google::protobuf::uint32 techmask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocationOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocationOptions) */ {
 public:
  PBLocationOptions();
  virtual ~PBLocationOptions();

  PBLocationOptions(const PBLocationOptions& from);

  inline PBLocationOptions& operator=(const PBLocationOptions& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocationOptions& default_instance();

  static inline const PBLocationOptions* internal_default_instance() {
    return reinterpret_cast<const PBLocationOptions*>(
               &_PBLocationOptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PBLocationOptions* other);

  // implements Message ----------------------------------------------

  inline PBLocationOptions* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocationOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocationOptions& from);
  void MergeFrom(const PBLocationOptions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocationOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 minInterval = 1;
  void clear_mininterval();
  static const int kMinIntervalFieldNumber = 1;
  ::google::protobuf::uint32 mininterval() const;
  void set_mininterval(::google::protobuf::uint32 value);

  // uint32 minDistance = 2;
  void clear_mindistance();
  static const int kMinDistanceFieldNumber = 2;
  ::google::protobuf::uint32 mindistance() const;
  void set_mindistance(::google::protobuf::uint32 value);

  // .PBGnssSuplMode mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::PBGnssSuplMode mode() const;
  void set_mode(::PBGnssSuplMode value);

  // uint32 locReqEngTypeMask = 4;
  void clear_locreqengtypemask();
  static const int kLocReqEngTypeMaskFieldNumber = 4;
  ::google::protobuf::uint32 locreqengtypemask() const;
  void set_locreqengtypemask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLocationOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 mininterval_;
  ::google::protobuf::uint32 mindistance_;
  int mode_;
  ::google::protobuf::uint32 locreqengtypemask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBAidingData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBAidingData) */ {
 public:
  PBAidingData();
  virtual ~PBAidingData();

  PBAidingData(const PBAidingData& from);

  inline PBAidingData& operator=(const PBAidingData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAidingData& default_instance();

  static inline const PBAidingData* internal_default_instance() {
    return reinterpret_cast<const PBAidingData*>(
               &_PBAidingData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PBAidingData* other);

  // implements Message ----------------------------------------------

  inline PBAidingData* New() const PROTOBUF_FINAL { return New(NULL); }

  PBAidingData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBAidingData& from);
  void MergeFrom(const PBAidingData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBAidingData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool deleteAll = 1;
  void clear_deleteall();
  static const int kDeleteAllFieldNumber = 1;
  bool deleteall() const;
  void set_deleteall(bool value);

  // uint32 gnssAidingDataSvMask = 2;
  void clear_gnssaidingdatasvmask();
  static const int kGnssAidingDataSvMaskFieldNumber = 2;
  ::google::protobuf::uint32 gnssaidingdatasvmask() const;
  void set_gnssaidingdatasvmask(::google::protobuf::uint32 value);

  // uint32 dreAidingDataMask = 3;
  void clear_dreaidingdatamask();
  static const int kDreAidingDataMaskFieldNumber = 3;
  ::google::protobuf::uint32 dreaidingdatamask() const;
  void set_dreaidingdatamask(::google::protobuf::uint32 value);

  // uint32 posEngineMask = 4;
  void clear_posenginemask();
  static const int kPosEngineMaskFieldNumber = 4;
  ::google::protobuf::uint32 posenginemask() const;
  void set_posenginemask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBAidingData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool deleteall_;
  ::google::protobuf::uint32 gnssaidingdatasvmask_;
  ::google::protobuf::uint32 dreaidingdatamask_;
  ::google::protobuf::uint32 posenginemask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocApiGnssSv : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocApiGnssSv) */ {
 public:
  PBLocApiGnssSv();
  virtual ~PBLocApiGnssSv();

  PBLocApiGnssSv(const PBLocApiGnssSv& from);

  inline PBLocApiGnssSv& operator=(const PBLocApiGnssSv& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocApiGnssSv& default_instance();

  static inline const PBLocApiGnssSv* internal_default_instance() {
    return reinterpret_cast<const PBLocApiGnssSv*>(
               &_PBLocApiGnssSv_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PBLocApiGnssSv* other);

  // implements Message ----------------------------------------------

  inline PBLocApiGnssSv* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocApiGnssSv* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocApiGnssSv& from);
  void MergeFrom(const PBLocApiGnssSv& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocApiGnssSv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 svId = 1;
  void clear_svid();
  static const int kSvIdFieldNumber = 1;
  ::google::protobuf::uint32 svid() const;
  void set_svid(::google::protobuf::uint32 value);

  // .PBLocApiGnss_LocSvSystemEnumType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::PBLocApiGnss_LocSvSystemEnumType type() const;
  void set_type(::PBLocApiGnss_LocSvSystemEnumType value);

  // float cN0Dbhz = 3;
  void clear_cn0dbhz();
  static const int kCN0DbhzFieldNumber = 3;
  float cn0dbhz() const;
  void set_cn0dbhz(float value);

  // float elevation = 4;
  void clear_elevation();
  static const int kElevationFieldNumber = 4;
  float elevation() const;
  void set_elevation(float value);

  // float azimuth = 5;
  void clear_azimuth();
  static const int kAzimuthFieldNumber = 5;
  float azimuth() const;
  void set_azimuth(float value);

  // uint32 gnssSvOptionsMask = 6;
  void clear_gnsssvoptionsmask();
  static const int kGnssSvOptionsMaskFieldNumber = 6;
  ::google::protobuf::uint32 gnsssvoptionsmask() const;
  void set_gnsssvoptionsmask(::google::protobuf::uint32 value);

  // float carrierFrequencyHz = 7;
  void clear_carrierfrequencyhz();
  static const int kCarrierFrequencyHzFieldNumber = 7;
  float carrierfrequencyhz() const;
  void set_carrierfrequencyhz(float value);

  // uint32 gnssSignalTypeMask = 8;
  void clear_gnsssignaltypemask();
  static const int kGnssSignalTypeMaskFieldNumber = 8;
  ::google::protobuf::uint32 gnsssignaltypemask() const;
  void set_gnsssignaltypemask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLocApiGnssSv)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 svid_;
  int type_;
  float cn0dbhz_;
  float elevation_;
  float azimuth_;
  ::google::protobuf::uint32 gnsssvoptionsmask_;
  float carrierfrequencyhz_;
  ::google::protobuf::uint32 gnsssignaltypemask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocApiGnssSvNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocApiGnssSvNotification) */ {
 public:
  PBLocApiGnssSvNotification();
  virtual ~PBLocApiGnssSvNotification();

  PBLocApiGnssSvNotification(const PBLocApiGnssSvNotification& from);

  inline PBLocApiGnssSvNotification& operator=(const PBLocApiGnssSvNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocApiGnssSvNotification& default_instance();

  static inline const PBLocApiGnssSvNotification* internal_default_instance() {
    return reinterpret_cast<const PBLocApiGnssSvNotification*>(
               &_PBLocApiGnssSvNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PBLocApiGnssSvNotification* other);

  // implements Message ----------------------------------------------

  inline PBLocApiGnssSvNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocApiGnssSvNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocApiGnssSvNotification& from);
  void MergeFrom(const PBLocApiGnssSvNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocApiGnssSvNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBLocApiGnssSv gnssSvs = 2;
  int gnsssvs_size() const;
  void clear_gnsssvs();
  static const int kGnssSvsFieldNumber = 2;
  const ::PBLocApiGnssSv& gnsssvs(int index) const;
  ::PBLocApiGnssSv* mutable_gnsssvs(int index);
  ::PBLocApiGnssSv* add_gnsssvs();
  ::google::protobuf::RepeatedPtrField< ::PBLocApiGnssSv >*
      mutable_gnsssvs();
  const ::google::protobuf::RepeatedPtrField< ::PBLocApiGnssSv >&
      gnsssvs() const;

  // bool gnssSignalTypeMaskValid = 1;
  void clear_gnsssignaltypemaskvalid();
  static const int kGnssSignalTypeMaskValidFieldNumber = 1;
  bool gnsssignaltypemaskvalid() const;
  void set_gnsssignaltypemaskvalid(bool value);

  // @@protoc_insertion_point(class_scope:PBLocApiGnssSvNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBLocApiGnssSv > gnsssvs_;
  bool gnsssignaltypemaskvalid_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssMeasurementsClock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssMeasurementsClock) */ {
 public:
  PBGnssMeasurementsClock();
  virtual ~PBGnssMeasurementsClock();

  PBGnssMeasurementsClock(const PBGnssMeasurementsClock& from);

  inline PBGnssMeasurementsClock& operator=(const PBGnssMeasurementsClock& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssMeasurementsClock& default_instance();

  static inline const PBGnssMeasurementsClock* internal_default_instance() {
    return reinterpret_cast<const PBGnssMeasurementsClock*>(
               &_PBGnssMeasurementsClock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PBGnssMeasurementsClock* other);

  // implements Message ----------------------------------------------

  inline PBGnssMeasurementsClock* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssMeasurementsClock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssMeasurementsClock& from);
  void MergeFrom(const PBGnssMeasurementsClock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssMeasurementsClock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // int32 leapSecond = 2;
  void clear_leapsecond();
  static const int kLeapSecondFieldNumber = 2;
  ::google::protobuf::int32 leapsecond() const;
  void set_leapsecond(::google::protobuf::int32 value);

  // int64 timeNs = 3;
  void clear_timens();
  static const int kTimeNsFieldNumber = 3;
  ::google::protobuf::int64 timens() const;
  void set_timens(::google::protobuf::int64 value);

  // double timeUncertaintyNs = 4;
  void clear_timeuncertaintyns();
  static const int kTimeUncertaintyNsFieldNumber = 4;
  double timeuncertaintyns() const;
  void set_timeuncertaintyns(double value);

  // int64 fullBiasNs = 5;
  void clear_fullbiasns();
  static const int kFullBiasNsFieldNumber = 5;
  ::google::protobuf::int64 fullbiasns() const;
  void set_fullbiasns(::google::protobuf::int64 value);

  // double biasNs = 6;
  void clear_biasns();
  static const int kBiasNsFieldNumber = 6;
  double biasns() const;
  void set_biasns(double value);

  // double biasUncertaintyNs = 7;
  void clear_biasuncertaintyns();
  static const int kBiasUncertaintyNsFieldNumber = 7;
  double biasuncertaintyns() const;
  void set_biasuncertaintyns(double value);

  // double driftNsps = 8;
  void clear_driftnsps();
  static const int kDriftNspsFieldNumber = 8;
  double driftnsps() const;
  void set_driftnsps(double value);

  // double driftUncertaintyNsps = 9;
  void clear_driftuncertaintynsps();
  static const int kDriftUncertaintyNspsFieldNumber = 9;
  double driftuncertaintynsps() const;
  void set_driftuncertaintynsps(double value);

  // uint32 hwClockDiscontinuityCount = 10;
  void clear_hwclockdiscontinuitycount();
  static const int kHwClockDiscontinuityCountFieldNumber = 10;
  ::google::protobuf::uint32 hwclockdiscontinuitycount() const;
  void set_hwclockdiscontinuitycount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssMeasurementsClock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::int32 leapsecond_;
  ::google::protobuf::int64 timens_;
  double timeuncertaintyns_;
  ::google::protobuf::int64 fullbiasns_;
  double biasns_;
  double biasuncertaintyns_;
  double driftnsps_;
  double driftuncertaintynsps_;
  ::google::protobuf::uint32 hwclockdiscontinuitycount_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssMeasurementsData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssMeasurementsData) */ {
 public:
  PBGnssMeasurementsData();
  virtual ~PBGnssMeasurementsData();

  PBGnssMeasurementsData(const PBGnssMeasurementsData& from);

  inline PBGnssMeasurementsData& operator=(const PBGnssMeasurementsData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssMeasurementsData& default_instance();

  static inline const PBGnssMeasurementsData* internal_default_instance() {
    return reinterpret_cast<const PBGnssMeasurementsData*>(
               &_PBGnssMeasurementsData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PBGnssMeasurementsData* other);

  // implements Message ----------------------------------------------

  inline PBGnssMeasurementsData* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssMeasurementsData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssMeasurementsData& from);
  void MergeFrom(const PBGnssMeasurementsData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssMeasurementsData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // int32 svId = 2;
  void clear_svid();
  static const int kSvIdFieldNumber = 2;
  ::google::protobuf::int32 svid() const;
  void set_svid(::google::protobuf::int32 value);

  // double timeOffsetNs = 4;
  void clear_timeoffsetns();
  static const int kTimeOffsetNsFieldNumber = 4;
  double timeoffsetns() const;
  void set_timeoffsetns(double value);

  // .PBLocApiGnss_LocSvSystemEnumType svType = 3;
  void clear_svtype();
  static const int kSvTypeFieldNumber = 3;
  ::PBLocApiGnss_LocSvSystemEnumType svtype() const;
  void set_svtype(::PBLocApiGnss_LocSvSystemEnumType value);

  // uint32 stateMask = 5;
  void clear_statemask();
  static const int kStateMaskFieldNumber = 5;
  ::google::protobuf::uint32 statemask() const;
  void set_statemask(::google::protobuf::uint32 value);

  // int64 receivedSvTimeNs = 6;
  void clear_receivedsvtimens();
  static const int kReceivedSvTimeNsFieldNumber = 6;
  ::google::protobuf::int64 receivedsvtimens() const;
  void set_receivedsvtimens(::google::protobuf::int64 value);

  // int64 receivedSvTimeUncertaintyNs = 7;
  void clear_receivedsvtimeuncertaintyns();
  static const int kReceivedSvTimeUncertaintyNsFieldNumber = 7;
  ::google::protobuf::int64 receivedsvtimeuncertaintyns() const;
  void set_receivedsvtimeuncertaintyns(::google::protobuf::int64 value);

  // double carrierToNoiseDbHz = 8;
  void clear_carriertonoisedbhz();
  static const int kCarrierToNoiseDbHzFieldNumber = 8;
  double carriertonoisedbhz() const;
  void set_carriertonoisedbhz(double value);

  // double pseudorangeRateMps = 9;
  void clear_pseudorangeratemps();
  static const int kPseudorangeRateMpsFieldNumber = 9;
  double pseudorangeratemps() const;
  void set_pseudorangeratemps(double value);

  // double pseudorangeRateUncertaintyMps = 10;
  void clear_pseudorangerateuncertaintymps();
  static const int kPseudorangeRateUncertaintyMpsFieldNumber = 10;
  double pseudorangerateuncertaintymps() const;
  void set_pseudorangerateuncertaintymps(double value);

  // double adrMeters = 12;
  void clear_adrmeters();
  static const int kAdrMetersFieldNumber = 12;
  double adrmeters() const;
  void set_adrmeters(double value);

  // uint32 adrStateMask = 11;
  void clear_adrstatemask();
  static const int kAdrStateMaskFieldNumber = 11;
  ::google::protobuf::uint32 adrstatemask() const;
  void set_adrstatemask(::google::protobuf::uint32 value);

  // float carrierFrequencyHz = 14;
  void clear_carrierfrequencyhz();
  static const int kCarrierFrequencyHzFieldNumber = 14;
  float carrierfrequencyhz() const;
  void set_carrierfrequencyhz(float value);

  // double adrUncertaintyMeters = 13;
  void clear_adruncertaintymeters();
  static const int kAdrUncertaintyMetersFieldNumber = 13;
  double adruncertaintymeters() const;
  void set_adruncertaintymeters(double value);

  // int64 carrierCycles = 15;
  void clear_carriercycles();
  static const int kCarrierCyclesFieldNumber = 15;
  ::google::protobuf::int64 carriercycles() const;
  void set_carriercycles(::google::protobuf::int64 value);

  // double carrierPhase = 16;
  void clear_carrierphase();
  static const int kCarrierPhaseFieldNumber = 16;
  double carrierphase() const;
  void set_carrierphase(double value);

  // double carrierPhaseUncertainty = 17;
  void clear_carrierphaseuncertainty();
  static const int kCarrierPhaseUncertaintyFieldNumber = 17;
  double carrierphaseuncertainty() const;
  void set_carrierphaseuncertainty(double value);

  // double signalToNoiseRatioDb = 19;
  void clear_signaltonoiseratiodb();
  static const int kSignalToNoiseRatioDbFieldNumber = 19;
  double signaltonoiseratiodb() const;
  void set_signaltonoiseratiodb(double value);

  // double agcLevelDb = 20;
  void clear_agcleveldb();
  static const int kAgcLevelDbFieldNumber = 20;
  double agcleveldb() const;
  void set_agcleveldb(double value);

  // .PBGnssMeasurementsMultipathIndicator multipathIndicator = 18;
  void clear_multipathindicator();
  static const int kMultipathIndicatorFieldNumber = 18;
  ::PBGnssMeasurementsMultipathIndicator multipathindicator() const;
  void set_multipathindicator(::PBGnssMeasurementsMultipathIndicator value);

  // @@protoc_insertion_point(class_scope:PBGnssMeasurementsData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::int32 svid_;
  double timeoffsetns_;
  int svtype_;
  ::google::protobuf::uint32 statemask_;
  ::google::protobuf::int64 receivedsvtimens_;
  ::google::protobuf::int64 receivedsvtimeuncertaintyns_;
  double carriertonoisedbhz_;
  double pseudorangeratemps_;
  double pseudorangerateuncertaintymps_;
  double adrmeters_;
  ::google::protobuf::uint32 adrstatemask_;
  float carrierfrequencyhz_;
  double adruncertaintymeters_;
  ::google::protobuf::int64 carriercycles_;
  double carrierphase_;
  double carrierphaseuncertainty_;
  double signaltonoiseratiodb_;
  double agcleveldb_;
  int multipathindicator_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocApiGnssLocationPositionDynamics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocApiGnssLocationPositionDynamics) */ {
 public:
  PBLocApiGnssLocationPositionDynamics();
  virtual ~PBLocApiGnssLocationPositionDynamics();

  PBLocApiGnssLocationPositionDynamics(const PBLocApiGnssLocationPositionDynamics& from);

  inline PBLocApiGnssLocationPositionDynamics& operator=(const PBLocApiGnssLocationPositionDynamics& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocApiGnssLocationPositionDynamics& default_instance();

  static inline const PBLocApiGnssLocationPositionDynamics* internal_default_instance() {
    return reinterpret_cast<const PBLocApiGnssLocationPositionDynamics*>(
               &_PBLocApiGnssLocationPositionDynamics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PBLocApiGnssLocationPositionDynamics* other);

  // implements Message ----------------------------------------------

  inline PBLocApiGnssLocationPositionDynamics* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocApiGnssLocationPositionDynamics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocApiGnssLocationPositionDynamics& from);
  void MergeFrom(const PBLocApiGnssLocationPositionDynamics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocApiGnssLocationPositionDynamics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 bodyFrameDataMask = 1;
  void clear_bodyframedatamask();
  static const int kBodyFrameDataMaskFieldNumber = 1;
  ::google::protobuf::uint32 bodyframedatamask() const;
  void set_bodyframedatamask(::google::protobuf::uint32 value);

  // float longAccel = 2;
  void clear_longaccel();
  static const int kLongAccelFieldNumber = 2;
  float longaccel() const;
  void set_longaccel(float value);

  // float latAccel = 3;
  void clear_lataccel();
  static const int kLatAccelFieldNumber = 3;
  float lataccel() const;
  void set_lataccel(float value);

  // float vertAccel = 4;
  void clear_vertaccel();
  static const int kVertAccelFieldNumber = 4;
  float vertaccel() const;
  void set_vertaccel(float value);

  // float longAccelUnc = 5;
  void clear_longaccelunc();
  static const int kLongAccelUncFieldNumber = 5;
  float longaccelunc() const;
  void set_longaccelunc(float value);

  // float latAccelUnc = 6;
  void clear_lataccelunc();
  static const int kLatAccelUncFieldNumber = 6;
  float lataccelunc() const;
  void set_lataccelunc(float value);

  // float vertAccelUnc = 7;
  void clear_vertaccelunc();
  static const int kVertAccelUncFieldNumber = 7;
  float vertaccelunc() const;
  void set_vertaccelunc(float value);

  // float pitch = 8;
  void clear_pitch();
  static const int kPitchFieldNumber = 8;
  float pitch() const;
  void set_pitch(float value);

  // float pitchUnc = 9;
  void clear_pitchunc();
  static const int kPitchUncFieldNumber = 9;
  float pitchunc() const;
  void set_pitchunc(float value);

  // float pitchRate = 10;
  void clear_pitchrate();
  static const int kPitchRateFieldNumber = 10;
  float pitchrate() const;
  void set_pitchrate(float value);

  // float pitchRateUnc = 11;
  void clear_pitchrateunc();
  static const int kPitchRateUncFieldNumber = 11;
  float pitchrateunc() const;
  void set_pitchrateunc(float value);

  // float roll = 12;
  void clear_roll();
  static const int kRollFieldNumber = 12;
  float roll() const;
  void set_roll(float value);

  // float rollUnc = 13;
  void clear_rollunc();
  static const int kRollUncFieldNumber = 13;
  float rollunc() const;
  void set_rollunc(float value);

  // float rollRate = 14;
  void clear_rollrate();
  static const int kRollRateFieldNumber = 14;
  float rollrate() const;
  void set_rollrate(float value);

  // float rollRateUnc = 15;
  void clear_rollrateunc();
  static const int kRollRateUncFieldNumber = 15;
  float rollrateunc() const;
  void set_rollrateunc(float value);

  // float yaw = 16;
  void clear_yaw();
  static const int kYawFieldNumber = 16;
  float yaw() const;
  void set_yaw(float value);

  // float yawUnc = 17;
  void clear_yawunc();
  static const int kYawUncFieldNumber = 17;
  float yawunc() const;
  void set_yawunc(float value);

  // float yawRate = 18;
  void clear_yawrate();
  static const int kYawRateFieldNumber = 18;
  float yawrate() const;
  void set_yawrate(float value);

  // float yawRateUnc = 19;
  void clear_yawrateunc();
  static const int kYawRateUncFieldNumber = 19;
  float yawrateunc() const;
  void set_yawrateunc(float value);

  // @@protoc_insertion_point(class_scope:PBLocApiGnssLocationPositionDynamics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 bodyframedatamask_;
  float longaccel_;
  float lataccel_;
  float vertaccel_;
  float longaccelunc_;
  float lataccelunc_;
  float vertaccelunc_;
  float pitch_;
  float pitchunc_;
  float pitchrate_;
  float pitchrateunc_;
  float roll_;
  float rollunc_;
  float rollrate_;
  float rollrateunc_;
  float yaw_;
  float yawunc_;
  float yawrate_;
  float yawrateunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocApiSystemTimeStructUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocApiSystemTimeStructUnion) */ {
 public:
  PBLocApiSystemTimeStructUnion();
  virtual ~PBLocApiSystemTimeStructUnion();

  PBLocApiSystemTimeStructUnion(const PBLocApiSystemTimeStructUnion& from);

  inline PBLocApiSystemTimeStructUnion& operator=(const PBLocApiSystemTimeStructUnion& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocApiSystemTimeStructUnion& default_instance();

  enum SysTimeUnionCase {
    kGpsSystemTime = 1,
    kGalSystemTime = 2,
    kBdsSystemTime = 3,
    kQzssSystemTime = 4,
    kGloSystemTime = 5,
    kNavicSystemTime = 6,
    SYSTIMEUNION_NOT_SET = 0,
  };

  static inline const PBLocApiSystemTimeStructUnion* internal_default_instance() {
    return reinterpret_cast<const PBLocApiSystemTimeStructUnion*>(
               &_PBLocApiSystemTimeStructUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PBLocApiSystemTimeStructUnion* other);

  // implements Message ----------------------------------------------

  inline PBLocApiSystemTimeStructUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocApiSystemTimeStructUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocApiSystemTimeStructUnion& from);
  void MergeFrom(const PBLocApiSystemTimeStructUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocApiSystemTimeStructUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLocApiGnssSystemTimeStructType gpsSystemTime = 1;
  bool has_gpssystemtime() const;
  void clear_gpssystemtime();
  static const int kGpsSystemTimeFieldNumber = 1;
  const ::PBLocApiGnssSystemTimeStructType& gpssystemtime() const;
  ::PBLocApiGnssSystemTimeStructType* mutable_gpssystemtime();
  ::PBLocApiGnssSystemTimeStructType* release_gpssystemtime();
  void set_allocated_gpssystemtime(::PBLocApiGnssSystemTimeStructType* gpssystemtime);

  // .PBLocApiGnssSystemTimeStructType galSystemTime = 2;
  bool has_galsystemtime() const;
  void clear_galsystemtime();
  static const int kGalSystemTimeFieldNumber = 2;
  const ::PBLocApiGnssSystemTimeStructType& galsystemtime() const;
  ::PBLocApiGnssSystemTimeStructType* mutable_galsystemtime();
  ::PBLocApiGnssSystemTimeStructType* release_galsystemtime();
  void set_allocated_galsystemtime(::PBLocApiGnssSystemTimeStructType* galsystemtime);

  // .PBLocApiGnssSystemTimeStructType bdsSystemTime = 3;
  bool has_bdssystemtime() const;
  void clear_bdssystemtime();
  static const int kBdsSystemTimeFieldNumber = 3;
  const ::PBLocApiGnssSystemTimeStructType& bdssystemtime() const;
  ::PBLocApiGnssSystemTimeStructType* mutable_bdssystemtime();
  ::PBLocApiGnssSystemTimeStructType* release_bdssystemtime();
  void set_allocated_bdssystemtime(::PBLocApiGnssSystemTimeStructType* bdssystemtime);

  // .PBLocApiGnssSystemTimeStructType qzssSystemTime = 4;
  bool has_qzsssystemtime() const;
  void clear_qzsssystemtime();
  static const int kQzssSystemTimeFieldNumber = 4;
  const ::PBLocApiGnssSystemTimeStructType& qzsssystemtime() const;
  ::PBLocApiGnssSystemTimeStructType* mutable_qzsssystemtime();
  ::PBLocApiGnssSystemTimeStructType* release_qzsssystemtime();
  void set_allocated_qzsssystemtime(::PBLocApiGnssSystemTimeStructType* qzsssystemtime);

  // .PBLocApiGnssGloTimeStructType gloSystemTime = 5;
  bool has_glosystemtime() const;
  void clear_glosystemtime();
  static const int kGloSystemTimeFieldNumber = 5;
  const ::PBLocApiGnssGloTimeStructType& glosystemtime() const;
  ::PBLocApiGnssGloTimeStructType* mutable_glosystemtime();
  ::PBLocApiGnssGloTimeStructType* release_glosystemtime();
  void set_allocated_glosystemtime(::PBLocApiGnssGloTimeStructType* glosystemtime);

  // .PBLocApiGnssSystemTimeStructType navicSystemTime = 6;
  bool has_navicsystemtime() const;
  void clear_navicsystemtime();
  static const int kNavicSystemTimeFieldNumber = 6;
  const ::PBLocApiGnssSystemTimeStructType& navicsystemtime() const;
  ::PBLocApiGnssSystemTimeStructType* mutable_navicsystemtime();
  ::PBLocApiGnssSystemTimeStructType* release_navicsystemtime();
  void set_allocated_navicsystemtime(::PBLocApiGnssSystemTimeStructType* navicsystemtime);

  SysTimeUnionCase sysTimeUnion_case() const;
  // @@protoc_insertion_point(class_scope:PBLocApiSystemTimeStructUnion)
 private:
  void set_has_gpssystemtime();
  void set_has_galsystemtime();
  void set_has_bdssystemtime();
  void set_has_qzsssystemtime();
  void set_has_glosystemtime();
  void set_has_navicsystemtime();

  inline bool has_sysTimeUnion() const;
  void clear_sysTimeUnion();
  inline void clear_has_sysTimeUnion();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union SysTimeUnionUnion {
    SysTimeUnionUnion() {}
    ::PBLocApiGnssSystemTimeStructType* gpssystemtime_;
    ::PBLocApiGnssSystemTimeStructType* galsystemtime_;
    ::PBLocApiGnssSystemTimeStructType* bdssystemtime_;
    ::PBLocApiGnssSystemTimeStructType* qzsssystemtime_;
    ::PBLocApiGnssGloTimeStructType* glosystemtime_;
    ::PBLocApiGnssSystemTimeStructType* navicsystemtime_;
  } sysTimeUnion_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocApiGnssSystemTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocApiGnssSystemTime) */ {
 public:
  PBLocApiGnssSystemTime();
  virtual ~PBLocApiGnssSystemTime();

  PBLocApiGnssSystemTime(const PBLocApiGnssSystemTime& from);

  inline PBLocApiGnssSystemTime& operator=(const PBLocApiGnssSystemTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocApiGnssSystemTime& default_instance();

  static inline const PBLocApiGnssSystemTime* internal_default_instance() {
    return reinterpret_cast<const PBLocApiGnssSystemTime*>(
               &_PBLocApiGnssSystemTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PBLocApiGnssSystemTime* other);

  // implements Message ----------------------------------------------

  inline PBLocApiGnssSystemTime* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocApiGnssSystemTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocApiGnssSystemTime& from);
  void MergeFrom(const PBLocApiGnssSystemTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocApiGnssSystemTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLocApiSystemTimeStructUnion u = 2;
  bool has_u() const;
  void clear_u();
  static const int kUFieldNumber = 2;
  const ::PBLocApiSystemTimeStructUnion& u() const;
  ::PBLocApiSystemTimeStructUnion* mutable_u();
  ::PBLocApiSystemTimeStructUnion* release_u();
  void set_allocated_u(::PBLocApiSystemTimeStructUnion* u);

  // .PBLocApiGnss_LocSvSystemEnumType gnssSystemTimeSrc = 1;
  void clear_gnsssystemtimesrc();
  static const int kGnssSystemTimeSrcFieldNumber = 1;
  ::PBLocApiGnss_LocSvSystemEnumType gnsssystemtimesrc() const;
  void set_gnsssystemtimesrc(::PBLocApiGnss_LocSvSystemEnumType value);

  // @@protoc_insertion_point(class_scope:PBLocApiGnssSystemTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLocApiSystemTimeStructUnion* u_;
  int gnsssystemtimesrc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssLocationSvUsedInPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssLocationSvUsedInPosition) */ {
 public:
  PBGnssLocationSvUsedInPosition();
  virtual ~PBGnssLocationSvUsedInPosition();

  PBGnssLocationSvUsedInPosition(const PBGnssLocationSvUsedInPosition& from);

  inline PBGnssLocationSvUsedInPosition& operator=(const PBGnssLocationSvUsedInPosition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssLocationSvUsedInPosition& default_instance();

  static inline const PBGnssLocationSvUsedInPosition* internal_default_instance() {
    return reinterpret_cast<const PBGnssLocationSvUsedInPosition*>(
               &_PBGnssLocationSvUsedInPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PBGnssLocationSvUsedInPosition* other);

  // implements Message ----------------------------------------------

  inline PBGnssLocationSvUsedInPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssLocationSvUsedInPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssLocationSvUsedInPosition& from);
  void MergeFrom(const PBGnssLocationSvUsedInPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssLocationSvUsedInPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gpsSvUsedIdsMask = 1;
  void clear_gpssvusedidsmask();
  static const int kGpsSvUsedIdsMaskFieldNumber = 1;
  ::google::protobuf::uint64 gpssvusedidsmask() const;
  void set_gpssvusedidsmask(::google::protobuf::uint64 value);

  // uint64 gloSvUsedIdsMask = 2;
  void clear_glosvusedidsmask();
  static const int kGloSvUsedIdsMaskFieldNumber = 2;
  ::google::protobuf::uint64 glosvusedidsmask() const;
  void set_glosvusedidsmask(::google::protobuf::uint64 value);

  // uint64 galSvUsedIdsMask = 3;
  void clear_galsvusedidsmask();
  static const int kGalSvUsedIdsMaskFieldNumber = 3;
  ::google::protobuf::uint64 galsvusedidsmask() const;
  void set_galsvusedidsmask(::google::protobuf::uint64 value);

  // uint64 bdsSvUsedIdsMask = 4;
  void clear_bdssvusedidsmask();
  static const int kBdsSvUsedIdsMaskFieldNumber = 4;
  ::google::protobuf::uint64 bdssvusedidsmask() const;
  void set_bdssvusedidsmask(::google::protobuf::uint64 value);

  // uint64 qzssSvUsedIdsMask = 5;
  void clear_qzsssvusedidsmask();
  static const int kQzssSvUsedIdsMaskFieldNumber = 5;
  ::google::protobuf::uint64 qzsssvusedidsmask() const;
  void set_qzsssvusedidsmask(::google::protobuf::uint64 value);

  // uint64 navicSvUsedIdsMask = 6;
  void clear_navicsvusedidsmask();
  static const int kNavicSvUsedIdsMaskFieldNumber = 6;
  ::google::protobuf::uint64 navicsvusedidsmask() const;
  void set_navicsvusedidsmask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PBGnssLocationSvUsedInPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gpssvusedidsmask_;
  ::google::protobuf::uint64 glosvusedidsmask_;
  ::google::protobuf::uint64 galsvusedidsmask_;
  ::google::protobuf::uint64 bdssvusedidsmask_;
  ::google::protobuf::uint64 qzsssvusedidsmask_;
  ::google::protobuf::uint64 navicsvusedidsmask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssMeasUsageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssMeasUsageInfo) */ {
 public:
  PBGnssMeasUsageInfo();
  virtual ~PBGnssMeasUsageInfo();

  PBGnssMeasUsageInfo(const PBGnssMeasUsageInfo& from);

  inline PBGnssMeasUsageInfo& operator=(const PBGnssMeasUsageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssMeasUsageInfo& default_instance();

  static inline const PBGnssMeasUsageInfo* internal_default_instance() {
    return reinterpret_cast<const PBGnssMeasUsageInfo*>(
               &_PBGnssMeasUsageInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PBGnssMeasUsageInfo* other);

  // implements Message ----------------------------------------------

  inline PBGnssMeasUsageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssMeasUsageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssMeasUsageInfo& from);
  void MergeFrom(const PBGnssMeasUsageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssMeasUsageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLocApiGnss_LocSvSystemEnumType gnssConstellation = 1;
  void clear_gnssconstellation();
  static const int kGnssConstellationFieldNumber = 1;
  ::PBLocApiGnss_LocSvSystemEnumType gnssconstellation() const;
  void set_gnssconstellation(::PBLocApiGnss_LocSvSystemEnumType value);

  // uint32 gnssSvId = 2;
  void clear_gnsssvid();
  static const int kGnssSvIdFieldNumber = 2;
  ::google::protobuf::uint32 gnsssvid() const;
  void set_gnsssvid(::google::protobuf::uint32 value);

  // uint32 gnssSignalType = 3;
  void clear_gnsssignaltype();
  static const int kGnssSignalTypeFieldNumber = 3;
  ::google::protobuf::uint32 gnsssignaltype() const;
  void set_gnsssignaltype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssMeasUsageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int gnssconstellation_;
  ::google::protobuf::uint32 gnsssvid_;
  ::google::protobuf::uint32 gnsssignaltype_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssLocationInfoNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssLocationInfoNotification) */ {
 public:
  PBGnssLocationInfoNotification();
  virtual ~PBGnssLocationInfoNotification();

  PBGnssLocationInfoNotification(const PBGnssLocationInfoNotification& from);

  inline PBGnssLocationInfoNotification& operator=(const PBGnssLocationInfoNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssLocationInfoNotification& default_instance();

  static inline const PBGnssLocationInfoNotification* internal_default_instance() {
    return reinterpret_cast<const PBGnssLocationInfoNotification*>(
               &_PBGnssLocationInfoNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(PBGnssLocationInfoNotification* other);

  // implements Message ----------------------------------------------

  inline PBGnssLocationInfoNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssLocationInfoNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssLocationInfoNotification& from);
  void MergeFrom(const PBGnssLocationInfoNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssLocationInfoNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGnssMeasUsageInfo measUsageInfo = 29;
  int measusageinfo_size() const;
  void clear_measusageinfo();
  static const int kMeasUsageInfoFieldNumber = 29;
  const ::PBGnssMeasUsageInfo& measusageinfo(int index) const;
  ::PBGnssMeasUsageInfo* mutable_measusageinfo(int index);
  ::PBGnssMeasUsageInfo* add_measusageinfo();
  ::google::protobuf::RepeatedPtrField< ::PBGnssMeasUsageInfo >*
      mutable_measusageinfo();
  const ::google::protobuf::RepeatedPtrField< ::PBGnssMeasUsageInfo >&
      measusageinfo() const;

  // repeated float enuVelocityVRPBased = 38;
  int enuvelocityvrpbased_size() const;
  void clear_enuvelocityvrpbased();
  static const int kEnuVelocityVRPBasedFieldNumber = 38;
  float enuvelocityvrpbased(int index) const;
  void set_enuvelocityvrpbased(int index, float value);
  void add_enuvelocityvrpbased(float value);
  const ::google::protobuf::RepeatedField< float >&
      enuvelocityvrpbased() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_enuvelocityvrpbased();

  // .PBLocation location = 1;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  const ::PBLocation& location() const;
  ::PBLocation* mutable_location();
  ::PBLocation* release_location();
  void set_allocated_location(::PBLocation* location);

  // .PBGnssLocationSvUsedInPosition svUsedInPosition = 24;
  bool has_svusedinposition() const;
  void clear_svusedinposition();
  static const int kSvUsedInPositionFieldNumber = 24;
  const ::PBGnssLocationSvUsedInPosition& svusedinposition() const;
  ::PBGnssLocationSvUsedInPosition* mutable_svusedinposition();
  ::PBGnssLocationSvUsedInPosition* release_svusedinposition();
  void set_allocated_svusedinposition(::PBGnssLocationSvUsedInPosition* svusedinposition);

  // .PBLocApiGnssLocationPositionDynamics bodyFrameData = 26;
  bool has_bodyframedata() const;
  void clear_bodyframedata();
  static const int kBodyFrameDataFieldNumber = 26;
  const ::PBLocApiGnssLocationPositionDynamics& bodyframedata() const;
  ::PBLocApiGnssLocationPositionDynamics* mutable_bodyframedata();
  ::PBLocApiGnssLocationPositionDynamics* release_bodyframedata();
  void set_allocated_bodyframedata(::PBLocApiGnssLocationPositionDynamics* bodyframedata);

  // .PBLocApiGnssSystemTime gnssSystemTime = 27;
  bool has_gnsssystemtime() const;
  void clear_gnsssystemtime();
  static const int kGnssSystemTimeFieldNumber = 27;
  const ::PBLocApiGnssSystemTime& gnsssystemtime() const;
  ::PBLocApiGnssSystemTime* mutable_gnsssystemtime();
  ::PBLocApiGnssSystemTime* release_gnsssystemtime();
  void set_allocated_gnsssystemtime(::PBLocApiGnssSystemTime* gnsssystemtime);

  // .PBLLAInfo llaVRPBased = 37;
  bool has_llavrpbased() const;
  void clear_llavrpbased();
  static const int kLlaVRPBasedFieldNumber = 37;
  const ::PBLLAInfo& llavrpbased() const;
  ::PBLLAInfo* mutable_llavrpbased();
  ::PBLLAInfo* release_llavrpbased();
  void set_allocated_llavrpbased(::PBLLAInfo* llavrpbased);

  // uint32 flags = 2;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // float altitudeMeanSeaLevel = 3;
  void clear_altitudemeansealevel();
  static const int kAltitudeMeanSeaLevelFieldNumber = 3;
  float altitudemeansealevel() const;
  void set_altitudemeansealevel(float value);

  // float pdop = 4;
  void clear_pdop();
  static const int kPdopFieldNumber = 4;
  float pdop() const;
  void set_pdop(float value);

  // float hdop = 5;
  void clear_hdop();
  static const int kHdopFieldNumber = 5;
  float hdop() const;
  void set_hdop(float value);

  // float vdop = 6;
  void clear_vdop();
  static const int kVdopFieldNumber = 6;
  float vdop() const;
  void set_vdop(float value);

  // float gdop = 7;
  void clear_gdop();
  static const int kGdopFieldNumber = 7;
  float gdop() const;
  void set_gdop(float value);

  // float tdop = 8;
  void clear_tdop();
  static const int kTdopFieldNumber = 8;
  float tdop() const;
  void set_tdop(float value);

  // float magneticDeviation = 9;
  void clear_magneticdeviation();
  static const int kMagneticDeviationFieldNumber = 9;
  float magneticdeviation() const;
  void set_magneticdeviation(float value);

  // .PBLocationReliability horReliability = 10;
  void clear_horreliability();
  static const int kHorReliabilityFieldNumber = 10;
  ::PBLocationReliability horreliability() const;
  void set_horreliability(::PBLocationReliability value);

  // .PBLocationReliability verReliability = 11;
  void clear_verreliability();
  static const int kVerReliabilityFieldNumber = 11;
  ::PBLocationReliability verreliability() const;
  void set_verreliability(::PBLocationReliability value);

  // float horUncEllipseSemiMajor = 12;
  void clear_horuncellipsesemimajor();
  static const int kHorUncEllipseSemiMajorFieldNumber = 12;
  float horuncellipsesemimajor() const;
  void set_horuncellipsesemimajor(float value);

  // float horUncEllipseSemiMinor = 13;
  void clear_horuncellipsesemiminor();
  static const int kHorUncEllipseSemiMinorFieldNumber = 13;
  float horuncellipsesemiminor() const;
  void set_horuncellipsesemiminor(float value);

  // float horUncEllipseOrientAzimuth = 14;
  void clear_horuncellipseorientazimuth();
  static const int kHorUncEllipseOrientAzimuthFieldNumber = 14;
  float horuncellipseorientazimuth() const;
  void set_horuncellipseorientazimuth(float value);

  // float northStdDeviation = 15;
  void clear_northstddeviation();
  static const int kNorthStdDeviationFieldNumber = 15;
  float northstddeviation() const;
  void set_northstddeviation(float value);

  // float eastStdDeviation = 16;
  void clear_eaststddeviation();
  static const int kEastStdDeviationFieldNumber = 16;
  float eaststddeviation() const;
  void set_eaststddeviation(float value);

  // float northVelocity = 17;
  void clear_northvelocity();
  static const int kNorthVelocityFieldNumber = 17;
  float northvelocity() const;
  void set_northvelocity(float value);

  // float eastVelocity = 18;
  void clear_eastvelocity();
  static const int kEastVelocityFieldNumber = 18;
  float eastvelocity() const;
  void set_eastvelocity(float value);

  // float upVelocity = 19;
  void clear_upvelocity();
  static const int kUpVelocityFieldNumber = 19;
  float upvelocity() const;
  void set_upvelocity(float value);

  // float northVelocityStdDeviation = 20;
  void clear_northvelocitystddeviation();
  static const int kNorthVelocityStdDeviationFieldNumber = 20;
  float northvelocitystddeviation() const;
  void set_northvelocitystddeviation(float value);

  // float eastVelocityStdDeviation = 21;
  void clear_eastvelocitystddeviation();
  static const int kEastVelocityStdDeviationFieldNumber = 21;
  float eastvelocitystddeviation() const;
  void set_eastvelocitystddeviation(float value);

  // float upVelocityStdDeviation = 22;
  void clear_upvelocitystddeviation();
  static const int kUpVelocityStdDeviationFieldNumber = 22;
  float upvelocitystddeviation() const;
  void set_upvelocitystddeviation(float value);

  // uint32 numSvUsedInPosition = 23;
  void clear_numsvusedinposition();
  static const int kNumSvUsedInPositionFieldNumber = 23;
  ::google::protobuf::uint32 numsvusedinposition() const;
  void set_numsvusedinposition(::google::protobuf::uint32 value);

  // uint32 navSolutionMask = 25;
  void clear_navsolutionmask();
  static const int kNavSolutionMaskFieldNumber = 25;
  ::google::protobuf::uint32 navsolutionmask() const;
  void set_navsolutionmask(::google::protobuf::uint32 value);

  // uint32 numOfMeasReceived = 28;
  void clear_numofmeasreceived();
  static const int kNumOfMeasReceivedFieldNumber = 28;
  ::google::protobuf::uint32 numofmeasreceived() const;
  void set_numofmeasreceived(::google::protobuf::uint32 value);

  // uint32 leapSeconds = 30;
  void clear_leapseconds();
  static const int kLeapSecondsFieldNumber = 30;
  ::google::protobuf::uint32 leapseconds() const;
  void set_leapseconds(::google::protobuf::uint32 value);

  // float timeUncMs = 31;
  void clear_timeuncms();
  static const int kTimeUncMsFieldNumber = 31;
  float timeuncms() const;
  void set_timeuncms(float value);

  // uint32 calibrationConfidence = 32;
  void clear_calibrationconfidence();
  static const int kCalibrationConfidenceFieldNumber = 32;
  ::google::protobuf::uint32 calibrationconfidence() const;
  void set_calibrationconfidence(::google::protobuf::uint32 value);

  // uint32 calibrationStatus = 33;
  void clear_calibrationstatus();
  static const int kCalibrationStatusFieldNumber = 33;
  ::google::protobuf::uint32 calibrationstatus() const;
  void set_calibrationstatus(::google::protobuf::uint32 value);

  // .PBLocApiOutputEngineType locOutputEngType = 34;
  void clear_locoutputengtype();
  static const int kLocOutputEngTypeFieldNumber = 34;
  ::PBLocApiOutputEngineType locoutputengtype() const;
  void set_locoutputengtype(::PBLocApiOutputEngineType value);

  // uint32 locOutputEngMask = 35;
  void clear_locoutputengmask();
  static const int kLocOutputEngMaskFieldNumber = 35;
  ::google::protobuf::uint32 locoutputengmask() const;
  void set_locoutputengmask(::google::protobuf::uint32 value);

  // float conformityIndex = 36;
  void clear_conformityindex();
  static const int kConformityIndexFieldNumber = 36;
  float conformityindex() const;
  void set_conformityindex(float value);

  // uint32 drSolutionStatusMask = 39;
  void clear_drsolutionstatusmask();
  static const int kDrSolutionStatusMaskFieldNumber = 39;
  ::google::protobuf::uint32 drsolutionstatusmask() const;
  void set_drsolutionstatusmask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssLocationInfoNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBGnssMeasUsageInfo > measusageinfo_;
  ::google::protobuf::RepeatedField< float > enuvelocityvrpbased_;
  mutable int _enuvelocityvrpbased_cached_byte_size_;
  ::PBLocation* location_;
  ::PBGnssLocationSvUsedInPosition* svusedinposition_;
  ::PBLocApiGnssLocationPositionDynamics* bodyframedata_;
  ::PBLocApiGnssSystemTime* gnsssystemtime_;
  ::PBLLAInfo* llavrpbased_;
  ::google::protobuf::uint32 flags_;
  float altitudemeansealevel_;
  float pdop_;
  float hdop_;
  float vdop_;
  float gdop_;
  float tdop_;
  float magneticdeviation_;
  int horreliability_;
  int verreliability_;
  float horuncellipsesemimajor_;
  float horuncellipsesemiminor_;
  float horuncellipseorientazimuth_;
  float northstddeviation_;
  float eaststddeviation_;
  float northvelocity_;
  float eastvelocity_;
  float upvelocity_;
  float northvelocitystddeviation_;
  float eastvelocitystddeviation_;
  float upvelocitystddeviation_;
  ::google::protobuf::uint32 numsvusedinposition_;
  ::google::protobuf::uint32 navsolutionmask_;
  ::google::protobuf::uint32 numofmeasreceived_;
  ::google::protobuf::uint32 leapseconds_;
  float timeuncms_;
  ::google::protobuf::uint32 calibrationconfidence_;
  ::google::protobuf::uint32 calibrationstatus_;
  int locoutputengtype_;
  ::google::protobuf::uint32 locoutputengmask_;
  float conformityindex_;
  ::google::protobuf::uint32 drsolutionstatusmask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssDataNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssDataNotification) */ {
 public:
  PBGnssDataNotification();
  virtual ~PBGnssDataNotification();

  PBGnssDataNotification(const PBGnssDataNotification& from);

  inline PBGnssDataNotification& operator=(const PBGnssDataNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssDataNotification& default_instance();

  static inline const PBGnssDataNotification* internal_default_instance() {
    return reinterpret_cast<const PBGnssDataNotification*>(
               &_PBGnssDataNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PBGnssDataNotification* other);

  // implements Message ----------------------------------------------

  inline PBGnssDataNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssDataNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssDataNotification& from);
  void MergeFrom(const PBGnssDataNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssDataNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 gnssDataMask = 2;
  int gnssdatamask_size() const;
  void clear_gnssdatamask();
  static const int kGnssDataMaskFieldNumber = 2;
  ::google::protobuf::uint64 gnssdatamask(int index) const;
  void set_gnssdatamask(int index, ::google::protobuf::uint64 value);
  void add_gnssdatamask(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      gnssdatamask() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_gnssdatamask();

  // repeated double jammerInd = 3;
  int jammerind_size() const;
  void clear_jammerind();
  static const int kJammerIndFieldNumber = 3;
  double jammerind(int index) const;
  void set_jammerind(int index, double value);
  void add_jammerind(double value);
  const ::google::protobuf::RepeatedField< double >&
      jammerind() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_jammerind();

  // repeated double agc = 4;
  int agc_size() const;
  void clear_agc();
  static const int kAgcFieldNumber = 4;
  double agc(int index) const;
  void set_agc(int index, double value);
  void add_agc(double value);
  const ::google::protobuf::RepeatedField< double >&
      agc() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_agc();

  // uint32 numberSignalTypes = 1;
  void clear_numbersignaltypes();
  static const int kNumberSignalTypesFieldNumber = 1;
  ::google::protobuf::uint32 numbersignaltypes() const;
  void set_numbersignaltypes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssDataNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > gnssdatamask_;
  mutable int _gnssdatamask_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > jammerind_;
  mutable int _jammerind_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > agc_;
  mutable int _agc_cached_byte_size_;
  ::google::protobuf::uint32 numbersignaltypes_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssMeasurementsNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssMeasurementsNotification) */ {
 public:
  PBGnssMeasurementsNotification();
  virtual ~PBGnssMeasurementsNotification();

  PBGnssMeasurementsNotification(const PBGnssMeasurementsNotification& from);

  inline PBGnssMeasurementsNotification& operator=(const PBGnssMeasurementsNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssMeasurementsNotification& default_instance();

  static inline const PBGnssMeasurementsNotification* internal_default_instance() {
    return reinterpret_cast<const PBGnssMeasurementsNotification*>(
               &_PBGnssMeasurementsNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PBGnssMeasurementsNotification* other);

  // implements Message ----------------------------------------------

  inline PBGnssMeasurementsNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssMeasurementsNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssMeasurementsNotification& from);
  void MergeFrom(const PBGnssMeasurementsNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssMeasurementsNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGnssMeasurementsData measurements = 1;
  int measurements_size() const;
  void clear_measurements();
  static const int kMeasurementsFieldNumber = 1;
  const ::PBGnssMeasurementsData& measurements(int index) const;
  ::PBGnssMeasurementsData* mutable_measurements(int index);
  ::PBGnssMeasurementsData* add_measurements();
  ::google::protobuf::RepeatedPtrField< ::PBGnssMeasurementsData >*
      mutable_measurements();
  const ::google::protobuf::RepeatedPtrField< ::PBGnssMeasurementsData >&
      measurements() const;

  // .PBGnssMeasurementsClock clock = 2;
  bool has_clock() const;
  void clear_clock();
  static const int kClockFieldNumber = 2;
  const ::PBGnssMeasurementsClock& clock() const;
  ::PBGnssMeasurementsClock* mutable_clock();
  ::PBGnssMeasurementsClock* release_clock();
  void set_allocated_clock(::PBGnssMeasurementsClock* clock);

  // @@protoc_insertion_point(class_scope:PBGnssMeasurementsNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBGnssMeasurementsData > measurements_;
  ::PBGnssMeasurementsClock* clock_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocApiGnssSystemTimeStructType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocApiGnssSystemTimeStructType) */ {
 public:
  PBLocApiGnssSystemTimeStructType();
  virtual ~PBLocApiGnssSystemTimeStructType();

  PBLocApiGnssSystemTimeStructType(const PBLocApiGnssSystemTimeStructType& from);

  inline PBLocApiGnssSystemTimeStructType& operator=(const PBLocApiGnssSystemTimeStructType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocApiGnssSystemTimeStructType& default_instance();

  static inline const PBLocApiGnssSystemTimeStructType* internal_default_instance() {
    return reinterpret_cast<const PBLocApiGnssSystemTimeStructType*>(
               &_PBLocApiGnssSystemTimeStructType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(PBLocApiGnssSystemTimeStructType* other);

  // implements Message ----------------------------------------------

  inline PBLocApiGnssSystemTimeStructType* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocApiGnssSystemTimeStructType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocApiGnssSystemTimeStructType& from);
  void MergeFrom(const PBLocApiGnssSystemTimeStructType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocApiGnssSystemTimeStructType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 validityMask = 1;
  void clear_validitymask();
  static const int kValidityMaskFieldNumber = 1;
  ::google::protobuf::uint32 validitymask() const;
  void set_validitymask(::google::protobuf::uint32 value);

  // uint32 systemWeek = 2;
  void clear_systemweek();
  static const int kSystemWeekFieldNumber = 2;
  ::google::protobuf::uint32 systemweek() const;
  void set_systemweek(::google::protobuf::uint32 value);

  // uint32 systemMsec = 3;
  void clear_systemmsec();
  static const int kSystemMsecFieldNumber = 3;
  ::google::protobuf::uint32 systemmsec() const;
  void set_systemmsec(::google::protobuf::uint32 value);

  // float systemClkTimeBiasMs = 4;
  void clear_systemclktimebiasms();
  static const int kSystemClkTimeBiasMsFieldNumber = 4;
  float systemclktimebiasms() const;
  void set_systemclktimebiasms(float value);

  // float systemClkTimeBiasUncMs = 5;
  void clear_systemclktimebiasuncms();
  static const int kSystemClkTimeBiasUncMsFieldNumber = 5;
  float systemclktimebiasuncms() const;
  void set_systemclktimebiasuncms(float value);

  // uint32 refFCount = 6;
  void clear_reffcount();
  static const int kRefFCountFieldNumber = 6;
  ::google::protobuf::uint32 reffcount() const;
  void set_reffcount(::google::protobuf::uint32 value);

  // uint32 numClockResets = 7;
  void clear_numclockresets();
  static const int kNumClockResetsFieldNumber = 7;
  ::google::protobuf::uint32 numclockresets() const;
  void set_numclockresets(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLocApiGnssSystemTimeStructType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 validitymask_;
  ::google::protobuf::uint32 systemweek_;
  ::google::protobuf::uint32 systemmsec_;
  float systemclktimebiasms_;
  float systemclktimebiasuncms_;
  ::google::protobuf::uint32 reffcount_;
  ::google::protobuf::uint32 numclockresets_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocApiGnssGloTimeStructType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocApiGnssGloTimeStructType) */ {
 public:
  PBLocApiGnssGloTimeStructType();
  virtual ~PBLocApiGnssGloTimeStructType();

  PBLocApiGnssGloTimeStructType(const PBLocApiGnssGloTimeStructType& from);

  inline PBLocApiGnssGloTimeStructType& operator=(const PBLocApiGnssGloTimeStructType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocApiGnssGloTimeStructType& default_instance();

  static inline const PBLocApiGnssGloTimeStructType* internal_default_instance() {
    return reinterpret_cast<const PBLocApiGnssGloTimeStructType*>(
               &_PBLocApiGnssGloTimeStructType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(PBLocApiGnssGloTimeStructType* other);

  // implements Message ----------------------------------------------

  inline PBLocApiGnssGloTimeStructType* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocApiGnssGloTimeStructType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocApiGnssGloTimeStructType& from);
  void MergeFrom(const PBLocApiGnssGloTimeStructType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocApiGnssGloTimeStructType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 validityMask = 1;
  void clear_validitymask();
  static const int kValidityMaskFieldNumber = 1;
  ::google::protobuf::uint32 validitymask() const;
  void set_validitymask(::google::protobuf::uint32 value);

  // uint32 gloFourYear = 2;
  void clear_glofouryear();
  static const int kGloFourYearFieldNumber = 2;
  ::google::protobuf::uint32 glofouryear() const;
  void set_glofouryear(::google::protobuf::uint32 value);

  // uint32 gloDays = 3;
  void clear_glodays();
  static const int kGloDaysFieldNumber = 3;
  ::google::protobuf::uint32 glodays() const;
  void set_glodays(::google::protobuf::uint32 value);

  // uint32 gloMsec = 4;
  void clear_glomsec();
  static const int kGloMsecFieldNumber = 4;
  ::google::protobuf::uint32 glomsec() const;
  void set_glomsec(::google::protobuf::uint32 value);

  // float gloClkTimeBias = 5;
  void clear_gloclktimebias();
  static const int kGloClkTimeBiasFieldNumber = 5;
  float gloclktimebias() const;
  void set_gloclktimebias(float value);

  // float gloClkTimeUncMs = 6;
  void clear_gloclktimeuncms();
  static const int kGloClkTimeUncMsFieldNumber = 6;
  float gloclktimeuncms() const;
  void set_gloclktimeuncms(float value);

  // uint32 refFCount = 7;
  void clear_reffcount();
  static const int kRefFCountFieldNumber = 7;
  ::google::protobuf::uint32 reffcount() const;
  void set_reffcount(::google::protobuf::uint32 value);

  // uint32 numClockResets = 8;
  void clear_numclockresets();
  static const int kNumClockResetsFieldNumber = 8;
  ::google::protobuf::uint32 numclockresets() const;
  void set_numclockresets(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLocApiGnssGloTimeStructType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 validitymask_;
  ::google::protobuf::uint32 glofouryear_;
  ::google::protobuf::uint32 glodays_;
  ::google::protobuf::uint32 glomsec_;
  float gloclktimebias_;
  float gloclktimeuncms_;
  ::google::protobuf::uint32 reffcount_;
  ::google::protobuf::uint32 numclockresets_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLLAInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLLAInfo) */ {
 public:
  PBLLAInfo();
  virtual ~PBLLAInfo();

  PBLLAInfo(const PBLLAInfo& from);

  inline PBLLAInfo& operator=(const PBLLAInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLLAInfo& default_instance();

  static inline const PBLLAInfo* internal_default_instance() {
    return reinterpret_cast<const PBLLAInfo*>(
               &_PBLLAInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(PBLLAInfo* other);

  // implements Message ----------------------------------------------

  inline PBLLAInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLLAInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLLAInfo& from);
  void MergeFrom(const PBLLAInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLLAInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double latitude = 1;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  double latitude() const;
  void set_latitude(double value);

  // double longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // float altitude = 3;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 3;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:PBLLAInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double latitude_;
  double longitude_;
  float altitude_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLeapSecondSystemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLeapSecondSystemInfo) */ {
 public:
  PBLeapSecondSystemInfo();
  virtual ~PBLeapSecondSystemInfo();

  PBLeapSecondSystemInfo(const PBLeapSecondSystemInfo& from);

  inline PBLeapSecondSystemInfo& operator=(const PBLeapSecondSystemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLeapSecondSystemInfo& default_instance();

  static inline const PBLeapSecondSystemInfo* internal_default_instance() {
    return reinterpret_cast<const PBLeapSecondSystemInfo*>(
               &_PBLeapSecondSystemInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PBLeapSecondSystemInfo* other);

  // implements Message ----------------------------------------------

  inline PBLeapSecondSystemInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLeapSecondSystemInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLeapSecondSystemInfo& from);
  void MergeFrom(const PBLeapSecondSystemInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLeapSecondSystemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLeapSecondChangeInfo leapSecondChangeInfo = 3;
  bool has_leapsecondchangeinfo() const;
  void clear_leapsecondchangeinfo();
  static const int kLeapSecondChangeInfoFieldNumber = 3;
  const ::PBLeapSecondChangeInfo& leapsecondchangeinfo() const;
  ::PBLeapSecondChangeInfo* mutable_leapsecondchangeinfo();
  ::PBLeapSecondChangeInfo* release_leapsecondchangeinfo();
  void set_allocated_leapsecondchangeinfo(::PBLeapSecondChangeInfo* leapsecondchangeinfo);

  // uint32 leapSecondInfoMask = 1;
  void clear_leapsecondinfomask();
  static const int kLeapSecondInfoMaskFieldNumber = 1;
  ::google::protobuf::uint32 leapsecondinfomask() const;
  void set_leapsecondinfomask(::google::protobuf::uint32 value);

  // uint32 leapSecondCurrent = 2;
  void clear_leapsecondcurrent();
  static const int kLeapSecondCurrentFieldNumber = 2;
  ::google::protobuf::uint32 leapsecondcurrent() const;
  void set_leapsecondcurrent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLeapSecondSystemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLeapSecondChangeInfo* leapsecondchangeinfo_;
  ::google::protobuf::uint32 leapsecondinfomask_;
  ::google::protobuf::uint32 leapsecondcurrent_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLeapSecondChangeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLeapSecondChangeInfo) */ {
 public:
  PBLeapSecondChangeInfo();
  virtual ~PBLeapSecondChangeInfo();

  PBLeapSecondChangeInfo(const PBLeapSecondChangeInfo& from);

  inline PBLeapSecondChangeInfo& operator=(const PBLeapSecondChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLeapSecondChangeInfo& default_instance();

  static inline const PBLeapSecondChangeInfo* internal_default_instance() {
    return reinterpret_cast<const PBLeapSecondChangeInfo*>(
               &_PBLeapSecondChangeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(PBLeapSecondChangeInfo* other);

  // implements Message ----------------------------------------------

  inline PBLeapSecondChangeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLeapSecondChangeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLeapSecondChangeInfo& from);
  void MergeFrom(const PBLeapSecondChangeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLeapSecondChangeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLocApiGnssSystemTimeStructType gpsTimestampLsChange = 1;
  bool has_gpstimestamplschange() const;
  void clear_gpstimestamplschange();
  static const int kGpsTimestampLsChangeFieldNumber = 1;
  const ::PBLocApiGnssSystemTimeStructType& gpstimestamplschange() const;
  ::PBLocApiGnssSystemTimeStructType* mutable_gpstimestamplschange();
  ::PBLocApiGnssSystemTimeStructType* release_gpstimestamplschange();
  void set_allocated_gpstimestamplschange(::PBLocApiGnssSystemTimeStructType* gpstimestamplschange);

  // uint32 leapSecondsBeforeChange = 2;
  void clear_leapsecondsbeforechange();
  static const int kLeapSecondsBeforeChangeFieldNumber = 2;
  ::google::protobuf::uint32 leapsecondsbeforechange() const;
  void set_leapsecondsbeforechange(::google::protobuf::uint32 value);

  // uint32 leapSecondsAfterChange = 3;
  void clear_leapsecondsafterchange();
  static const int kLeapSecondsAfterChangeFieldNumber = 3;
  ::google::protobuf::uint32 leapsecondsafterchange() const;
  void set_leapsecondsafterchange(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLeapSecondChangeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLocApiGnssSystemTimeStructType* gpstimestamplschange_;
  ::google::protobuf::uint32 leapsecondsbeforechange_;
  ::google::protobuf::uint32 leapsecondsafterchange_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLocationSystemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLocationSystemInfo) */ {
 public:
  PBLocationSystemInfo();
  virtual ~PBLocationSystemInfo();

  PBLocationSystemInfo(const PBLocationSystemInfo& from);

  inline PBLocationSystemInfo& operator=(const PBLocationSystemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocationSystemInfo& default_instance();

  static inline const PBLocationSystemInfo* internal_default_instance() {
    return reinterpret_cast<const PBLocationSystemInfo*>(
               &_PBLocationSystemInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(PBLocationSystemInfo* other);

  // implements Message ----------------------------------------------

  inline PBLocationSystemInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLocationSystemInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLocationSystemInfo& from);
  void MergeFrom(const PBLocationSystemInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLocationSystemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLeapSecondSystemInfo leapSecondSysInfo = 2;
  bool has_leapsecondsysinfo() const;
  void clear_leapsecondsysinfo();
  static const int kLeapSecondSysInfoFieldNumber = 2;
  const ::PBLeapSecondSystemInfo& leapsecondsysinfo() const;
  ::PBLeapSecondSystemInfo* mutable_leapsecondsysinfo();
  ::PBLeapSecondSystemInfo* release_leapsecondsysinfo();
  void set_allocated_leapsecondsysinfo(::PBLeapSecondSystemInfo* leapsecondsysinfo);

  // uint32 systemInfoMask = 1;
  void clear_systeminfomask();
  static const int kSystemInfoMaskFieldNumber = 1;
  ::google::protobuf::uint32 systeminfomask() const;
  void set_systeminfomask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLocationSystemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLeapSecondSystemInfo* leapsecondsysinfo_;
  ::google::protobuf::uint32 systeminfomask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssConfigRobustLocationVersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssConfigRobustLocationVersion) */ {
 public:
  PBGnssConfigRobustLocationVersion();
  virtual ~PBGnssConfigRobustLocationVersion();

  PBGnssConfigRobustLocationVersion(const PBGnssConfigRobustLocationVersion& from);

  inline PBGnssConfigRobustLocationVersion& operator=(const PBGnssConfigRobustLocationVersion& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssConfigRobustLocationVersion& default_instance();

  static inline const PBGnssConfigRobustLocationVersion* internal_default_instance() {
    return reinterpret_cast<const PBGnssConfigRobustLocationVersion*>(
               &_PBGnssConfigRobustLocationVersion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(PBGnssConfigRobustLocationVersion* other);

  // implements Message ----------------------------------------------

  inline PBGnssConfigRobustLocationVersion* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssConfigRobustLocationVersion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssConfigRobustLocationVersion& from);
  void MergeFrom(const PBGnssConfigRobustLocationVersion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssConfigRobustLocationVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 major = 1;
  void clear_major();
  static const int kMajorFieldNumber = 1;
  ::google::protobuf::uint32 major() const;
  void set_major(::google::protobuf::uint32 value);

  // uint32 minor = 2;
  void clear_minor();
  static const int kMinorFieldNumber = 2;
  ::google::protobuf::uint32 minor() const;
  void set_minor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBGnssConfigRobustLocationVersion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 major_;
  ::google::protobuf::uint32 minor_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssConfigRobustLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssConfigRobustLocation) */ {
 public:
  PBGnssConfigRobustLocation();
  virtual ~PBGnssConfigRobustLocation();

  PBGnssConfigRobustLocation(const PBGnssConfigRobustLocation& from);

  inline PBGnssConfigRobustLocation& operator=(const PBGnssConfigRobustLocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssConfigRobustLocation& default_instance();

  static inline const PBGnssConfigRobustLocation* internal_default_instance() {
    return reinterpret_cast<const PBGnssConfigRobustLocation*>(
               &_PBGnssConfigRobustLocation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(PBGnssConfigRobustLocation* other);

  // implements Message ----------------------------------------------

  inline PBGnssConfigRobustLocation* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssConfigRobustLocation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssConfigRobustLocation& from);
  void MergeFrom(const PBGnssConfigRobustLocation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssConfigRobustLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBGnssConfigRobustLocationVersion version = 4;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  const ::PBGnssConfigRobustLocationVersion& version() const;
  ::PBGnssConfigRobustLocationVersion* mutable_version();
  ::PBGnssConfigRobustLocationVersion* release_version();
  void set_allocated_version(::PBGnssConfigRobustLocationVersion* version);

  // uint32 validMask = 1;
  void clear_validmask();
  static const int kValidMaskFieldNumber = 1;
  ::google::protobuf::uint32 validmask() const;
  void set_validmask(::google::protobuf::uint32 value);

  // bool enabled = 2;
  void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  bool enabled() const;
  void set_enabled(bool value);

  // bool enabledForE911 = 3;
  void clear_enabledfore911();
  static const int kEnabledForE911FieldNumber = 3;
  bool enabledfore911() const;
  void set_enabledfore911(bool value);

  // @@protoc_insertion_point(class_scope:PBGnssConfigRobustLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBGnssConfigRobustLocationVersion* version_;
  ::google::protobuf::uint32 validmask_;
  bool enabled_;
  bool enabledfore911_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvTypeConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvTypeConfig) */ {
 public:
  PBGnssSvTypeConfig();
  virtual ~PBGnssSvTypeConfig();

  PBGnssSvTypeConfig(const PBGnssSvTypeConfig& from);

  inline PBGnssSvTypeConfig& operator=(const PBGnssSvTypeConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvTypeConfig& default_instance();

  static inline const PBGnssSvTypeConfig* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvTypeConfig*>(
               &_PBGnssSvTypeConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(PBGnssSvTypeConfig* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvTypeConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvTypeConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvTypeConfig& from);
  void MergeFrom(const PBGnssSvTypeConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvTypeConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 enabledSvTypesMask = 1;
  void clear_enabledsvtypesmask();
  static const int kEnabledSvTypesMaskFieldNumber = 1;
  ::google::protobuf::uint64 enabledsvtypesmask() const;
  void set_enabledsvtypesmask(::google::protobuf::uint64 value);

  // uint64 blacklistedSvTypesMask = 2;
  void clear_blacklistedsvtypesmask();
  static const int kBlacklistedSvTypesMaskFieldNumber = 2;
  ::google::protobuf::uint64 blacklistedsvtypesmask() const;
  void set_blacklistedsvtypesmask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PBGnssSvTypeConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 enabledsvtypesmask_;
  ::google::protobuf::uint64 blacklistedsvtypesmask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBGnssSvIdConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBGnssSvIdConfig) */ {
 public:
  PBGnssSvIdConfig();
  virtual ~PBGnssSvIdConfig();

  PBGnssSvIdConfig(const PBGnssSvIdConfig& from);

  inline PBGnssSvIdConfig& operator=(const PBGnssSvIdConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGnssSvIdConfig& default_instance();

  static inline const PBGnssSvIdConfig* internal_default_instance() {
    return reinterpret_cast<const PBGnssSvIdConfig*>(
               &_PBGnssSvIdConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(PBGnssSvIdConfig* other);

  // implements Message ----------------------------------------------

  inline PBGnssSvIdConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  PBGnssSvIdConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBGnssSvIdConfig& from);
  void MergeFrom(const PBGnssSvIdConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBGnssSvIdConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gloBlacklistSvMask = 1;
  void clear_globlacklistsvmask();
  static const int kGloBlacklistSvMaskFieldNumber = 1;
  ::google::protobuf::uint64 globlacklistsvmask() const;
  void set_globlacklistsvmask(::google::protobuf::uint64 value);

  // uint64 bdsBlacklistSvMask = 2;
  void clear_bdsblacklistsvmask();
  static const int kBdsBlacklistSvMaskFieldNumber = 2;
  ::google::protobuf::uint64 bdsblacklistsvmask() const;
  void set_bdsblacklistsvmask(::google::protobuf::uint64 value);

  // uint64 qzssBlacklistSvMask = 3;
  void clear_qzssblacklistsvmask();
  static const int kQzssBlacklistSvMaskFieldNumber = 3;
  ::google::protobuf::uint64 qzssblacklistsvmask() const;
  void set_qzssblacklistsvmask(::google::protobuf::uint64 value);

  // uint64 galBlacklistSvMask = 4;
  void clear_galblacklistsvmask();
  static const int kGalBlacklistSvMaskFieldNumber = 4;
  ::google::protobuf::uint64 galblacklistsvmask() const;
  void set_galblacklistsvmask(::google::protobuf::uint64 value);

  // uint64 sbasBlacklistSvMask = 5;
  void clear_sbasblacklistsvmask();
  static const int kSbasBlacklistSvMaskFieldNumber = 5;
  ::google::protobuf::uint64 sbasblacklistsvmask() const;
  void set_sbasblacklistsvmask(::google::protobuf::uint64 value);

  // uint64 navicBlacklistSvMask = 6;
  void clear_navicblacklistsvmask();
  static const int kNavicBlacklistSvMaskFieldNumber = 6;
  ::google::protobuf::uint64 navicblacklistsvmask() const;
  void set_navicblacklistsvmask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PBGnssSvIdConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 globlacklistsvmask_;
  ::google::protobuf::uint64 bdsblacklistsvmask_;
  ::google::protobuf::uint64 qzssblacklistsvmask_;
  ::google::protobuf::uint64 galblacklistsvmask_;
  ::google::protobuf::uint64 sbasblacklistsvmask_;
  ::google::protobuf::uint64 navicblacklistsvmask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLIALeverArmParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLIALeverArmParams) */ {
 public:
  PBLIALeverArmParams();
  virtual ~PBLIALeverArmParams();

  PBLIALeverArmParams(const PBLIALeverArmParams& from);

  inline PBLIALeverArmParams& operator=(const PBLIALeverArmParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLIALeverArmParams& default_instance();

  static inline const PBLIALeverArmParams* internal_default_instance() {
    return reinterpret_cast<const PBLIALeverArmParams*>(
               &_PBLIALeverArmParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(PBLIALeverArmParams* other);

  // implements Message ----------------------------------------------

  inline PBLIALeverArmParams* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLIALeverArmParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLIALeverArmParams& from);
  void MergeFrom(const PBLIALeverArmParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLIALeverArmParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float forwardOffsetMeters = 1;
  void clear_forwardoffsetmeters();
  static const int kForwardOffsetMetersFieldNumber = 1;
  float forwardoffsetmeters() const;
  void set_forwardoffsetmeters(float value);

  // float sidewaysOffsetMeters = 2;
  void clear_sidewaysoffsetmeters();
  static const int kSidewaysOffsetMetersFieldNumber = 2;
  float sidewaysoffsetmeters() const;
  void set_sidewaysoffsetmeters(float value);

  // float upOffsetMeters = 3;
  void clear_upoffsetmeters();
  static const int kUpOffsetMetersFieldNumber = 3;
  float upoffsetmeters() const;
  void set_upoffsetmeters(float value);

  // @@protoc_insertion_point(class_scope:PBLIALeverArmParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float forwardoffsetmeters_;
  float sidewaysoffsetmeters_;
  float upoffsetmeters_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLIALeverArmConfigInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLIALeverArmConfigInfo) */ {
 public:
  PBLIALeverArmConfigInfo();
  virtual ~PBLIALeverArmConfigInfo();

  PBLIALeverArmConfigInfo(const PBLIALeverArmConfigInfo& from);

  inline PBLIALeverArmConfigInfo& operator=(const PBLIALeverArmConfigInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLIALeverArmConfigInfo& default_instance();

  static inline const PBLIALeverArmConfigInfo* internal_default_instance() {
    return reinterpret_cast<const PBLIALeverArmConfigInfo*>(
               &_PBLIALeverArmConfigInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(PBLIALeverArmConfigInfo* other);

  // implements Message ----------------------------------------------

  inline PBLIALeverArmConfigInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLIALeverArmConfigInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLIALeverArmConfigInfo& from);
  void MergeFrom(const PBLIALeverArmConfigInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLIALeverArmConfigInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLIALeverArmParams gnssToVRP = 2;
  bool has_gnsstovrp() const;
  void clear_gnsstovrp();
  static const int kGnssToVRPFieldNumber = 2;
  const ::PBLIALeverArmParams& gnsstovrp() const;
  ::PBLIALeverArmParams* mutable_gnsstovrp();
  ::PBLIALeverArmParams* release_gnsstovrp();
  void set_allocated_gnsstovrp(::PBLIALeverArmParams* gnsstovrp);

  // .PBLIALeverArmParams drImuToGnss = 3;
  bool has_drimutognss() const;
  void clear_drimutognss();
  static const int kDrImuToGnssFieldNumber = 3;
  const ::PBLIALeverArmParams& drimutognss() const;
  ::PBLIALeverArmParams* mutable_drimutognss();
  ::PBLIALeverArmParams* release_drimutognss();
  void set_allocated_drimutognss(::PBLIALeverArmParams* drimutognss);

  // .PBLIALeverArmParams veppImuToGnss = 4;
  bool has_veppimutognss() const;
  void clear_veppimutognss();
  static const int kVeppImuToGnssFieldNumber = 4;
  const ::PBLIALeverArmParams& veppimutognss() const;
  ::PBLIALeverArmParams* mutable_veppimutognss();
  ::PBLIALeverArmParams* release_veppimutognss();
  void set_allocated_veppimutognss(::PBLIALeverArmParams* veppimutognss);

  // uint32 leverArmValidMask = 1;
  void clear_leverarmvalidmask();
  static const int kLeverArmValidMaskFieldNumber = 1;
  ::google::protobuf::uint32 leverarmvalidmask() const;
  void set_leverarmvalidmask(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLIALeverArmConfigInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLIALeverArmParams* gnsstovrp_;
  ::PBLIALeverArmParams* drimutognss_;
  ::PBLIALeverArmParams* veppimutognss_;
  ::google::protobuf::uint32 leverarmvalidmask_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLIABodyToSensorMountParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLIABodyToSensorMountParams) */ {
 public:
  PBLIABodyToSensorMountParams();
  virtual ~PBLIABodyToSensorMountParams();

  PBLIABodyToSensorMountParams(const PBLIABodyToSensorMountParams& from);

  inline PBLIABodyToSensorMountParams& operator=(const PBLIABodyToSensorMountParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLIABodyToSensorMountParams& default_instance();

  static inline const PBLIABodyToSensorMountParams* internal_default_instance() {
    return reinterpret_cast<const PBLIABodyToSensorMountParams*>(
               &_PBLIABodyToSensorMountParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(PBLIABodyToSensorMountParams* other);

  // implements Message ----------------------------------------------

  inline PBLIABodyToSensorMountParams* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLIABodyToSensorMountParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLIABodyToSensorMountParams& from);
  void MergeFrom(const PBLIABodyToSensorMountParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLIABodyToSensorMountParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float rollOffset = 1;
  void clear_rolloffset();
  static const int kRollOffsetFieldNumber = 1;
  float rolloffset() const;
  void set_rolloffset(float value);

  // float yawOffset = 2;
  void clear_yawoffset();
  static const int kYawOffsetFieldNumber = 2;
  float yawoffset() const;
  void set_yawoffset(float value);

  // float pitchOffset = 3;
  void clear_pitchoffset();
  static const int kPitchOffsetFieldNumber = 3;
  float pitchoffset() const;
  void set_pitchoffset(float value);

  // float offsetUnc = 4;
  void clear_offsetunc();
  static const int kOffsetUncFieldNumber = 4;
  float offsetunc() const;
  void set_offsetunc(float value);

  // @@protoc_insertion_point(class_scope:PBLIABodyToSensorMountParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float rolloffset_;
  float yawoffset_;
  float pitchoffset_;
  float offsetunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBDeadReckoningEngineConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBDeadReckoningEngineConfig) */ {
 public:
  PBDeadReckoningEngineConfig();
  virtual ~PBDeadReckoningEngineConfig();

  PBDeadReckoningEngineConfig(const PBDeadReckoningEngineConfig& from);

  inline PBDeadReckoningEngineConfig& operator=(const PBDeadReckoningEngineConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDeadReckoningEngineConfig& default_instance();

  static inline const PBDeadReckoningEngineConfig* internal_default_instance() {
    return reinterpret_cast<const PBDeadReckoningEngineConfig*>(
               &_PBDeadReckoningEngineConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(PBDeadReckoningEngineConfig* other);

  // implements Message ----------------------------------------------

  inline PBDeadReckoningEngineConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  PBDeadReckoningEngineConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBDeadReckoningEngineConfig& from);
  void MergeFrom(const PBDeadReckoningEngineConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBDeadReckoningEngineConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PBLIABodyToSensorMountParams bodyToSensorMountParams = 2;
  bool has_bodytosensormountparams() const;
  void clear_bodytosensormountparams();
  static const int kBodyToSensorMountParamsFieldNumber = 2;
  const ::PBLIABodyToSensorMountParams& bodytosensormountparams() const;
  ::PBLIABodyToSensorMountParams* mutable_bodytosensormountparams();
  ::PBLIABodyToSensorMountParams* release_bodytosensormountparams();
  void set_allocated_bodytosensormountparams(::PBLIABodyToSensorMountParams* bodytosensormountparams);

  // uint64 validMask = 1;
  void clear_validmask();
  static const int kValidMaskFieldNumber = 1;
  ::google::protobuf::uint64 validmask() const;
  void set_validmask(::google::protobuf::uint64 value);

  // float vehicleSpeedScaleFactor = 3;
  void clear_vehiclespeedscalefactor();
  static const int kVehicleSpeedScaleFactorFieldNumber = 3;
  float vehiclespeedscalefactor() const;
  void set_vehiclespeedscalefactor(float value);

  // float vehicleSpeedScaleFactorUnc = 4;
  void clear_vehiclespeedscalefactorunc();
  static const int kVehicleSpeedScaleFactorUncFieldNumber = 4;
  float vehiclespeedscalefactorunc() const;
  void set_vehiclespeedscalefactorunc(float value);

  // float gyroScaleFactor = 5;
  void clear_gyroscalefactor();
  static const int kGyroScaleFactorFieldNumber = 5;
  float gyroscalefactor() const;
  void set_gyroscalefactor(float value);

  // float gyroScaleFactorUnc = 6;
  void clear_gyroscalefactorunc();
  static const int kGyroScaleFactorUncFieldNumber = 6;
  float gyroscalefactorunc() const;
  void set_gyroscalefactorunc(float value);

  // @@protoc_insertion_point(class_scope:PBDeadReckoningEngineConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBLIABodyToSensorMountParams* bodytosensormountparams_;
  ::google::protobuf::uint64 validmask_;
  float vehiclespeedscalefactor_;
  float vehiclespeedscalefactorunc_;
  float gyroscalefactor_;
  float gyroscalefactorunc_;
  mutable int _cached_size_;
  friend struct protobuf_LocationApiDataTypes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocation

// uint32 flags = 1;
inline void PBLocation::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 PBLocation::flags() const {
  // @@protoc_insertion_point(field_get:PBLocation.flags)
  return flags_;
}
inline void PBLocation::set_flags(::google::protobuf::uint32 value) {

  flags_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.flags)
}

// uint64 timestamp = 2;
inline void PBLocation::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLocation::timestamp() const {
  // @@protoc_insertion_point(field_get:PBLocation.timestamp)
  return timestamp_;
}
inline void PBLocation::set_timestamp(::google::protobuf::uint64 value) {

  timestamp_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.timestamp)
}

// double latitude = 3;
inline void PBLocation::clear_latitude() {
  latitude_ = 0;
}
inline double PBLocation::latitude() const {
  // @@protoc_insertion_point(field_get:PBLocation.latitude)
  return latitude_;
}
inline void PBLocation::set_latitude(double value) {

  latitude_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.latitude)
}

// double longitude = 4;
inline void PBLocation::clear_longitude() {
  longitude_ = 0;
}
inline double PBLocation::longitude() const {
  // @@protoc_insertion_point(field_get:PBLocation.longitude)
  return longitude_;
}
inline void PBLocation::set_longitude(double value) {

  longitude_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.longitude)
}

// double altitude = 5;
inline void PBLocation::clear_altitude() {
  altitude_ = 0;
}
inline double PBLocation::altitude() const {
  // @@protoc_insertion_point(field_get:PBLocation.altitude)
  return altitude_;
}
inline void PBLocation::set_altitude(double value) {

  altitude_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.altitude)
}

// float speed = 6;
inline void PBLocation::clear_speed() {
  speed_ = 0;
}
inline float PBLocation::speed() const {
  // @@protoc_insertion_point(field_get:PBLocation.speed)
  return speed_;
}
inline void PBLocation::set_speed(float value) {

  speed_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.speed)
}

// float bearing = 7;
inline void PBLocation::clear_bearing() {
  bearing_ = 0;
}
inline float PBLocation::bearing() const {
  // @@protoc_insertion_point(field_get:PBLocation.bearing)
  return bearing_;
}
inline void PBLocation::set_bearing(float value) {

  bearing_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.bearing)
}

// float horizontalAccuracy = 8;
inline void PBLocation::clear_horizontalaccuracy() {
  horizontalaccuracy_ = 0;
}
inline float PBLocation::horizontalaccuracy() const {
  // @@protoc_insertion_point(field_get:PBLocation.horizontalAccuracy)
  return horizontalaccuracy_;
}
inline void PBLocation::set_horizontalaccuracy(float value) {

  horizontalaccuracy_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.horizontalAccuracy)
}

// float verticalAccuracy = 9;
inline void PBLocation::clear_verticalaccuracy() {
  verticalaccuracy_ = 0;
}
inline float PBLocation::verticalaccuracy() const {
  // @@protoc_insertion_point(field_get:PBLocation.verticalAccuracy)
  return verticalaccuracy_;
}
inline void PBLocation::set_verticalaccuracy(float value) {

  verticalaccuracy_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.verticalAccuracy)
}

// float speedAccuracy = 10;
inline void PBLocation::clear_speedaccuracy() {
  speedaccuracy_ = 0;
}
inline float PBLocation::speedaccuracy() const {
  // @@protoc_insertion_point(field_get:PBLocation.speedAccuracy)
  return speedaccuracy_;
}
inline void PBLocation::set_speedaccuracy(float value) {

  speedaccuracy_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.speedAccuracy)
}

// float bearingAccuracy = 11;
inline void PBLocation::clear_bearingaccuracy() {
  bearingaccuracy_ = 0;
}
inline float PBLocation::bearingaccuracy() const {
  // @@protoc_insertion_point(field_get:PBLocation.bearingAccuracy)
  return bearingaccuracy_;
}
inline void PBLocation::set_bearingaccuracy(float value) {

  bearingaccuracy_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.bearingAccuracy)
}

// uint32 techMask = 12;
inline void PBLocation::clear_techmask() {
  techmask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocation::techmask() const {
  // @@protoc_insertion_point(field_get:PBLocation.techMask)
  return techmask_;
}
inline void PBLocation::set_techmask(::google::protobuf::uint32 value) {

  techmask_ = value;
  // @@protoc_insertion_point(field_set:PBLocation.techMask)
}

// -------------------------------------------------------------------

// PBLocationOptions

// uint32 minInterval = 1;
inline void PBLocationOptions::clear_mininterval() {
  mininterval_ = 0u;
}
inline ::google::protobuf::uint32 PBLocationOptions::mininterval() const {
  // @@protoc_insertion_point(field_get:PBLocationOptions.minInterval)
  return mininterval_;
}
inline void PBLocationOptions::set_mininterval(::google::protobuf::uint32 value) {

  mininterval_ = value;
  // @@protoc_insertion_point(field_set:PBLocationOptions.minInterval)
}

// uint32 minDistance = 2;
inline void PBLocationOptions::clear_mindistance() {
  mindistance_ = 0u;
}
inline ::google::protobuf::uint32 PBLocationOptions::mindistance() const {
  // @@protoc_insertion_point(field_get:PBLocationOptions.minDistance)
  return mindistance_;
}
inline void PBLocationOptions::set_mindistance(::google::protobuf::uint32 value) {

  mindistance_ = value;
  // @@protoc_insertion_point(field_set:PBLocationOptions.minDistance)
}

// .PBGnssSuplMode mode = 3;
inline void PBLocationOptions::clear_mode() {
  mode_ = 0;
}
inline ::PBGnssSuplMode PBLocationOptions::mode() const {
  // @@protoc_insertion_point(field_get:PBLocationOptions.mode)
  return static_cast< ::PBGnssSuplMode >(mode_);
}
inline void PBLocationOptions::set_mode(::PBGnssSuplMode value) {

  mode_ = value;
  // @@protoc_insertion_point(field_set:PBLocationOptions.mode)
}

// uint32 locReqEngTypeMask = 4;
inline void PBLocationOptions::clear_locreqengtypemask() {
  locreqengtypemask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocationOptions::locreqengtypemask() const {
  // @@protoc_insertion_point(field_get:PBLocationOptions.locReqEngTypeMask)
  return locreqengtypemask_;
}
inline void PBLocationOptions::set_locreqengtypemask(::google::protobuf::uint32 value) {

  locreqengtypemask_ = value;
  // @@protoc_insertion_point(field_set:PBLocationOptions.locReqEngTypeMask)
}

// -------------------------------------------------------------------

// PBAidingData

// bool deleteAll = 1;
inline void PBAidingData::clear_deleteall() {
  deleteall_ = false;
}
inline bool PBAidingData::deleteall() const {
  // @@protoc_insertion_point(field_get:PBAidingData.deleteAll)
  return deleteall_;
}
inline void PBAidingData::set_deleteall(bool value) {

  deleteall_ = value;
  // @@protoc_insertion_point(field_set:PBAidingData.deleteAll)
}

// uint32 gnssAidingDataSvMask = 2;
inline void PBAidingData::clear_gnssaidingdatasvmask() {
  gnssaidingdatasvmask_ = 0u;
}
inline ::google::protobuf::uint32 PBAidingData::gnssaidingdatasvmask() const {
  // @@protoc_insertion_point(field_get:PBAidingData.gnssAidingDataSvMask)
  return gnssaidingdatasvmask_;
}
inline void PBAidingData::set_gnssaidingdatasvmask(::google::protobuf::uint32 value) {

  gnssaidingdatasvmask_ = value;
  // @@protoc_insertion_point(field_set:PBAidingData.gnssAidingDataSvMask)
}

// uint32 dreAidingDataMask = 3;
inline void PBAidingData::clear_dreaidingdatamask() {
  dreaidingdatamask_ = 0u;
}
inline ::google::protobuf::uint32 PBAidingData::dreaidingdatamask() const {
  // @@protoc_insertion_point(field_get:PBAidingData.dreAidingDataMask)
  return dreaidingdatamask_;
}
inline void PBAidingData::set_dreaidingdatamask(::google::protobuf::uint32 value) {

  dreaidingdatamask_ = value;
  // @@protoc_insertion_point(field_set:PBAidingData.dreAidingDataMask)
}

// uint32 posEngineMask = 4;
inline void PBAidingData::clear_posenginemask() {
  posenginemask_ = 0u;
}
inline ::google::protobuf::uint32 PBAidingData::posenginemask() const {
  // @@protoc_insertion_point(field_get:PBAidingData.posEngineMask)
  return posenginemask_;
}
inline void PBAidingData::set_posenginemask(::google::protobuf::uint32 value) {

  posenginemask_ = value;
  // @@protoc_insertion_point(field_set:PBAidingData.posEngineMask)
}

// -------------------------------------------------------------------

// PBLocApiGnssSv

// uint32 svId = 1;
inline void PBLocApiGnssSv::clear_svid() {
  svid_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssSv::svid() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSv.svId)
  return svid_;
}
inline void PBLocApiGnssSv::set_svid(::google::protobuf::uint32 value) {

  svid_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSv.svId)
}

// .PBLocApiGnss_LocSvSystemEnumType type = 2;
inline void PBLocApiGnssSv::clear_type() {
  type_ = 0;
}
inline ::PBLocApiGnss_LocSvSystemEnumType PBLocApiGnssSv::type() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSv.type)
  return static_cast< ::PBLocApiGnss_LocSvSystemEnumType >(type_);
}
inline void PBLocApiGnssSv::set_type(::PBLocApiGnss_LocSvSystemEnumType value) {

  type_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSv.type)
}

// float cN0Dbhz = 3;
inline void PBLocApiGnssSv::clear_cn0dbhz() {
  cn0dbhz_ = 0;
}
inline float PBLocApiGnssSv::cn0dbhz() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSv.cN0Dbhz)
  return cn0dbhz_;
}
inline void PBLocApiGnssSv::set_cn0dbhz(float value) {

  cn0dbhz_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSv.cN0Dbhz)
}

// float elevation = 4;
inline void PBLocApiGnssSv::clear_elevation() {
  elevation_ = 0;
}
inline float PBLocApiGnssSv::elevation() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSv.elevation)
  return elevation_;
}
inline void PBLocApiGnssSv::set_elevation(float value) {

  elevation_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSv.elevation)
}

// float azimuth = 5;
inline void PBLocApiGnssSv::clear_azimuth() {
  azimuth_ = 0;
}
inline float PBLocApiGnssSv::azimuth() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSv.azimuth)
  return azimuth_;
}
inline void PBLocApiGnssSv::set_azimuth(float value) {

  azimuth_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSv.azimuth)
}

// uint32 gnssSvOptionsMask = 6;
inline void PBLocApiGnssSv::clear_gnsssvoptionsmask() {
  gnsssvoptionsmask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssSv::gnsssvoptionsmask() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSv.gnssSvOptionsMask)
  return gnsssvoptionsmask_;
}
inline void PBLocApiGnssSv::set_gnsssvoptionsmask(::google::protobuf::uint32 value) {

  gnsssvoptionsmask_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSv.gnssSvOptionsMask)
}

// float carrierFrequencyHz = 7;
inline void PBLocApiGnssSv::clear_carrierfrequencyhz() {
  carrierfrequencyhz_ = 0;
}
inline float PBLocApiGnssSv::carrierfrequencyhz() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSv.carrierFrequencyHz)
  return carrierfrequencyhz_;
}
inline void PBLocApiGnssSv::set_carrierfrequencyhz(float value) {

  carrierfrequencyhz_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSv.carrierFrequencyHz)
}

// uint32 gnssSignalTypeMask = 8;
inline void PBLocApiGnssSv::clear_gnsssignaltypemask() {
  gnsssignaltypemask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssSv::gnsssignaltypemask() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSv.gnssSignalTypeMask)
  return gnsssignaltypemask_;
}
inline void PBLocApiGnssSv::set_gnsssignaltypemask(::google::protobuf::uint32 value) {

  gnsssignaltypemask_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSv.gnssSignalTypeMask)
}

// -------------------------------------------------------------------

// PBLocApiGnssSvNotification

// bool gnssSignalTypeMaskValid = 1;
inline void PBLocApiGnssSvNotification::clear_gnsssignaltypemaskvalid() {
  gnsssignaltypemaskvalid_ = false;
}
inline bool PBLocApiGnssSvNotification::gnsssignaltypemaskvalid() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSvNotification.gnssSignalTypeMaskValid)
  return gnsssignaltypemaskvalid_;
}
inline void PBLocApiGnssSvNotification::set_gnsssignaltypemaskvalid(bool value) {

  gnsssignaltypemaskvalid_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSvNotification.gnssSignalTypeMaskValid)
}

// repeated .PBLocApiGnssSv gnssSvs = 2;
inline int PBLocApiGnssSvNotification::gnsssvs_size() const {
  return gnsssvs_.size();
}
inline void PBLocApiGnssSvNotification::clear_gnsssvs() {
  gnsssvs_.Clear();
}
inline const ::PBLocApiGnssSv& PBLocApiGnssSvNotification::gnsssvs(int index) const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSvNotification.gnssSvs)
  return gnsssvs_.Get(index);
}
inline ::PBLocApiGnssSv* PBLocApiGnssSvNotification::mutable_gnsssvs(int index) {
  // @@protoc_insertion_point(field_mutable:PBLocApiGnssSvNotification.gnssSvs)
  return gnsssvs_.Mutable(index);
}
inline ::PBLocApiGnssSv* PBLocApiGnssSvNotification::add_gnsssvs() {
  // @@protoc_insertion_point(field_add:PBLocApiGnssSvNotification.gnssSvs)
  return gnsssvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBLocApiGnssSv >*
PBLocApiGnssSvNotification::mutable_gnsssvs() {
  // @@protoc_insertion_point(field_mutable_list:PBLocApiGnssSvNotification.gnssSvs)
  return &gnsssvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLocApiGnssSv >&
PBLocApiGnssSvNotification::gnsssvs() const {
  // @@protoc_insertion_point(field_list:PBLocApiGnssSvNotification.gnssSvs)
  return gnsssvs_;
}

// -------------------------------------------------------------------

// PBGnssMeasurementsClock

// uint32 flags = 1;
inline void PBGnssMeasurementsClock::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssMeasurementsClock::flags() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.flags)
  return flags_;
}
inline void PBGnssMeasurementsClock::set_flags(::google::protobuf::uint32 value) {

  flags_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.flags)
}

// int32 leapSecond = 2;
inline void PBGnssMeasurementsClock::clear_leapsecond() {
  leapsecond_ = 0;
}
inline ::google::protobuf::int32 PBGnssMeasurementsClock::leapsecond() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.leapSecond)
  return leapsecond_;
}
inline void PBGnssMeasurementsClock::set_leapsecond(::google::protobuf::int32 value) {

  leapsecond_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.leapSecond)
}

// int64 timeNs = 3;
inline void PBGnssMeasurementsClock::clear_timens() {
  timens_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBGnssMeasurementsClock::timens() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.timeNs)
  return timens_;
}
inline void PBGnssMeasurementsClock::set_timens(::google::protobuf::int64 value) {

  timens_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.timeNs)
}

// double timeUncertaintyNs = 4;
inline void PBGnssMeasurementsClock::clear_timeuncertaintyns() {
  timeuncertaintyns_ = 0;
}
inline double PBGnssMeasurementsClock::timeuncertaintyns() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.timeUncertaintyNs)
  return timeuncertaintyns_;
}
inline void PBGnssMeasurementsClock::set_timeuncertaintyns(double value) {

  timeuncertaintyns_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.timeUncertaintyNs)
}

// int64 fullBiasNs = 5;
inline void PBGnssMeasurementsClock::clear_fullbiasns() {
  fullbiasns_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBGnssMeasurementsClock::fullbiasns() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.fullBiasNs)
  return fullbiasns_;
}
inline void PBGnssMeasurementsClock::set_fullbiasns(::google::protobuf::int64 value) {

  fullbiasns_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.fullBiasNs)
}

// double biasNs = 6;
inline void PBGnssMeasurementsClock::clear_biasns() {
  biasns_ = 0;
}
inline double PBGnssMeasurementsClock::biasns() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.biasNs)
  return biasns_;
}
inline void PBGnssMeasurementsClock::set_biasns(double value) {

  biasns_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.biasNs)
}

// double biasUncertaintyNs = 7;
inline void PBGnssMeasurementsClock::clear_biasuncertaintyns() {
  biasuncertaintyns_ = 0;
}
inline double PBGnssMeasurementsClock::biasuncertaintyns() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.biasUncertaintyNs)
  return biasuncertaintyns_;
}
inline void PBGnssMeasurementsClock::set_biasuncertaintyns(double value) {

  biasuncertaintyns_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.biasUncertaintyNs)
}

// double driftNsps = 8;
inline void PBGnssMeasurementsClock::clear_driftnsps() {
  driftnsps_ = 0;
}
inline double PBGnssMeasurementsClock::driftnsps() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.driftNsps)
  return driftnsps_;
}
inline void PBGnssMeasurementsClock::set_driftnsps(double value) {

  driftnsps_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.driftNsps)
}

// double driftUncertaintyNsps = 9;
inline void PBGnssMeasurementsClock::clear_driftuncertaintynsps() {
  driftuncertaintynsps_ = 0;
}
inline double PBGnssMeasurementsClock::driftuncertaintynsps() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.driftUncertaintyNsps)
  return driftuncertaintynsps_;
}
inline void PBGnssMeasurementsClock::set_driftuncertaintynsps(double value) {

  driftuncertaintynsps_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.driftUncertaintyNsps)
}

// uint32 hwClockDiscontinuityCount = 10;
inline void PBGnssMeasurementsClock::clear_hwclockdiscontinuitycount() {
  hwclockdiscontinuitycount_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssMeasurementsClock::hwclockdiscontinuitycount() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsClock.hwClockDiscontinuityCount)
  return hwclockdiscontinuitycount_;
}
inline void PBGnssMeasurementsClock::set_hwclockdiscontinuitycount(::google::protobuf::uint32 value) {

  hwclockdiscontinuitycount_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsClock.hwClockDiscontinuityCount)
}

// -------------------------------------------------------------------

// PBGnssMeasurementsData

// uint32 flags = 1;
inline void PBGnssMeasurementsData::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssMeasurementsData::flags() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.flags)
  return flags_;
}
inline void PBGnssMeasurementsData::set_flags(::google::protobuf::uint32 value) {

  flags_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.flags)
}

// int32 svId = 2;
inline void PBGnssMeasurementsData::clear_svid() {
  svid_ = 0;
}
inline ::google::protobuf::int32 PBGnssMeasurementsData::svid() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.svId)
  return svid_;
}
inline void PBGnssMeasurementsData::set_svid(::google::protobuf::int32 value) {

  svid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.svId)
}

// .PBLocApiGnss_LocSvSystemEnumType svType = 3;
inline void PBGnssMeasurementsData::clear_svtype() {
  svtype_ = 0;
}
inline ::PBLocApiGnss_LocSvSystemEnumType PBGnssMeasurementsData::svtype() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.svType)
  return static_cast< ::PBLocApiGnss_LocSvSystemEnumType >(svtype_);
}
inline void PBGnssMeasurementsData::set_svtype(::PBLocApiGnss_LocSvSystemEnumType value) {

  svtype_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.svType)
}

// double timeOffsetNs = 4;
inline void PBGnssMeasurementsData::clear_timeoffsetns() {
  timeoffsetns_ = 0;
}
inline double PBGnssMeasurementsData::timeoffsetns() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.timeOffsetNs)
  return timeoffsetns_;
}
inline void PBGnssMeasurementsData::set_timeoffsetns(double value) {

  timeoffsetns_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.timeOffsetNs)
}

// uint32 stateMask = 5;
inline void PBGnssMeasurementsData::clear_statemask() {
  statemask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssMeasurementsData::statemask() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.stateMask)
  return statemask_;
}
inline void PBGnssMeasurementsData::set_statemask(::google::protobuf::uint32 value) {

  statemask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.stateMask)
}

// int64 receivedSvTimeNs = 6;
inline void PBGnssMeasurementsData::clear_receivedsvtimens() {
  receivedsvtimens_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBGnssMeasurementsData::receivedsvtimens() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.receivedSvTimeNs)
  return receivedsvtimens_;
}
inline void PBGnssMeasurementsData::set_receivedsvtimens(::google::protobuf::int64 value) {

  receivedsvtimens_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.receivedSvTimeNs)
}

// int64 receivedSvTimeUncertaintyNs = 7;
inline void PBGnssMeasurementsData::clear_receivedsvtimeuncertaintyns() {
  receivedsvtimeuncertaintyns_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBGnssMeasurementsData::receivedsvtimeuncertaintyns() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.receivedSvTimeUncertaintyNs)
  return receivedsvtimeuncertaintyns_;
}
inline void PBGnssMeasurementsData::set_receivedsvtimeuncertaintyns(::google::protobuf::int64 value) {

  receivedsvtimeuncertaintyns_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.receivedSvTimeUncertaintyNs)
}

// double carrierToNoiseDbHz = 8;
inline void PBGnssMeasurementsData::clear_carriertonoisedbhz() {
  carriertonoisedbhz_ = 0;
}
inline double PBGnssMeasurementsData::carriertonoisedbhz() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.carrierToNoiseDbHz)
  return carriertonoisedbhz_;
}
inline void PBGnssMeasurementsData::set_carriertonoisedbhz(double value) {

  carriertonoisedbhz_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.carrierToNoiseDbHz)
}

// double pseudorangeRateMps = 9;
inline void PBGnssMeasurementsData::clear_pseudorangeratemps() {
  pseudorangeratemps_ = 0;
}
inline double PBGnssMeasurementsData::pseudorangeratemps() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.pseudorangeRateMps)
  return pseudorangeratemps_;
}
inline void PBGnssMeasurementsData::set_pseudorangeratemps(double value) {

  pseudorangeratemps_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.pseudorangeRateMps)
}

// double pseudorangeRateUncertaintyMps = 10;
inline void PBGnssMeasurementsData::clear_pseudorangerateuncertaintymps() {
  pseudorangerateuncertaintymps_ = 0;
}
inline double PBGnssMeasurementsData::pseudorangerateuncertaintymps() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.pseudorangeRateUncertaintyMps)
  return pseudorangerateuncertaintymps_;
}
inline void PBGnssMeasurementsData::set_pseudorangerateuncertaintymps(double value) {

  pseudorangerateuncertaintymps_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.pseudorangeRateUncertaintyMps)
}

// uint32 adrStateMask = 11;
inline void PBGnssMeasurementsData::clear_adrstatemask() {
  adrstatemask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssMeasurementsData::adrstatemask() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.adrStateMask)
  return adrstatemask_;
}
inline void PBGnssMeasurementsData::set_adrstatemask(::google::protobuf::uint32 value) {

  adrstatemask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.adrStateMask)
}

// double adrMeters = 12;
inline void PBGnssMeasurementsData::clear_adrmeters() {
  adrmeters_ = 0;
}
inline double PBGnssMeasurementsData::adrmeters() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.adrMeters)
  return adrmeters_;
}
inline void PBGnssMeasurementsData::set_adrmeters(double value) {

  adrmeters_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.adrMeters)
}

// double adrUncertaintyMeters = 13;
inline void PBGnssMeasurementsData::clear_adruncertaintymeters() {
  adruncertaintymeters_ = 0;
}
inline double PBGnssMeasurementsData::adruncertaintymeters() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.adrUncertaintyMeters)
  return adruncertaintymeters_;
}
inline void PBGnssMeasurementsData::set_adruncertaintymeters(double value) {

  adruncertaintymeters_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.adrUncertaintyMeters)
}

// float carrierFrequencyHz = 14;
inline void PBGnssMeasurementsData::clear_carrierfrequencyhz() {
  carrierfrequencyhz_ = 0;
}
inline float PBGnssMeasurementsData::carrierfrequencyhz() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.carrierFrequencyHz)
  return carrierfrequencyhz_;
}
inline void PBGnssMeasurementsData::set_carrierfrequencyhz(float value) {

  carrierfrequencyhz_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.carrierFrequencyHz)
}

// int64 carrierCycles = 15;
inline void PBGnssMeasurementsData::clear_carriercycles() {
  carriercycles_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBGnssMeasurementsData::carriercycles() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.carrierCycles)
  return carriercycles_;
}
inline void PBGnssMeasurementsData::set_carriercycles(::google::protobuf::int64 value) {

  carriercycles_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.carrierCycles)
}

// double carrierPhase = 16;
inline void PBGnssMeasurementsData::clear_carrierphase() {
  carrierphase_ = 0;
}
inline double PBGnssMeasurementsData::carrierphase() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.carrierPhase)
  return carrierphase_;
}
inline void PBGnssMeasurementsData::set_carrierphase(double value) {

  carrierphase_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.carrierPhase)
}

// double carrierPhaseUncertainty = 17;
inline void PBGnssMeasurementsData::clear_carrierphaseuncertainty() {
  carrierphaseuncertainty_ = 0;
}
inline double PBGnssMeasurementsData::carrierphaseuncertainty() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.carrierPhaseUncertainty)
  return carrierphaseuncertainty_;
}
inline void PBGnssMeasurementsData::set_carrierphaseuncertainty(double value) {

  carrierphaseuncertainty_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.carrierPhaseUncertainty)
}

// .PBGnssMeasurementsMultipathIndicator multipathIndicator = 18;
inline void PBGnssMeasurementsData::clear_multipathindicator() {
  multipathindicator_ = 0;
}
inline ::PBGnssMeasurementsMultipathIndicator PBGnssMeasurementsData::multipathindicator() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.multipathIndicator)
  return static_cast< ::PBGnssMeasurementsMultipathIndicator >(multipathindicator_);
}
inline void PBGnssMeasurementsData::set_multipathindicator(::PBGnssMeasurementsMultipathIndicator value) {

  multipathindicator_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.multipathIndicator)
}

// double signalToNoiseRatioDb = 19;
inline void PBGnssMeasurementsData::clear_signaltonoiseratiodb() {
  signaltonoiseratiodb_ = 0;
}
inline double PBGnssMeasurementsData::signaltonoiseratiodb() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.signalToNoiseRatioDb)
  return signaltonoiseratiodb_;
}
inline void PBGnssMeasurementsData::set_signaltonoiseratiodb(double value) {

  signaltonoiseratiodb_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.signalToNoiseRatioDb)
}

// double agcLevelDb = 20;
inline void PBGnssMeasurementsData::clear_agcleveldb() {
  agcleveldb_ = 0;
}
inline double PBGnssMeasurementsData::agcleveldb() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsData.agcLevelDb)
  return agcleveldb_;
}
inline void PBGnssMeasurementsData::set_agcleveldb(double value) {

  agcleveldb_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasurementsData.agcLevelDb)
}

// -------------------------------------------------------------------

// PBLocApiGnssLocationPositionDynamics

// uint32 bodyFrameDataMask = 1;
inline void PBLocApiGnssLocationPositionDynamics::clear_bodyframedatamask() {
  bodyframedatamask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssLocationPositionDynamics::bodyframedatamask() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.bodyFrameDataMask)
  return bodyframedatamask_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_bodyframedatamask(::google::protobuf::uint32 value) {

  bodyframedatamask_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.bodyFrameDataMask)
}

// float longAccel = 2;
inline void PBLocApiGnssLocationPositionDynamics::clear_longaccel() {
  longaccel_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::longaccel() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.longAccel)
  return longaccel_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_longaccel(float value) {

  longaccel_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.longAccel)
}

// float latAccel = 3;
inline void PBLocApiGnssLocationPositionDynamics::clear_lataccel() {
  lataccel_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::lataccel() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.latAccel)
  return lataccel_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_lataccel(float value) {

  lataccel_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.latAccel)
}

// float vertAccel = 4;
inline void PBLocApiGnssLocationPositionDynamics::clear_vertaccel() {
  vertaccel_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::vertaccel() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.vertAccel)
  return vertaccel_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_vertaccel(float value) {

  vertaccel_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.vertAccel)
}

// float longAccelUnc = 5;
inline void PBLocApiGnssLocationPositionDynamics::clear_longaccelunc() {
  longaccelunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::longaccelunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.longAccelUnc)
  return longaccelunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_longaccelunc(float value) {

  longaccelunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.longAccelUnc)
}

// float latAccelUnc = 6;
inline void PBLocApiGnssLocationPositionDynamics::clear_lataccelunc() {
  lataccelunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::lataccelunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.latAccelUnc)
  return lataccelunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_lataccelunc(float value) {

  lataccelunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.latAccelUnc)
}

// float vertAccelUnc = 7;
inline void PBLocApiGnssLocationPositionDynamics::clear_vertaccelunc() {
  vertaccelunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::vertaccelunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.vertAccelUnc)
  return vertaccelunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_vertaccelunc(float value) {

  vertaccelunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.vertAccelUnc)
}

// float pitch = 8;
inline void PBLocApiGnssLocationPositionDynamics::clear_pitch() {
  pitch_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::pitch() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.pitch)
  return pitch_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_pitch(float value) {

  pitch_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.pitch)
}

// float pitchUnc = 9;
inline void PBLocApiGnssLocationPositionDynamics::clear_pitchunc() {
  pitchunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::pitchunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.pitchUnc)
  return pitchunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_pitchunc(float value) {

  pitchunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.pitchUnc)
}

// float pitchRate = 10;
inline void PBLocApiGnssLocationPositionDynamics::clear_pitchrate() {
  pitchrate_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::pitchrate() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.pitchRate)
  return pitchrate_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_pitchrate(float value) {

  pitchrate_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.pitchRate)
}

// float pitchRateUnc = 11;
inline void PBLocApiGnssLocationPositionDynamics::clear_pitchrateunc() {
  pitchrateunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::pitchrateunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.pitchRateUnc)
  return pitchrateunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_pitchrateunc(float value) {

  pitchrateunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.pitchRateUnc)
}

// float roll = 12;
inline void PBLocApiGnssLocationPositionDynamics::clear_roll() {
  roll_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::roll() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.roll)
  return roll_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_roll(float value) {

  roll_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.roll)
}

// float rollUnc = 13;
inline void PBLocApiGnssLocationPositionDynamics::clear_rollunc() {
  rollunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::rollunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.rollUnc)
  return rollunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_rollunc(float value) {

  rollunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.rollUnc)
}

// float rollRate = 14;
inline void PBLocApiGnssLocationPositionDynamics::clear_rollrate() {
  rollrate_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::rollrate() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.rollRate)
  return rollrate_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_rollrate(float value) {

  rollrate_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.rollRate)
}

// float rollRateUnc = 15;
inline void PBLocApiGnssLocationPositionDynamics::clear_rollrateunc() {
  rollrateunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::rollrateunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.rollRateUnc)
  return rollrateunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_rollrateunc(float value) {

  rollrateunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.rollRateUnc)
}

// float yaw = 16;
inline void PBLocApiGnssLocationPositionDynamics::clear_yaw() {
  yaw_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::yaw() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.yaw)
  return yaw_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_yaw(float value) {

  yaw_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.yaw)
}

// float yawUnc = 17;
inline void PBLocApiGnssLocationPositionDynamics::clear_yawunc() {
  yawunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::yawunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.yawUnc)
  return yawunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_yawunc(float value) {

  yawunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.yawUnc)
}

// float yawRate = 18;
inline void PBLocApiGnssLocationPositionDynamics::clear_yawrate() {
  yawrate_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::yawrate() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.yawRate)
  return yawrate_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_yawrate(float value) {

  yawrate_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.yawRate)
}

// float yawRateUnc = 19;
inline void PBLocApiGnssLocationPositionDynamics::clear_yawrateunc() {
  yawrateunc_ = 0;
}
inline float PBLocApiGnssLocationPositionDynamics::yawrateunc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssLocationPositionDynamics.yawRateUnc)
  return yawrateunc_;
}
inline void PBLocApiGnssLocationPositionDynamics::set_yawrateunc(float value) {

  yawrateunc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssLocationPositionDynamics.yawRateUnc)
}

// -------------------------------------------------------------------

// PBLocApiSystemTimeStructUnion

// .PBLocApiGnssSystemTimeStructType gpsSystemTime = 1;
inline bool PBLocApiSystemTimeStructUnion::has_gpssystemtime() const {
  return sysTimeUnion_case() == kGpsSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::set_has_gpssystemtime() {
  _oneof_case_[0] = kGpsSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::clear_gpssystemtime() {
  if (has_gpssystemtime()) {
    delete sysTimeUnion_.gpssystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBLocApiGnssSystemTimeStructType& PBLocApiSystemTimeStructUnion::gpssystemtime() const {
  // @@protoc_insertion_point(field_get:PBLocApiSystemTimeStructUnion.gpsSystemTime)
  return has_gpssystemtime()
      ? *sysTimeUnion_.gpssystemtime_
      : ::PBLocApiGnssSystemTimeStructType::default_instance();
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::mutable_gpssystemtime() {
  if (!has_gpssystemtime()) {
    clear_sysTimeUnion();
    set_has_gpssystemtime();
    sysTimeUnion_.gpssystemtime_ = new ::PBLocApiGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBLocApiSystemTimeStructUnion.gpsSystemTime)
  return sysTimeUnion_.gpssystemtime_;
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::release_gpssystemtime() {
  // @@protoc_insertion_point(field_release:PBLocApiSystemTimeStructUnion.gpsSystemTime)
  if (has_gpssystemtime()) {
    clear_has_sysTimeUnion();
    ::PBLocApiGnssSystemTimeStructType* temp = sysTimeUnion_.gpssystemtime_;
    sysTimeUnion_.gpssystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBLocApiSystemTimeStructUnion::set_allocated_gpssystemtime(::PBLocApiGnssSystemTimeStructType* gpssystemtime) {
  clear_sysTimeUnion();
  if (gpssystemtime) {
    set_has_gpssystemtime();
    sysTimeUnion_.gpssystemtime_ = gpssystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBLocApiSystemTimeStructUnion.gpsSystemTime)
}

// .PBLocApiGnssSystemTimeStructType galSystemTime = 2;
inline bool PBLocApiSystemTimeStructUnion::has_galsystemtime() const {
  return sysTimeUnion_case() == kGalSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::set_has_galsystemtime() {
  _oneof_case_[0] = kGalSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::clear_galsystemtime() {
  if (has_galsystemtime()) {
    delete sysTimeUnion_.galsystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBLocApiGnssSystemTimeStructType& PBLocApiSystemTimeStructUnion::galsystemtime() const {
  // @@protoc_insertion_point(field_get:PBLocApiSystemTimeStructUnion.galSystemTime)
  return has_galsystemtime()
      ? *sysTimeUnion_.galsystemtime_
      : ::PBLocApiGnssSystemTimeStructType::default_instance();
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::mutable_galsystemtime() {
  if (!has_galsystemtime()) {
    clear_sysTimeUnion();
    set_has_galsystemtime();
    sysTimeUnion_.galsystemtime_ = new ::PBLocApiGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBLocApiSystemTimeStructUnion.galSystemTime)
  return sysTimeUnion_.galsystemtime_;
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::release_galsystemtime() {
  // @@protoc_insertion_point(field_release:PBLocApiSystemTimeStructUnion.galSystemTime)
  if (has_galsystemtime()) {
    clear_has_sysTimeUnion();
    ::PBLocApiGnssSystemTimeStructType* temp = sysTimeUnion_.galsystemtime_;
    sysTimeUnion_.galsystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBLocApiSystemTimeStructUnion::set_allocated_galsystemtime(::PBLocApiGnssSystemTimeStructType* galsystemtime) {
  clear_sysTimeUnion();
  if (galsystemtime) {
    set_has_galsystemtime();
    sysTimeUnion_.galsystemtime_ = galsystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBLocApiSystemTimeStructUnion.galSystemTime)
}

// .PBLocApiGnssSystemTimeStructType bdsSystemTime = 3;
inline bool PBLocApiSystemTimeStructUnion::has_bdssystemtime() const {
  return sysTimeUnion_case() == kBdsSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::set_has_bdssystemtime() {
  _oneof_case_[0] = kBdsSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::clear_bdssystemtime() {
  if (has_bdssystemtime()) {
    delete sysTimeUnion_.bdssystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBLocApiGnssSystemTimeStructType& PBLocApiSystemTimeStructUnion::bdssystemtime() const {
  // @@protoc_insertion_point(field_get:PBLocApiSystemTimeStructUnion.bdsSystemTime)
  return has_bdssystemtime()
      ? *sysTimeUnion_.bdssystemtime_
      : ::PBLocApiGnssSystemTimeStructType::default_instance();
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::mutable_bdssystemtime() {
  if (!has_bdssystemtime()) {
    clear_sysTimeUnion();
    set_has_bdssystemtime();
    sysTimeUnion_.bdssystemtime_ = new ::PBLocApiGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBLocApiSystemTimeStructUnion.bdsSystemTime)
  return sysTimeUnion_.bdssystemtime_;
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::release_bdssystemtime() {
  // @@protoc_insertion_point(field_release:PBLocApiSystemTimeStructUnion.bdsSystemTime)
  if (has_bdssystemtime()) {
    clear_has_sysTimeUnion();
    ::PBLocApiGnssSystemTimeStructType* temp = sysTimeUnion_.bdssystemtime_;
    sysTimeUnion_.bdssystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBLocApiSystemTimeStructUnion::set_allocated_bdssystemtime(::PBLocApiGnssSystemTimeStructType* bdssystemtime) {
  clear_sysTimeUnion();
  if (bdssystemtime) {
    set_has_bdssystemtime();
    sysTimeUnion_.bdssystemtime_ = bdssystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBLocApiSystemTimeStructUnion.bdsSystemTime)
}

// .PBLocApiGnssSystemTimeStructType qzssSystemTime = 4;
inline bool PBLocApiSystemTimeStructUnion::has_qzsssystemtime() const {
  return sysTimeUnion_case() == kQzssSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::set_has_qzsssystemtime() {
  _oneof_case_[0] = kQzssSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::clear_qzsssystemtime() {
  if (has_qzsssystemtime()) {
    delete sysTimeUnion_.qzsssystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBLocApiGnssSystemTimeStructType& PBLocApiSystemTimeStructUnion::qzsssystemtime() const {
  // @@protoc_insertion_point(field_get:PBLocApiSystemTimeStructUnion.qzssSystemTime)
  return has_qzsssystemtime()
      ? *sysTimeUnion_.qzsssystemtime_
      : ::PBLocApiGnssSystemTimeStructType::default_instance();
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::mutable_qzsssystemtime() {
  if (!has_qzsssystemtime()) {
    clear_sysTimeUnion();
    set_has_qzsssystemtime();
    sysTimeUnion_.qzsssystemtime_ = new ::PBLocApiGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBLocApiSystemTimeStructUnion.qzssSystemTime)
  return sysTimeUnion_.qzsssystemtime_;
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::release_qzsssystemtime() {
  // @@protoc_insertion_point(field_release:PBLocApiSystemTimeStructUnion.qzssSystemTime)
  if (has_qzsssystemtime()) {
    clear_has_sysTimeUnion();
    ::PBLocApiGnssSystemTimeStructType* temp = sysTimeUnion_.qzsssystemtime_;
    sysTimeUnion_.qzsssystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBLocApiSystemTimeStructUnion::set_allocated_qzsssystemtime(::PBLocApiGnssSystemTimeStructType* qzsssystemtime) {
  clear_sysTimeUnion();
  if (qzsssystemtime) {
    set_has_qzsssystemtime();
    sysTimeUnion_.qzsssystemtime_ = qzsssystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBLocApiSystemTimeStructUnion.qzssSystemTime)
}

// .PBLocApiGnssGloTimeStructType gloSystemTime = 5;
inline bool PBLocApiSystemTimeStructUnion::has_glosystemtime() const {
  return sysTimeUnion_case() == kGloSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::set_has_glosystemtime() {
  _oneof_case_[0] = kGloSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::clear_glosystemtime() {
  if (has_glosystemtime()) {
    delete sysTimeUnion_.glosystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBLocApiGnssGloTimeStructType& PBLocApiSystemTimeStructUnion::glosystemtime() const {
  // @@protoc_insertion_point(field_get:PBLocApiSystemTimeStructUnion.gloSystemTime)
  return has_glosystemtime()
      ? *sysTimeUnion_.glosystemtime_
      : ::PBLocApiGnssGloTimeStructType::default_instance();
}
inline ::PBLocApiGnssGloTimeStructType* PBLocApiSystemTimeStructUnion::mutable_glosystemtime() {
  if (!has_glosystemtime()) {
    clear_sysTimeUnion();
    set_has_glosystemtime();
    sysTimeUnion_.glosystemtime_ = new ::PBLocApiGnssGloTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBLocApiSystemTimeStructUnion.gloSystemTime)
  return sysTimeUnion_.glosystemtime_;
}
inline ::PBLocApiGnssGloTimeStructType* PBLocApiSystemTimeStructUnion::release_glosystemtime() {
  // @@protoc_insertion_point(field_release:PBLocApiSystemTimeStructUnion.gloSystemTime)
  if (has_glosystemtime()) {
    clear_has_sysTimeUnion();
    ::PBLocApiGnssGloTimeStructType* temp = sysTimeUnion_.glosystemtime_;
    sysTimeUnion_.glosystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBLocApiSystemTimeStructUnion::set_allocated_glosystemtime(::PBLocApiGnssGloTimeStructType* glosystemtime) {
  clear_sysTimeUnion();
  if (glosystemtime) {
    set_has_glosystemtime();
    sysTimeUnion_.glosystemtime_ = glosystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBLocApiSystemTimeStructUnion.gloSystemTime)
}

// .PBLocApiGnssSystemTimeStructType navicSystemTime = 6;
inline bool PBLocApiSystemTimeStructUnion::has_navicsystemtime() const {
  return sysTimeUnion_case() == kNavicSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::set_has_navicsystemtime() {
  _oneof_case_[0] = kNavicSystemTime;
}
inline void PBLocApiSystemTimeStructUnion::clear_navicsystemtime() {
  if (has_navicsystemtime()) {
    delete sysTimeUnion_.navicsystemtime_;
    clear_has_sysTimeUnion();
  }
}
inline  const ::PBLocApiGnssSystemTimeStructType& PBLocApiSystemTimeStructUnion::navicsystemtime() const {
  // @@protoc_insertion_point(field_get:PBLocApiSystemTimeStructUnion.navicSystemTime)
  return has_navicsystemtime()
      ? *sysTimeUnion_.navicsystemtime_
      : ::PBLocApiGnssSystemTimeStructType::default_instance();
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::mutable_navicsystemtime() {
  if (!has_navicsystemtime()) {
    clear_sysTimeUnion();
    set_has_navicsystemtime();
    sysTimeUnion_.navicsystemtime_ = new ::PBLocApiGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBLocApiSystemTimeStructUnion.navicSystemTime)
  return sysTimeUnion_.navicsystemtime_;
}
inline ::PBLocApiGnssSystemTimeStructType* PBLocApiSystemTimeStructUnion::release_navicsystemtime() {
  // @@protoc_insertion_point(field_release:PBLocApiSystemTimeStructUnion.navicSystemTime)
  if (has_navicsystemtime()) {
    clear_has_sysTimeUnion();
    ::PBLocApiGnssSystemTimeStructType* temp = sysTimeUnion_.navicsystemtime_;
    sysTimeUnion_.navicsystemtime_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PBLocApiSystemTimeStructUnion::set_allocated_navicsystemtime(::PBLocApiGnssSystemTimeStructType* navicsystemtime) {
  clear_sysTimeUnion();
  if (navicsystemtime) {
    set_has_navicsystemtime();
    sysTimeUnion_.navicsystemtime_ = navicsystemtime;
  }
  // @@protoc_insertion_point(field_set_allocated:PBLocApiSystemTimeStructUnion.navicSystemTime)
}

inline bool PBLocApiSystemTimeStructUnion::has_sysTimeUnion() const {
  return sysTimeUnion_case() != SYSTIMEUNION_NOT_SET;
}
inline void PBLocApiSystemTimeStructUnion::clear_has_sysTimeUnion() {
  _oneof_case_[0] = SYSTIMEUNION_NOT_SET;
}
inline PBLocApiSystemTimeStructUnion::SysTimeUnionCase PBLocApiSystemTimeStructUnion::sysTimeUnion_case() const {
  return PBLocApiSystemTimeStructUnion::SysTimeUnionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PBLocApiGnssSystemTime

// .PBLocApiGnss_LocSvSystemEnumType gnssSystemTimeSrc = 1;
inline void PBLocApiGnssSystemTime::clear_gnsssystemtimesrc() {
  gnsssystemtimesrc_ = 0;
}
inline ::PBLocApiGnss_LocSvSystemEnumType PBLocApiGnssSystemTime::gnsssystemtimesrc() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTime.gnssSystemTimeSrc)
  return static_cast< ::PBLocApiGnss_LocSvSystemEnumType >(gnsssystemtimesrc_);
}
inline void PBLocApiGnssSystemTime::set_gnsssystemtimesrc(::PBLocApiGnss_LocSvSystemEnumType value) {

  gnsssystemtimesrc_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSystemTime.gnssSystemTimeSrc)
}

// .PBLocApiSystemTimeStructUnion u = 2;
inline bool PBLocApiGnssSystemTime::has_u() const {
  return this != internal_default_instance() && u_ != NULL;
}
inline void PBLocApiGnssSystemTime::clear_u() {
  if (GetArenaNoVirtual() == NULL && u_ != NULL) delete u_;
  u_ = NULL;
}
inline const ::PBLocApiSystemTimeStructUnion& PBLocApiGnssSystemTime::u() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTime.u)
  return u_ != NULL ? *u_
                         : *::PBLocApiSystemTimeStructUnion::internal_default_instance();
}
inline ::PBLocApiSystemTimeStructUnion* PBLocApiGnssSystemTime::mutable_u() {

  if (u_ == NULL) {
    u_ = new ::PBLocApiSystemTimeStructUnion;
  }
  // @@protoc_insertion_point(field_mutable:PBLocApiGnssSystemTime.u)
  return u_;
}
inline ::PBLocApiSystemTimeStructUnion* PBLocApiGnssSystemTime::release_u() {
  // @@protoc_insertion_point(field_release:PBLocApiGnssSystemTime.u)

  ::PBLocApiSystemTimeStructUnion* temp = u_;
  u_ = NULL;
  return temp;
}
inline void PBLocApiGnssSystemTime::set_allocated_u(::PBLocApiSystemTimeStructUnion* u) {
  delete u_;
  u_ = u;
  if (u) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocApiGnssSystemTime.u)
}

// -------------------------------------------------------------------

// PBGnssLocationSvUsedInPosition

// uint64 gpsSvUsedIdsMask = 1;
inline void PBGnssLocationSvUsedInPosition::clear_gpssvusedidsmask() {
  gpssvusedidsmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssLocationSvUsedInPosition::gpssvusedidsmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationSvUsedInPosition.gpsSvUsedIdsMask)
  return gpssvusedidsmask_;
}
inline void PBGnssLocationSvUsedInPosition::set_gpssvusedidsmask(::google::protobuf::uint64 value) {

  gpssvusedidsmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationSvUsedInPosition.gpsSvUsedIdsMask)
}

// uint64 gloSvUsedIdsMask = 2;
inline void PBGnssLocationSvUsedInPosition::clear_glosvusedidsmask() {
  glosvusedidsmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssLocationSvUsedInPosition::glosvusedidsmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationSvUsedInPosition.gloSvUsedIdsMask)
  return glosvusedidsmask_;
}
inline void PBGnssLocationSvUsedInPosition::set_glosvusedidsmask(::google::protobuf::uint64 value) {

  glosvusedidsmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationSvUsedInPosition.gloSvUsedIdsMask)
}

// uint64 galSvUsedIdsMask = 3;
inline void PBGnssLocationSvUsedInPosition::clear_galsvusedidsmask() {
  galsvusedidsmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssLocationSvUsedInPosition::galsvusedidsmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationSvUsedInPosition.galSvUsedIdsMask)
  return galsvusedidsmask_;
}
inline void PBGnssLocationSvUsedInPosition::set_galsvusedidsmask(::google::protobuf::uint64 value) {

  galsvusedidsmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationSvUsedInPosition.galSvUsedIdsMask)
}

// uint64 bdsSvUsedIdsMask = 4;
inline void PBGnssLocationSvUsedInPosition::clear_bdssvusedidsmask() {
  bdssvusedidsmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssLocationSvUsedInPosition::bdssvusedidsmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationSvUsedInPosition.bdsSvUsedIdsMask)
  return bdssvusedidsmask_;
}
inline void PBGnssLocationSvUsedInPosition::set_bdssvusedidsmask(::google::protobuf::uint64 value) {

  bdssvusedidsmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationSvUsedInPosition.bdsSvUsedIdsMask)
}

// uint64 qzssSvUsedIdsMask = 5;
inline void PBGnssLocationSvUsedInPosition::clear_qzsssvusedidsmask() {
  qzsssvusedidsmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssLocationSvUsedInPosition::qzsssvusedidsmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationSvUsedInPosition.qzssSvUsedIdsMask)
  return qzsssvusedidsmask_;
}
inline void PBGnssLocationSvUsedInPosition::set_qzsssvusedidsmask(::google::protobuf::uint64 value) {

  qzsssvusedidsmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationSvUsedInPosition.qzssSvUsedIdsMask)
}

// uint64 navicSvUsedIdsMask = 6;
inline void PBGnssLocationSvUsedInPosition::clear_navicsvusedidsmask() {
  navicsvusedidsmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssLocationSvUsedInPosition::navicsvusedidsmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationSvUsedInPosition.navicSvUsedIdsMask)
  return navicsvusedidsmask_;
}
inline void PBGnssLocationSvUsedInPosition::set_navicsvusedidsmask(::google::protobuf::uint64 value) {

  navicsvusedidsmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationSvUsedInPosition.navicSvUsedIdsMask)
}

// -------------------------------------------------------------------

// PBGnssMeasUsageInfo

// .PBLocApiGnss_LocSvSystemEnumType gnssConstellation = 1;
inline void PBGnssMeasUsageInfo::clear_gnssconstellation() {
  gnssconstellation_ = 0;
}
inline ::PBLocApiGnss_LocSvSystemEnumType PBGnssMeasUsageInfo::gnssconstellation() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasUsageInfo.gnssConstellation)
  return static_cast< ::PBLocApiGnss_LocSvSystemEnumType >(gnssconstellation_);
}
inline void PBGnssMeasUsageInfo::set_gnssconstellation(::PBLocApiGnss_LocSvSystemEnumType value) {

  gnssconstellation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasUsageInfo.gnssConstellation)
}

// uint32 gnssSvId = 2;
inline void PBGnssMeasUsageInfo::clear_gnsssvid() {
  gnsssvid_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssMeasUsageInfo::gnsssvid() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasUsageInfo.gnssSvId)
  return gnsssvid_;
}
inline void PBGnssMeasUsageInfo::set_gnsssvid(::google::protobuf::uint32 value) {

  gnsssvid_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasUsageInfo.gnssSvId)
}

// uint32 gnssSignalType = 3;
inline void PBGnssMeasUsageInfo::clear_gnsssignaltype() {
  gnsssignaltype_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssMeasUsageInfo::gnsssignaltype() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasUsageInfo.gnssSignalType)
  return gnsssignaltype_;
}
inline void PBGnssMeasUsageInfo::set_gnsssignaltype(::google::protobuf::uint32 value) {

  gnsssignaltype_ = value;
  // @@protoc_insertion_point(field_set:PBGnssMeasUsageInfo.gnssSignalType)
}

// -------------------------------------------------------------------

// PBGnssLocationInfoNotification

// .PBLocation location = 1;
inline bool PBGnssLocationInfoNotification::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void PBGnssLocationInfoNotification::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
inline const ::PBLocation& PBGnssLocationInfoNotification::location() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.location)
  return location_ != NULL ? *location_
                         : *::PBLocation::internal_default_instance();
}
inline ::PBLocation* PBGnssLocationInfoNotification::mutable_location() {

  if (location_ == NULL) {
    location_ = new ::PBLocation;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssLocationInfoNotification.location)
  return location_;
}
inline ::PBLocation* PBGnssLocationInfoNotification::release_location() {
  // @@protoc_insertion_point(field_release:PBGnssLocationInfoNotification.location)

  ::PBLocation* temp = location_;
  location_ = NULL;
  return temp;
}
inline void PBGnssLocationInfoNotification::set_allocated_location(::PBLocation* location) {
  delete location_;
  location_ = location;
  if (location) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssLocationInfoNotification.location)
}

// uint32 flags = 2;
inline void PBGnssLocationInfoNotification::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::flags() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.flags)
  return flags_;
}
inline void PBGnssLocationInfoNotification::set_flags(::google::protobuf::uint32 value) {

  flags_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.flags)
}

// float altitudeMeanSeaLevel = 3;
inline void PBGnssLocationInfoNotification::clear_altitudemeansealevel() {
  altitudemeansealevel_ = 0;
}
inline float PBGnssLocationInfoNotification::altitudemeansealevel() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.altitudeMeanSeaLevel)
  return altitudemeansealevel_;
}
inline void PBGnssLocationInfoNotification::set_altitudemeansealevel(float value) {

  altitudemeansealevel_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.altitudeMeanSeaLevel)
}

// float pdop = 4;
inline void PBGnssLocationInfoNotification::clear_pdop() {
  pdop_ = 0;
}
inline float PBGnssLocationInfoNotification::pdop() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.pdop)
  return pdop_;
}
inline void PBGnssLocationInfoNotification::set_pdop(float value) {

  pdop_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.pdop)
}

// float hdop = 5;
inline void PBGnssLocationInfoNotification::clear_hdop() {
  hdop_ = 0;
}
inline float PBGnssLocationInfoNotification::hdop() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.hdop)
  return hdop_;
}
inline void PBGnssLocationInfoNotification::set_hdop(float value) {

  hdop_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.hdop)
}

// float vdop = 6;
inline void PBGnssLocationInfoNotification::clear_vdop() {
  vdop_ = 0;
}
inline float PBGnssLocationInfoNotification::vdop() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.vdop)
  return vdop_;
}
inline void PBGnssLocationInfoNotification::set_vdop(float value) {

  vdop_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.vdop)
}

// float gdop = 7;
inline void PBGnssLocationInfoNotification::clear_gdop() {
  gdop_ = 0;
}
inline float PBGnssLocationInfoNotification::gdop() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.gdop)
  return gdop_;
}
inline void PBGnssLocationInfoNotification::set_gdop(float value) {

  gdop_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.gdop)
}

// float tdop = 8;
inline void PBGnssLocationInfoNotification::clear_tdop() {
  tdop_ = 0;
}
inline float PBGnssLocationInfoNotification::tdop() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.tdop)
  return tdop_;
}
inline void PBGnssLocationInfoNotification::set_tdop(float value) {

  tdop_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.tdop)
}

// float magneticDeviation = 9;
inline void PBGnssLocationInfoNotification::clear_magneticdeviation() {
  magneticdeviation_ = 0;
}
inline float PBGnssLocationInfoNotification::magneticdeviation() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.magneticDeviation)
  return magneticdeviation_;
}
inline void PBGnssLocationInfoNotification::set_magneticdeviation(float value) {

  magneticdeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.magneticDeviation)
}

// .PBLocationReliability horReliability = 10;
inline void PBGnssLocationInfoNotification::clear_horreliability() {
  horreliability_ = 0;
}
inline ::PBLocationReliability PBGnssLocationInfoNotification::horreliability() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.horReliability)
  return static_cast< ::PBLocationReliability >(horreliability_);
}
inline void PBGnssLocationInfoNotification::set_horreliability(::PBLocationReliability value) {

  horreliability_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.horReliability)
}

// .PBLocationReliability verReliability = 11;
inline void PBGnssLocationInfoNotification::clear_verreliability() {
  verreliability_ = 0;
}
inline ::PBLocationReliability PBGnssLocationInfoNotification::verreliability() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.verReliability)
  return static_cast< ::PBLocationReliability >(verreliability_);
}
inline void PBGnssLocationInfoNotification::set_verreliability(::PBLocationReliability value) {

  verreliability_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.verReliability)
}

// float horUncEllipseSemiMajor = 12;
inline void PBGnssLocationInfoNotification::clear_horuncellipsesemimajor() {
  horuncellipsesemimajor_ = 0;
}
inline float PBGnssLocationInfoNotification::horuncellipsesemimajor() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.horUncEllipseSemiMajor)
  return horuncellipsesemimajor_;
}
inline void PBGnssLocationInfoNotification::set_horuncellipsesemimajor(float value) {

  horuncellipsesemimajor_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.horUncEllipseSemiMajor)
}

// float horUncEllipseSemiMinor = 13;
inline void PBGnssLocationInfoNotification::clear_horuncellipsesemiminor() {
  horuncellipsesemiminor_ = 0;
}
inline float PBGnssLocationInfoNotification::horuncellipsesemiminor() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.horUncEllipseSemiMinor)
  return horuncellipsesemiminor_;
}
inline void PBGnssLocationInfoNotification::set_horuncellipsesemiminor(float value) {

  horuncellipsesemiminor_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.horUncEllipseSemiMinor)
}

// float horUncEllipseOrientAzimuth = 14;
inline void PBGnssLocationInfoNotification::clear_horuncellipseorientazimuth() {
  horuncellipseorientazimuth_ = 0;
}
inline float PBGnssLocationInfoNotification::horuncellipseorientazimuth() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.horUncEllipseOrientAzimuth)
  return horuncellipseorientazimuth_;
}
inline void PBGnssLocationInfoNotification::set_horuncellipseorientazimuth(float value) {

  horuncellipseorientazimuth_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.horUncEllipseOrientAzimuth)
}

// float northStdDeviation = 15;
inline void PBGnssLocationInfoNotification::clear_northstddeviation() {
  northstddeviation_ = 0;
}
inline float PBGnssLocationInfoNotification::northstddeviation() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.northStdDeviation)
  return northstddeviation_;
}
inline void PBGnssLocationInfoNotification::set_northstddeviation(float value) {

  northstddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.northStdDeviation)
}

// float eastStdDeviation = 16;
inline void PBGnssLocationInfoNotification::clear_eaststddeviation() {
  eaststddeviation_ = 0;
}
inline float PBGnssLocationInfoNotification::eaststddeviation() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.eastStdDeviation)
  return eaststddeviation_;
}
inline void PBGnssLocationInfoNotification::set_eaststddeviation(float value) {

  eaststddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.eastStdDeviation)
}

// float northVelocity = 17;
inline void PBGnssLocationInfoNotification::clear_northvelocity() {
  northvelocity_ = 0;
}
inline float PBGnssLocationInfoNotification::northvelocity() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.northVelocity)
  return northvelocity_;
}
inline void PBGnssLocationInfoNotification::set_northvelocity(float value) {

  northvelocity_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.northVelocity)
}

// float eastVelocity = 18;
inline void PBGnssLocationInfoNotification::clear_eastvelocity() {
  eastvelocity_ = 0;
}
inline float PBGnssLocationInfoNotification::eastvelocity() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.eastVelocity)
  return eastvelocity_;
}
inline void PBGnssLocationInfoNotification::set_eastvelocity(float value) {

  eastvelocity_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.eastVelocity)
}

// float upVelocity = 19;
inline void PBGnssLocationInfoNotification::clear_upvelocity() {
  upvelocity_ = 0;
}
inline float PBGnssLocationInfoNotification::upvelocity() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.upVelocity)
  return upvelocity_;
}
inline void PBGnssLocationInfoNotification::set_upvelocity(float value) {

  upvelocity_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.upVelocity)
}

// float northVelocityStdDeviation = 20;
inline void PBGnssLocationInfoNotification::clear_northvelocitystddeviation() {
  northvelocitystddeviation_ = 0;
}
inline float PBGnssLocationInfoNotification::northvelocitystddeviation() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.northVelocityStdDeviation)
  return northvelocitystddeviation_;
}
inline void PBGnssLocationInfoNotification::set_northvelocitystddeviation(float value) {

  northvelocitystddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.northVelocityStdDeviation)
}

// float eastVelocityStdDeviation = 21;
inline void PBGnssLocationInfoNotification::clear_eastvelocitystddeviation() {
  eastvelocitystddeviation_ = 0;
}
inline float PBGnssLocationInfoNotification::eastvelocitystddeviation() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.eastVelocityStdDeviation)
  return eastvelocitystddeviation_;
}
inline void PBGnssLocationInfoNotification::set_eastvelocitystddeviation(float value) {

  eastvelocitystddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.eastVelocityStdDeviation)
}

// float upVelocityStdDeviation = 22;
inline void PBGnssLocationInfoNotification::clear_upvelocitystddeviation() {
  upvelocitystddeviation_ = 0;
}
inline float PBGnssLocationInfoNotification::upvelocitystddeviation() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.upVelocityStdDeviation)
  return upvelocitystddeviation_;
}
inline void PBGnssLocationInfoNotification::set_upvelocitystddeviation(float value) {

  upvelocitystddeviation_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.upVelocityStdDeviation)
}

// uint32 numSvUsedInPosition = 23;
inline void PBGnssLocationInfoNotification::clear_numsvusedinposition() {
  numsvusedinposition_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::numsvusedinposition() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.numSvUsedInPosition)
  return numsvusedinposition_;
}
inline void PBGnssLocationInfoNotification::set_numsvusedinposition(::google::protobuf::uint32 value) {

  numsvusedinposition_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.numSvUsedInPosition)
}

// .PBGnssLocationSvUsedInPosition svUsedInPosition = 24;
inline bool PBGnssLocationInfoNotification::has_svusedinposition() const {
  return this != internal_default_instance() && svusedinposition_ != NULL;
}
inline void PBGnssLocationInfoNotification::clear_svusedinposition() {
  if (GetArenaNoVirtual() == NULL && svusedinposition_ != NULL) delete svusedinposition_;
  svusedinposition_ = NULL;
}
inline const ::PBGnssLocationSvUsedInPosition& PBGnssLocationInfoNotification::svusedinposition() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.svUsedInPosition)
  return svusedinposition_ != NULL ? *svusedinposition_
                         : *::PBGnssLocationSvUsedInPosition::internal_default_instance();
}
inline ::PBGnssLocationSvUsedInPosition* PBGnssLocationInfoNotification::mutable_svusedinposition() {

  if (svusedinposition_ == NULL) {
    svusedinposition_ = new ::PBGnssLocationSvUsedInPosition;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssLocationInfoNotification.svUsedInPosition)
  return svusedinposition_;
}
inline ::PBGnssLocationSvUsedInPosition* PBGnssLocationInfoNotification::release_svusedinposition() {
  // @@protoc_insertion_point(field_release:PBGnssLocationInfoNotification.svUsedInPosition)

  ::PBGnssLocationSvUsedInPosition* temp = svusedinposition_;
  svusedinposition_ = NULL;
  return temp;
}
inline void PBGnssLocationInfoNotification::set_allocated_svusedinposition(::PBGnssLocationSvUsedInPosition* svusedinposition) {
  delete svusedinposition_;
  svusedinposition_ = svusedinposition;
  if (svusedinposition) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssLocationInfoNotification.svUsedInPosition)
}

// uint32 navSolutionMask = 25;
inline void PBGnssLocationInfoNotification::clear_navsolutionmask() {
  navsolutionmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::navsolutionmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.navSolutionMask)
  return navsolutionmask_;
}
inline void PBGnssLocationInfoNotification::set_navsolutionmask(::google::protobuf::uint32 value) {

  navsolutionmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.navSolutionMask)
}

// .PBLocApiGnssLocationPositionDynamics bodyFrameData = 26;
inline bool PBGnssLocationInfoNotification::has_bodyframedata() const {
  return this != internal_default_instance() && bodyframedata_ != NULL;
}
inline void PBGnssLocationInfoNotification::clear_bodyframedata() {
  if (GetArenaNoVirtual() == NULL && bodyframedata_ != NULL) delete bodyframedata_;
  bodyframedata_ = NULL;
}
inline const ::PBLocApiGnssLocationPositionDynamics& PBGnssLocationInfoNotification::bodyframedata() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.bodyFrameData)
  return bodyframedata_ != NULL ? *bodyframedata_
                         : *::PBLocApiGnssLocationPositionDynamics::internal_default_instance();
}
inline ::PBLocApiGnssLocationPositionDynamics* PBGnssLocationInfoNotification::mutable_bodyframedata() {

  if (bodyframedata_ == NULL) {
    bodyframedata_ = new ::PBLocApiGnssLocationPositionDynamics;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssLocationInfoNotification.bodyFrameData)
  return bodyframedata_;
}
inline ::PBLocApiGnssLocationPositionDynamics* PBGnssLocationInfoNotification::release_bodyframedata() {
  // @@protoc_insertion_point(field_release:PBGnssLocationInfoNotification.bodyFrameData)

  ::PBLocApiGnssLocationPositionDynamics* temp = bodyframedata_;
  bodyframedata_ = NULL;
  return temp;
}
inline void PBGnssLocationInfoNotification::set_allocated_bodyframedata(::PBLocApiGnssLocationPositionDynamics* bodyframedata) {
  delete bodyframedata_;
  bodyframedata_ = bodyframedata;
  if (bodyframedata) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssLocationInfoNotification.bodyFrameData)
}

// .PBLocApiGnssSystemTime gnssSystemTime = 27;
inline bool PBGnssLocationInfoNotification::has_gnsssystemtime() const {
  return this != internal_default_instance() && gnsssystemtime_ != NULL;
}
inline void PBGnssLocationInfoNotification::clear_gnsssystemtime() {
  if (GetArenaNoVirtual() == NULL && gnsssystemtime_ != NULL) delete gnsssystemtime_;
  gnsssystemtime_ = NULL;
}
inline const ::PBLocApiGnssSystemTime& PBGnssLocationInfoNotification::gnsssystemtime() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.gnssSystemTime)
  return gnsssystemtime_ != NULL ? *gnsssystemtime_
                         : *::PBLocApiGnssSystemTime::internal_default_instance();
}
inline ::PBLocApiGnssSystemTime* PBGnssLocationInfoNotification::mutable_gnsssystemtime() {

  if (gnsssystemtime_ == NULL) {
    gnsssystemtime_ = new ::PBLocApiGnssSystemTime;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssLocationInfoNotification.gnssSystemTime)
  return gnsssystemtime_;
}
inline ::PBLocApiGnssSystemTime* PBGnssLocationInfoNotification::release_gnsssystemtime() {
  // @@protoc_insertion_point(field_release:PBGnssLocationInfoNotification.gnssSystemTime)

  ::PBLocApiGnssSystemTime* temp = gnsssystemtime_;
  gnsssystemtime_ = NULL;
  return temp;
}
inline void PBGnssLocationInfoNotification::set_allocated_gnsssystemtime(::PBLocApiGnssSystemTime* gnsssystemtime) {
  delete gnsssystemtime_;
  gnsssystemtime_ = gnsssystemtime;
  if (gnsssystemtime) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssLocationInfoNotification.gnssSystemTime)
}

// uint32 numOfMeasReceived = 28;
inline void PBGnssLocationInfoNotification::clear_numofmeasreceived() {
  numofmeasreceived_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::numofmeasreceived() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.numOfMeasReceived)
  return numofmeasreceived_;
}
inline void PBGnssLocationInfoNotification::set_numofmeasreceived(::google::protobuf::uint32 value) {

  numofmeasreceived_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.numOfMeasReceived)
}

// repeated .PBGnssMeasUsageInfo measUsageInfo = 29;
inline int PBGnssLocationInfoNotification::measusageinfo_size() const {
  return measusageinfo_.size();
}
inline void PBGnssLocationInfoNotification::clear_measusageinfo() {
  measusageinfo_.Clear();
}
inline const ::PBGnssMeasUsageInfo& PBGnssLocationInfoNotification::measusageinfo(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.measUsageInfo)
  return measusageinfo_.Get(index);
}
inline ::PBGnssMeasUsageInfo* PBGnssLocationInfoNotification::mutable_measusageinfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBGnssLocationInfoNotification.measUsageInfo)
  return measusageinfo_.Mutable(index);
}
inline ::PBGnssMeasUsageInfo* PBGnssLocationInfoNotification::add_measusageinfo() {
  // @@protoc_insertion_point(field_add:PBGnssLocationInfoNotification.measUsageInfo)
  return measusageinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBGnssMeasUsageInfo >*
PBGnssLocationInfoNotification::mutable_measusageinfo() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssLocationInfoNotification.measUsageInfo)
  return &measusageinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGnssMeasUsageInfo >&
PBGnssLocationInfoNotification::measusageinfo() const {
  // @@protoc_insertion_point(field_list:PBGnssLocationInfoNotification.measUsageInfo)
  return measusageinfo_;
}

// uint32 leapSeconds = 30;
inline void PBGnssLocationInfoNotification::clear_leapseconds() {
  leapseconds_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::leapseconds() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.leapSeconds)
  return leapseconds_;
}
inline void PBGnssLocationInfoNotification::set_leapseconds(::google::protobuf::uint32 value) {

  leapseconds_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.leapSeconds)
}

// float timeUncMs = 31;
inline void PBGnssLocationInfoNotification::clear_timeuncms() {
  timeuncms_ = 0;
}
inline float PBGnssLocationInfoNotification::timeuncms() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.timeUncMs)
  return timeuncms_;
}
inline void PBGnssLocationInfoNotification::set_timeuncms(float value) {

  timeuncms_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.timeUncMs)
}

// uint32 calibrationConfidence = 32;
inline void PBGnssLocationInfoNotification::clear_calibrationconfidence() {
  calibrationconfidence_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::calibrationconfidence() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.calibrationConfidence)
  return calibrationconfidence_;
}
inline void PBGnssLocationInfoNotification::set_calibrationconfidence(::google::protobuf::uint32 value) {

  calibrationconfidence_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.calibrationConfidence)
}

// uint32 calibrationStatus = 33;
inline void PBGnssLocationInfoNotification::clear_calibrationstatus() {
  calibrationstatus_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::calibrationstatus() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.calibrationStatus)
  return calibrationstatus_;
}
inline void PBGnssLocationInfoNotification::set_calibrationstatus(::google::protobuf::uint32 value) {

  calibrationstatus_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.calibrationStatus)
}

// .PBLocApiOutputEngineType locOutputEngType = 34;
inline void PBGnssLocationInfoNotification::clear_locoutputengtype() {
  locoutputengtype_ = 0;
}
inline ::PBLocApiOutputEngineType PBGnssLocationInfoNotification::locoutputengtype() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.locOutputEngType)
  return static_cast< ::PBLocApiOutputEngineType >(locoutputengtype_);
}
inline void PBGnssLocationInfoNotification::set_locoutputengtype(::PBLocApiOutputEngineType value) {

  locoutputengtype_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.locOutputEngType)
}

// uint32 locOutputEngMask = 35;
inline void PBGnssLocationInfoNotification::clear_locoutputengmask() {
  locoutputengmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::locoutputengmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.locOutputEngMask)
  return locoutputengmask_;
}
inline void PBGnssLocationInfoNotification::set_locoutputengmask(::google::protobuf::uint32 value) {

  locoutputengmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.locOutputEngMask)
}

// float conformityIndex = 36;
inline void PBGnssLocationInfoNotification::clear_conformityindex() {
  conformityindex_ = 0;
}
inline float PBGnssLocationInfoNotification::conformityindex() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.conformityIndex)
  return conformityindex_;
}
inline void PBGnssLocationInfoNotification::set_conformityindex(float value) {

  conformityindex_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.conformityIndex)
}

// .PBLLAInfo llaVRPBased = 37;
inline bool PBGnssLocationInfoNotification::has_llavrpbased() const {
  return this != internal_default_instance() && llavrpbased_ != NULL;
}
inline void PBGnssLocationInfoNotification::clear_llavrpbased() {
  if (GetArenaNoVirtual() == NULL && llavrpbased_ != NULL) delete llavrpbased_;
  llavrpbased_ = NULL;
}
inline const ::PBLLAInfo& PBGnssLocationInfoNotification::llavrpbased() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.llaVRPBased)
  return llavrpbased_ != NULL ? *llavrpbased_
                         : *::PBLLAInfo::internal_default_instance();
}
inline ::PBLLAInfo* PBGnssLocationInfoNotification::mutable_llavrpbased() {

  if (llavrpbased_ == NULL) {
    llavrpbased_ = new ::PBLLAInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssLocationInfoNotification.llaVRPBased)
  return llavrpbased_;
}
inline ::PBLLAInfo* PBGnssLocationInfoNotification::release_llavrpbased() {
  // @@protoc_insertion_point(field_release:PBGnssLocationInfoNotification.llaVRPBased)

  ::PBLLAInfo* temp = llavrpbased_;
  llavrpbased_ = NULL;
  return temp;
}
inline void PBGnssLocationInfoNotification::set_allocated_llavrpbased(::PBLLAInfo* llavrpbased) {
  delete llavrpbased_;
  llavrpbased_ = llavrpbased;
  if (llavrpbased) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssLocationInfoNotification.llaVRPBased)
}

// repeated float enuVelocityVRPBased = 38;
inline int PBGnssLocationInfoNotification::enuvelocityvrpbased_size() const {
  return enuvelocityvrpbased_.size();
}
inline void PBGnssLocationInfoNotification::clear_enuvelocityvrpbased() {
  enuvelocityvrpbased_.Clear();
}
inline float PBGnssLocationInfoNotification::enuvelocityvrpbased(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.enuVelocityVRPBased)
  return enuvelocityvrpbased_.Get(index);
}
inline void PBGnssLocationInfoNotification::set_enuvelocityvrpbased(int index, float value) {
  enuvelocityvrpbased_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.enuVelocityVRPBased)
}
inline void PBGnssLocationInfoNotification::add_enuvelocityvrpbased(float value) {
  enuvelocityvrpbased_.Add(value);
  // @@protoc_insertion_point(field_add:PBGnssLocationInfoNotification.enuVelocityVRPBased)
}
inline const ::google::protobuf::RepeatedField< float >&
PBGnssLocationInfoNotification::enuvelocityvrpbased() const {
  // @@protoc_insertion_point(field_list:PBGnssLocationInfoNotification.enuVelocityVRPBased)
  return enuvelocityvrpbased_;
}
inline ::google::protobuf::RepeatedField< float >*
PBGnssLocationInfoNotification::mutable_enuvelocityvrpbased() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssLocationInfoNotification.enuVelocityVRPBased)
  return &enuvelocityvrpbased_;
}

// uint32 drSolutionStatusMask = 39;
inline void PBGnssLocationInfoNotification::clear_drsolutionstatusmask() {
  drsolutionstatusmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssLocationInfoNotification::drsolutionstatusmask() const {
  // @@protoc_insertion_point(field_get:PBGnssLocationInfoNotification.drSolutionStatusMask)
  return drsolutionstatusmask_;
}
inline void PBGnssLocationInfoNotification::set_drsolutionstatusmask(::google::protobuf::uint32 value) {

  drsolutionstatusmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssLocationInfoNotification.drSolutionStatusMask)
}

// -------------------------------------------------------------------

// PBGnssDataNotification

// uint32 numberSignalTypes = 1;
inline void PBGnssDataNotification::clear_numbersignaltypes() {
  numbersignaltypes_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssDataNotification::numbersignaltypes() const {
  // @@protoc_insertion_point(field_get:PBGnssDataNotification.numberSignalTypes)
  return numbersignaltypes_;
}
inline void PBGnssDataNotification::set_numbersignaltypes(::google::protobuf::uint32 value) {

  numbersignaltypes_ = value;
  // @@protoc_insertion_point(field_set:PBGnssDataNotification.numberSignalTypes)
}

// repeated uint64 gnssDataMask = 2;
inline int PBGnssDataNotification::gnssdatamask_size() const {
  return gnssdatamask_.size();
}
inline void PBGnssDataNotification::clear_gnssdatamask() {
  gnssdatamask_.Clear();
}
inline ::google::protobuf::uint64 PBGnssDataNotification::gnssdatamask(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssDataNotification.gnssDataMask)
  return gnssdatamask_.Get(index);
}
inline void PBGnssDataNotification::set_gnssdatamask(int index, ::google::protobuf::uint64 value) {
  gnssdatamask_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGnssDataNotification.gnssDataMask)
}
inline void PBGnssDataNotification::add_gnssdatamask(::google::protobuf::uint64 value) {
  gnssdatamask_.Add(value);
  // @@protoc_insertion_point(field_add:PBGnssDataNotification.gnssDataMask)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PBGnssDataNotification::gnssdatamask() const {
  // @@protoc_insertion_point(field_list:PBGnssDataNotification.gnssDataMask)
  return gnssdatamask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PBGnssDataNotification::mutable_gnssdatamask() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssDataNotification.gnssDataMask)
  return &gnssdatamask_;
}

// repeated double jammerInd = 3;
inline int PBGnssDataNotification::jammerind_size() const {
  return jammerind_.size();
}
inline void PBGnssDataNotification::clear_jammerind() {
  jammerind_.Clear();
}
inline double PBGnssDataNotification::jammerind(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssDataNotification.jammerInd)
  return jammerind_.Get(index);
}
inline void PBGnssDataNotification::set_jammerind(int index, double value) {
  jammerind_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGnssDataNotification.jammerInd)
}
inline void PBGnssDataNotification::add_jammerind(double value) {
  jammerind_.Add(value);
  // @@protoc_insertion_point(field_add:PBGnssDataNotification.jammerInd)
}
inline const ::google::protobuf::RepeatedField< double >&
PBGnssDataNotification::jammerind() const {
  // @@protoc_insertion_point(field_list:PBGnssDataNotification.jammerInd)
  return jammerind_;
}
inline ::google::protobuf::RepeatedField< double >*
PBGnssDataNotification::mutable_jammerind() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssDataNotification.jammerInd)
  return &jammerind_;
}

// repeated double agc = 4;
inline int PBGnssDataNotification::agc_size() const {
  return agc_.size();
}
inline void PBGnssDataNotification::clear_agc() {
  agc_.Clear();
}
inline double PBGnssDataNotification::agc(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssDataNotification.agc)
  return agc_.Get(index);
}
inline void PBGnssDataNotification::set_agc(int index, double value) {
  agc_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGnssDataNotification.agc)
}
inline void PBGnssDataNotification::add_agc(double value) {
  agc_.Add(value);
  // @@protoc_insertion_point(field_add:PBGnssDataNotification.agc)
}
inline const ::google::protobuf::RepeatedField< double >&
PBGnssDataNotification::agc() const {
  // @@protoc_insertion_point(field_list:PBGnssDataNotification.agc)
  return agc_;
}
inline ::google::protobuf::RepeatedField< double >*
PBGnssDataNotification::mutable_agc() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssDataNotification.agc)
  return &agc_;
}

// -------------------------------------------------------------------

// PBGnssMeasurementsNotification

// repeated .PBGnssMeasurementsData measurements = 1;
inline int PBGnssMeasurementsNotification::measurements_size() const {
  return measurements_.size();
}
inline void PBGnssMeasurementsNotification::clear_measurements() {
  measurements_.Clear();
}
inline const ::PBGnssMeasurementsData& PBGnssMeasurementsNotification::measurements(int index) const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsNotification.measurements)
  return measurements_.Get(index);
}
inline ::PBGnssMeasurementsData* PBGnssMeasurementsNotification::mutable_measurements(int index) {
  // @@protoc_insertion_point(field_mutable:PBGnssMeasurementsNotification.measurements)
  return measurements_.Mutable(index);
}
inline ::PBGnssMeasurementsData* PBGnssMeasurementsNotification::add_measurements() {
  // @@protoc_insertion_point(field_add:PBGnssMeasurementsNotification.measurements)
  return measurements_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBGnssMeasurementsData >*
PBGnssMeasurementsNotification::mutable_measurements() {
  // @@protoc_insertion_point(field_mutable_list:PBGnssMeasurementsNotification.measurements)
  return &measurements_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGnssMeasurementsData >&
PBGnssMeasurementsNotification::measurements() const {
  // @@protoc_insertion_point(field_list:PBGnssMeasurementsNotification.measurements)
  return measurements_;
}

// .PBGnssMeasurementsClock clock = 2;
inline bool PBGnssMeasurementsNotification::has_clock() const {
  return this != internal_default_instance() && clock_ != NULL;
}
inline void PBGnssMeasurementsNotification::clear_clock() {
  if (GetArenaNoVirtual() == NULL && clock_ != NULL) delete clock_;
  clock_ = NULL;
}
inline const ::PBGnssMeasurementsClock& PBGnssMeasurementsNotification::clock() const {
  // @@protoc_insertion_point(field_get:PBGnssMeasurementsNotification.clock)
  return clock_ != NULL ? *clock_
                         : *::PBGnssMeasurementsClock::internal_default_instance();
}
inline ::PBGnssMeasurementsClock* PBGnssMeasurementsNotification::mutable_clock() {

  if (clock_ == NULL) {
    clock_ = new ::PBGnssMeasurementsClock;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssMeasurementsNotification.clock)
  return clock_;
}
inline ::PBGnssMeasurementsClock* PBGnssMeasurementsNotification::release_clock() {
  // @@protoc_insertion_point(field_release:PBGnssMeasurementsNotification.clock)

  ::PBGnssMeasurementsClock* temp = clock_;
  clock_ = NULL;
  return temp;
}
inline void PBGnssMeasurementsNotification::set_allocated_clock(::PBGnssMeasurementsClock* clock) {
  delete clock_;
  clock_ = clock;
  if (clock) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssMeasurementsNotification.clock)
}

// -------------------------------------------------------------------

// PBLocApiGnssSystemTimeStructType

// uint32 validityMask = 1;
inline void PBLocApiGnssSystemTimeStructType::clear_validitymask() {
  validitymask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssSystemTimeStructType::validitymask() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTimeStructType.validityMask)
  return validitymask_;
}
inline void PBLocApiGnssSystemTimeStructType::set_validitymask(::google::protobuf::uint32 value) {

  validitymask_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSystemTimeStructType.validityMask)
}

// uint32 systemWeek = 2;
inline void PBLocApiGnssSystemTimeStructType::clear_systemweek() {
  systemweek_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssSystemTimeStructType::systemweek() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTimeStructType.systemWeek)
  return systemweek_;
}
inline void PBLocApiGnssSystemTimeStructType::set_systemweek(::google::protobuf::uint32 value) {

  systemweek_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSystemTimeStructType.systemWeek)
}

// uint32 systemMsec = 3;
inline void PBLocApiGnssSystemTimeStructType::clear_systemmsec() {
  systemmsec_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssSystemTimeStructType::systemmsec() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTimeStructType.systemMsec)
  return systemmsec_;
}
inline void PBLocApiGnssSystemTimeStructType::set_systemmsec(::google::protobuf::uint32 value) {

  systemmsec_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSystemTimeStructType.systemMsec)
}

// float systemClkTimeBiasMs = 4;
inline void PBLocApiGnssSystemTimeStructType::clear_systemclktimebiasms() {
  systemclktimebiasms_ = 0;
}
inline float PBLocApiGnssSystemTimeStructType::systemclktimebiasms() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTimeStructType.systemClkTimeBiasMs)
  return systemclktimebiasms_;
}
inline void PBLocApiGnssSystemTimeStructType::set_systemclktimebiasms(float value) {

  systemclktimebiasms_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSystemTimeStructType.systemClkTimeBiasMs)
}

// float systemClkTimeBiasUncMs = 5;
inline void PBLocApiGnssSystemTimeStructType::clear_systemclktimebiasuncms() {
  systemclktimebiasuncms_ = 0;
}
inline float PBLocApiGnssSystemTimeStructType::systemclktimebiasuncms() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTimeStructType.systemClkTimeBiasUncMs)
  return systemclktimebiasuncms_;
}
inline void PBLocApiGnssSystemTimeStructType::set_systemclktimebiasuncms(float value) {

  systemclktimebiasuncms_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSystemTimeStructType.systemClkTimeBiasUncMs)
}

// uint32 refFCount = 6;
inline void PBLocApiGnssSystemTimeStructType::clear_reffcount() {
  reffcount_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssSystemTimeStructType::reffcount() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTimeStructType.refFCount)
  return reffcount_;
}
inline void PBLocApiGnssSystemTimeStructType::set_reffcount(::google::protobuf::uint32 value) {

  reffcount_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSystemTimeStructType.refFCount)
}

// uint32 numClockResets = 7;
inline void PBLocApiGnssSystemTimeStructType::clear_numclockresets() {
  numclockresets_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssSystemTimeStructType::numclockresets() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssSystemTimeStructType.numClockResets)
  return numclockresets_;
}
inline void PBLocApiGnssSystemTimeStructType::set_numclockresets(::google::protobuf::uint32 value) {

  numclockresets_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssSystemTimeStructType.numClockResets)
}

// -------------------------------------------------------------------

// PBLocApiGnssGloTimeStructType

// uint32 validityMask = 1;
inline void PBLocApiGnssGloTimeStructType::clear_validitymask() {
  validitymask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssGloTimeStructType::validitymask() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssGloTimeStructType.validityMask)
  return validitymask_;
}
inline void PBLocApiGnssGloTimeStructType::set_validitymask(::google::protobuf::uint32 value) {

  validitymask_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssGloTimeStructType.validityMask)
}

// uint32 gloFourYear = 2;
inline void PBLocApiGnssGloTimeStructType::clear_glofouryear() {
  glofouryear_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssGloTimeStructType::glofouryear() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssGloTimeStructType.gloFourYear)
  return glofouryear_;
}
inline void PBLocApiGnssGloTimeStructType::set_glofouryear(::google::protobuf::uint32 value) {

  glofouryear_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssGloTimeStructType.gloFourYear)
}

// uint32 gloDays = 3;
inline void PBLocApiGnssGloTimeStructType::clear_glodays() {
  glodays_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssGloTimeStructType::glodays() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssGloTimeStructType.gloDays)
  return glodays_;
}
inline void PBLocApiGnssGloTimeStructType::set_glodays(::google::protobuf::uint32 value) {

  glodays_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssGloTimeStructType.gloDays)
}

// uint32 gloMsec = 4;
inline void PBLocApiGnssGloTimeStructType::clear_glomsec() {
  glomsec_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssGloTimeStructType::glomsec() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssGloTimeStructType.gloMsec)
  return glomsec_;
}
inline void PBLocApiGnssGloTimeStructType::set_glomsec(::google::protobuf::uint32 value) {

  glomsec_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssGloTimeStructType.gloMsec)
}

// float gloClkTimeBias = 5;
inline void PBLocApiGnssGloTimeStructType::clear_gloclktimebias() {
  gloclktimebias_ = 0;
}
inline float PBLocApiGnssGloTimeStructType::gloclktimebias() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssGloTimeStructType.gloClkTimeBias)
  return gloclktimebias_;
}
inline void PBLocApiGnssGloTimeStructType::set_gloclktimebias(float value) {

  gloclktimebias_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssGloTimeStructType.gloClkTimeBias)
}

// float gloClkTimeUncMs = 6;
inline void PBLocApiGnssGloTimeStructType::clear_gloclktimeuncms() {
  gloclktimeuncms_ = 0;
}
inline float PBLocApiGnssGloTimeStructType::gloclktimeuncms() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssGloTimeStructType.gloClkTimeUncMs)
  return gloclktimeuncms_;
}
inline void PBLocApiGnssGloTimeStructType::set_gloclktimeuncms(float value) {

  gloclktimeuncms_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssGloTimeStructType.gloClkTimeUncMs)
}

// uint32 refFCount = 7;
inline void PBLocApiGnssGloTimeStructType::clear_reffcount() {
  reffcount_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssGloTimeStructType::reffcount() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssGloTimeStructType.refFCount)
  return reffcount_;
}
inline void PBLocApiGnssGloTimeStructType::set_reffcount(::google::protobuf::uint32 value) {

  reffcount_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssGloTimeStructType.refFCount)
}

// uint32 numClockResets = 8;
inline void PBLocApiGnssGloTimeStructType::clear_numclockresets() {
  numclockresets_ = 0u;
}
inline ::google::protobuf::uint32 PBLocApiGnssGloTimeStructType::numclockresets() const {
  // @@protoc_insertion_point(field_get:PBLocApiGnssGloTimeStructType.numClockResets)
  return numclockresets_;
}
inline void PBLocApiGnssGloTimeStructType::set_numclockresets(::google::protobuf::uint32 value) {

  numclockresets_ = value;
  // @@protoc_insertion_point(field_set:PBLocApiGnssGloTimeStructType.numClockResets)
}

// -------------------------------------------------------------------

// PBLLAInfo

// double latitude = 1;
inline void PBLLAInfo::clear_latitude() {
  latitude_ = 0;
}
inline double PBLLAInfo::latitude() const {
  // @@protoc_insertion_point(field_get:PBLLAInfo.latitude)
  return latitude_;
}
inline void PBLLAInfo::set_latitude(double value) {

  latitude_ = value;
  // @@protoc_insertion_point(field_set:PBLLAInfo.latitude)
}

// double longitude = 2;
inline void PBLLAInfo::clear_longitude() {
  longitude_ = 0;
}
inline double PBLLAInfo::longitude() const {
  // @@protoc_insertion_point(field_get:PBLLAInfo.longitude)
  return longitude_;
}
inline void PBLLAInfo::set_longitude(double value) {

  longitude_ = value;
  // @@protoc_insertion_point(field_set:PBLLAInfo.longitude)
}

// float altitude = 3;
inline void PBLLAInfo::clear_altitude() {
  altitude_ = 0;
}
inline float PBLLAInfo::altitude() const {
  // @@protoc_insertion_point(field_get:PBLLAInfo.altitude)
  return altitude_;
}
inline void PBLLAInfo::set_altitude(float value) {

  altitude_ = value;
  // @@protoc_insertion_point(field_set:PBLLAInfo.altitude)
}

// -------------------------------------------------------------------

// PBLeapSecondSystemInfo

// uint32 leapSecondInfoMask = 1;
inline void PBLeapSecondSystemInfo::clear_leapsecondinfomask() {
  leapsecondinfomask_ = 0u;
}
inline ::google::protobuf::uint32 PBLeapSecondSystemInfo::leapsecondinfomask() const {
  // @@protoc_insertion_point(field_get:PBLeapSecondSystemInfo.leapSecondInfoMask)
  return leapsecondinfomask_;
}
inline void PBLeapSecondSystemInfo::set_leapsecondinfomask(::google::protobuf::uint32 value) {

  leapsecondinfomask_ = value;
  // @@protoc_insertion_point(field_set:PBLeapSecondSystemInfo.leapSecondInfoMask)
}

// uint32 leapSecondCurrent = 2;
inline void PBLeapSecondSystemInfo::clear_leapsecondcurrent() {
  leapsecondcurrent_ = 0u;
}
inline ::google::protobuf::uint32 PBLeapSecondSystemInfo::leapsecondcurrent() const {
  // @@protoc_insertion_point(field_get:PBLeapSecondSystemInfo.leapSecondCurrent)
  return leapsecondcurrent_;
}
inline void PBLeapSecondSystemInfo::set_leapsecondcurrent(::google::protobuf::uint32 value) {

  leapsecondcurrent_ = value;
  // @@protoc_insertion_point(field_set:PBLeapSecondSystemInfo.leapSecondCurrent)
}

// .PBLeapSecondChangeInfo leapSecondChangeInfo = 3;
inline bool PBLeapSecondSystemInfo::has_leapsecondchangeinfo() const {
  return this != internal_default_instance() && leapsecondchangeinfo_ != NULL;
}
inline void PBLeapSecondSystemInfo::clear_leapsecondchangeinfo() {
  if (GetArenaNoVirtual() == NULL && leapsecondchangeinfo_ != NULL) delete leapsecondchangeinfo_;
  leapsecondchangeinfo_ = NULL;
}
inline const ::PBLeapSecondChangeInfo& PBLeapSecondSystemInfo::leapsecondchangeinfo() const {
  // @@protoc_insertion_point(field_get:PBLeapSecondSystemInfo.leapSecondChangeInfo)
  return leapsecondchangeinfo_ != NULL ? *leapsecondchangeinfo_
                         : *::PBLeapSecondChangeInfo::internal_default_instance();
}
inline ::PBLeapSecondChangeInfo* PBLeapSecondSystemInfo::mutable_leapsecondchangeinfo() {

  if (leapsecondchangeinfo_ == NULL) {
    leapsecondchangeinfo_ = new ::PBLeapSecondChangeInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBLeapSecondSystemInfo.leapSecondChangeInfo)
  return leapsecondchangeinfo_;
}
inline ::PBLeapSecondChangeInfo* PBLeapSecondSystemInfo::release_leapsecondchangeinfo() {
  // @@protoc_insertion_point(field_release:PBLeapSecondSystemInfo.leapSecondChangeInfo)

  ::PBLeapSecondChangeInfo* temp = leapsecondchangeinfo_;
  leapsecondchangeinfo_ = NULL;
  return temp;
}
inline void PBLeapSecondSystemInfo::set_allocated_leapsecondchangeinfo(::PBLeapSecondChangeInfo* leapsecondchangeinfo) {
  delete leapsecondchangeinfo_;
  leapsecondchangeinfo_ = leapsecondchangeinfo;
  if (leapsecondchangeinfo) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLeapSecondSystemInfo.leapSecondChangeInfo)
}

// -------------------------------------------------------------------

// PBLeapSecondChangeInfo

// .PBLocApiGnssSystemTimeStructType gpsTimestampLsChange = 1;
inline bool PBLeapSecondChangeInfo::has_gpstimestamplschange() const {
  return this != internal_default_instance() && gpstimestamplschange_ != NULL;
}
inline void PBLeapSecondChangeInfo::clear_gpstimestamplschange() {
  if (GetArenaNoVirtual() == NULL && gpstimestamplschange_ != NULL) delete gpstimestamplschange_;
  gpstimestamplschange_ = NULL;
}
inline const ::PBLocApiGnssSystemTimeStructType& PBLeapSecondChangeInfo::gpstimestamplschange() const {
  // @@protoc_insertion_point(field_get:PBLeapSecondChangeInfo.gpsTimestampLsChange)
  return gpstimestamplschange_ != NULL ? *gpstimestamplschange_
                         : *::PBLocApiGnssSystemTimeStructType::internal_default_instance();
}
inline ::PBLocApiGnssSystemTimeStructType* PBLeapSecondChangeInfo::mutable_gpstimestamplschange() {

  if (gpstimestamplschange_ == NULL) {
    gpstimestamplschange_ = new ::PBLocApiGnssSystemTimeStructType;
  }
  // @@protoc_insertion_point(field_mutable:PBLeapSecondChangeInfo.gpsTimestampLsChange)
  return gpstimestamplschange_;
}
inline ::PBLocApiGnssSystemTimeStructType* PBLeapSecondChangeInfo::release_gpstimestamplschange() {
  // @@protoc_insertion_point(field_release:PBLeapSecondChangeInfo.gpsTimestampLsChange)

  ::PBLocApiGnssSystemTimeStructType* temp = gpstimestamplschange_;
  gpstimestamplschange_ = NULL;
  return temp;
}
inline void PBLeapSecondChangeInfo::set_allocated_gpstimestamplschange(::PBLocApiGnssSystemTimeStructType* gpstimestamplschange) {
  delete gpstimestamplschange_;
  gpstimestamplschange_ = gpstimestamplschange;
  if (gpstimestamplschange) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLeapSecondChangeInfo.gpsTimestampLsChange)
}

// uint32 leapSecondsBeforeChange = 2;
inline void PBLeapSecondChangeInfo::clear_leapsecondsbeforechange() {
  leapsecondsbeforechange_ = 0u;
}
inline ::google::protobuf::uint32 PBLeapSecondChangeInfo::leapsecondsbeforechange() const {
  // @@protoc_insertion_point(field_get:PBLeapSecondChangeInfo.leapSecondsBeforeChange)
  return leapsecondsbeforechange_;
}
inline void PBLeapSecondChangeInfo::set_leapsecondsbeforechange(::google::protobuf::uint32 value) {

  leapsecondsbeforechange_ = value;
  // @@protoc_insertion_point(field_set:PBLeapSecondChangeInfo.leapSecondsBeforeChange)
}

// uint32 leapSecondsAfterChange = 3;
inline void PBLeapSecondChangeInfo::clear_leapsecondsafterchange() {
  leapsecondsafterchange_ = 0u;
}
inline ::google::protobuf::uint32 PBLeapSecondChangeInfo::leapsecondsafterchange() const {
  // @@protoc_insertion_point(field_get:PBLeapSecondChangeInfo.leapSecondsAfterChange)
  return leapsecondsafterchange_;
}
inline void PBLeapSecondChangeInfo::set_leapsecondsafterchange(::google::protobuf::uint32 value) {

  leapsecondsafterchange_ = value;
  // @@protoc_insertion_point(field_set:PBLeapSecondChangeInfo.leapSecondsAfterChange)
}

// -------------------------------------------------------------------

// PBLocationSystemInfo

// uint32 systemInfoMask = 1;
inline void PBLocationSystemInfo::clear_systeminfomask() {
  systeminfomask_ = 0u;
}
inline ::google::protobuf::uint32 PBLocationSystemInfo::systeminfomask() const {
  // @@protoc_insertion_point(field_get:PBLocationSystemInfo.systemInfoMask)
  return systeminfomask_;
}
inline void PBLocationSystemInfo::set_systeminfomask(::google::protobuf::uint32 value) {

  systeminfomask_ = value;
  // @@protoc_insertion_point(field_set:PBLocationSystemInfo.systemInfoMask)
}

// .PBLeapSecondSystemInfo leapSecondSysInfo = 2;
inline bool PBLocationSystemInfo::has_leapsecondsysinfo() const {
  return this != internal_default_instance() && leapsecondsysinfo_ != NULL;
}
inline void PBLocationSystemInfo::clear_leapsecondsysinfo() {
  if (GetArenaNoVirtual() == NULL && leapsecondsysinfo_ != NULL) delete leapsecondsysinfo_;
  leapsecondsysinfo_ = NULL;
}
inline const ::PBLeapSecondSystemInfo& PBLocationSystemInfo::leapsecondsysinfo() const {
  // @@protoc_insertion_point(field_get:PBLocationSystemInfo.leapSecondSysInfo)
  return leapsecondsysinfo_ != NULL ? *leapsecondsysinfo_
                         : *::PBLeapSecondSystemInfo::internal_default_instance();
}
inline ::PBLeapSecondSystemInfo* PBLocationSystemInfo::mutable_leapsecondsysinfo() {

  if (leapsecondsysinfo_ == NULL) {
    leapsecondsysinfo_ = new ::PBLeapSecondSystemInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBLocationSystemInfo.leapSecondSysInfo)
  return leapsecondsysinfo_;
}
inline ::PBLeapSecondSystemInfo* PBLocationSystemInfo::release_leapsecondsysinfo() {
  // @@protoc_insertion_point(field_release:PBLocationSystemInfo.leapSecondSysInfo)

  ::PBLeapSecondSystemInfo* temp = leapsecondsysinfo_;
  leapsecondsysinfo_ = NULL;
  return temp;
}
inline void PBLocationSystemInfo::set_allocated_leapsecondsysinfo(::PBLeapSecondSystemInfo* leapsecondsysinfo) {
  delete leapsecondsysinfo_;
  leapsecondsysinfo_ = leapsecondsysinfo;
  if (leapsecondsysinfo) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLocationSystemInfo.leapSecondSysInfo)
}

// -------------------------------------------------------------------

// PBGnssConfigRobustLocationVersion

// uint32 major = 1;
inline void PBGnssConfigRobustLocationVersion::clear_major() {
  major_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssConfigRobustLocationVersion::major() const {
  // @@protoc_insertion_point(field_get:PBGnssConfigRobustLocationVersion.major)
  return major_;
}
inline void PBGnssConfigRobustLocationVersion::set_major(::google::protobuf::uint32 value) {

  major_ = value;
  // @@protoc_insertion_point(field_set:PBGnssConfigRobustLocationVersion.major)
}

// uint32 minor = 2;
inline void PBGnssConfigRobustLocationVersion::clear_minor() {
  minor_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssConfigRobustLocationVersion::minor() const {
  // @@protoc_insertion_point(field_get:PBGnssConfigRobustLocationVersion.minor)
  return minor_;
}
inline void PBGnssConfigRobustLocationVersion::set_minor(::google::protobuf::uint32 value) {

  minor_ = value;
  // @@protoc_insertion_point(field_set:PBGnssConfigRobustLocationVersion.minor)
}

// -------------------------------------------------------------------

// PBGnssConfigRobustLocation

// uint32 validMask = 1;
inline void PBGnssConfigRobustLocation::clear_validmask() {
  validmask_ = 0u;
}
inline ::google::protobuf::uint32 PBGnssConfigRobustLocation::validmask() const {
  // @@protoc_insertion_point(field_get:PBGnssConfigRobustLocation.validMask)
  return validmask_;
}
inline void PBGnssConfigRobustLocation::set_validmask(::google::protobuf::uint32 value) {

  validmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssConfigRobustLocation.validMask)
}

// bool enabled = 2;
inline void PBGnssConfigRobustLocation::clear_enabled() {
  enabled_ = false;
}
inline bool PBGnssConfigRobustLocation::enabled() const {
  // @@protoc_insertion_point(field_get:PBGnssConfigRobustLocation.enabled)
  return enabled_;
}
inline void PBGnssConfigRobustLocation::set_enabled(bool value) {

  enabled_ = value;
  // @@protoc_insertion_point(field_set:PBGnssConfigRobustLocation.enabled)
}

// bool enabledForE911 = 3;
inline void PBGnssConfigRobustLocation::clear_enabledfore911() {
  enabledfore911_ = false;
}
inline bool PBGnssConfigRobustLocation::enabledfore911() const {
  // @@protoc_insertion_point(field_get:PBGnssConfigRobustLocation.enabledForE911)
  return enabledfore911_;
}
inline void PBGnssConfigRobustLocation::set_enabledfore911(bool value) {

  enabledfore911_ = value;
  // @@protoc_insertion_point(field_set:PBGnssConfigRobustLocation.enabledForE911)
}

// .PBGnssConfigRobustLocationVersion version = 4;
inline bool PBGnssConfigRobustLocation::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline void PBGnssConfigRobustLocation::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) delete version_;
  version_ = NULL;
}
inline const ::PBGnssConfigRobustLocationVersion& PBGnssConfigRobustLocation::version() const {
  // @@protoc_insertion_point(field_get:PBGnssConfigRobustLocation.version)
  return version_ != NULL ? *version_
                         : *::PBGnssConfigRobustLocationVersion::internal_default_instance();
}
inline ::PBGnssConfigRobustLocationVersion* PBGnssConfigRobustLocation::mutable_version() {

  if (version_ == NULL) {
    version_ = new ::PBGnssConfigRobustLocationVersion;
  }
  // @@protoc_insertion_point(field_mutable:PBGnssConfigRobustLocation.version)
  return version_;
}
inline ::PBGnssConfigRobustLocationVersion* PBGnssConfigRobustLocation::release_version() {
  // @@protoc_insertion_point(field_release:PBGnssConfigRobustLocation.version)

  ::PBGnssConfigRobustLocationVersion* temp = version_;
  version_ = NULL;
  return temp;
}
inline void PBGnssConfigRobustLocation::set_allocated_version(::PBGnssConfigRobustLocationVersion* version) {
  delete version_;
  version_ = version;
  if (version) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBGnssConfigRobustLocation.version)
}

// -------------------------------------------------------------------

// PBGnssSvTypeConfig

// uint64 enabledSvTypesMask = 1;
inline void PBGnssSvTypeConfig::clear_enabledsvtypesmask() {
  enabledsvtypesmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvTypeConfig::enabledsvtypesmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvTypeConfig.enabledSvTypesMask)
  return enabledsvtypesmask_;
}
inline void PBGnssSvTypeConfig::set_enabledsvtypesmask(::google::protobuf::uint64 value) {

  enabledsvtypesmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvTypeConfig.enabledSvTypesMask)
}

// uint64 blacklistedSvTypesMask = 2;
inline void PBGnssSvTypeConfig::clear_blacklistedsvtypesmask() {
  blacklistedsvtypesmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvTypeConfig::blacklistedsvtypesmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvTypeConfig.blacklistedSvTypesMask)
  return blacklistedsvtypesmask_;
}
inline void PBGnssSvTypeConfig::set_blacklistedsvtypesmask(::google::protobuf::uint64 value) {

  blacklistedsvtypesmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvTypeConfig.blacklistedSvTypesMask)
}

// -------------------------------------------------------------------

// PBGnssSvIdConfig

// uint64 gloBlacklistSvMask = 1;
inline void PBGnssSvIdConfig::clear_globlacklistsvmask() {
  globlacklistsvmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvIdConfig::globlacklistsvmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvIdConfig.gloBlacklistSvMask)
  return globlacklistsvmask_;
}
inline void PBGnssSvIdConfig::set_globlacklistsvmask(::google::protobuf::uint64 value) {

  globlacklistsvmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvIdConfig.gloBlacklistSvMask)
}

// uint64 bdsBlacklistSvMask = 2;
inline void PBGnssSvIdConfig::clear_bdsblacklistsvmask() {
  bdsblacklistsvmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvIdConfig::bdsblacklistsvmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvIdConfig.bdsBlacklistSvMask)
  return bdsblacklistsvmask_;
}
inline void PBGnssSvIdConfig::set_bdsblacklistsvmask(::google::protobuf::uint64 value) {

  bdsblacklistsvmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvIdConfig.bdsBlacklistSvMask)
}

// uint64 qzssBlacklistSvMask = 3;
inline void PBGnssSvIdConfig::clear_qzssblacklistsvmask() {
  qzssblacklistsvmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvIdConfig::qzssblacklistsvmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvIdConfig.qzssBlacklistSvMask)
  return qzssblacklistsvmask_;
}
inline void PBGnssSvIdConfig::set_qzssblacklistsvmask(::google::protobuf::uint64 value) {

  qzssblacklistsvmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvIdConfig.qzssBlacklistSvMask)
}

// uint64 galBlacklistSvMask = 4;
inline void PBGnssSvIdConfig::clear_galblacklistsvmask() {
  galblacklistsvmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvIdConfig::galblacklistsvmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvIdConfig.galBlacklistSvMask)
  return galblacklistsvmask_;
}
inline void PBGnssSvIdConfig::set_galblacklistsvmask(::google::protobuf::uint64 value) {

  galblacklistsvmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvIdConfig.galBlacklistSvMask)
}

// uint64 sbasBlacklistSvMask = 5;
inline void PBGnssSvIdConfig::clear_sbasblacklistsvmask() {
  sbasblacklistsvmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvIdConfig::sbasblacklistsvmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvIdConfig.sbasBlacklistSvMask)
  return sbasblacklistsvmask_;
}
inline void PBGnssSvIdConfig::set_sbasblacklistsvmask(::google::protobuf::uint64 value) {

  sbasblacklistsvmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvIdConfig.sbasBlacklistSvMask)
}

// uint64 navicBlacklistSvMask = 6;
inline void PBGnssSvIdConfig::clear_navicblacklistsvmask() {
  navicblacklistsvmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGnssSvIdConfig::navicblacklistsvmask() const {
  // @@protoc_insertion_point(field_get:PBGnssSvIdConfig.navicBlacklistSvMask)
  return navicblacklistsvmask_;
}
inline void PBGnssSvIdConfig::set_navicblacklistsvmask(::google::protobuf::uint64 value) {

  navicblacklistsvmask_ = value;
  // @@protoc_insertion_point(field_set:PBGnssSvIdConfig.navicBlacklistSvMask)
}

// -------------------------------------------------------------------

// PBLIALeverArmParams

// float forwardOffsetMeters = 1;
inline void PBLIALeverArmParams::clear_forwardoffsetmeters() {
  forwardoffsetmeters_ = 0;
}
inline float PBLIALeverArmParams::forwardoffsetmeters() const {
  // @@protoc_insertion_point(field_get:PBLIALeverArmParams.forwardOffsetMeters)
  return forwardoffsetmeters_;
}
inline void PBLIALeverArmParams::set_forwardoffsetmeters(float value) {

  forwardoffsetmeters_ = value;
  // @@protoc_insertion_point(field_set:PBLIALeverArmParams.forwardOffsetMeters)
}

// float sidewaysOffsetMeters = 2;
inline void PBLIALeverArmParams::clear_sidewaysoffsetmeters() {
  sidewaysoffsetmeters_ = 0;
}
inline float PBLIALeverArmParams::sidewaysoffsetmeters() const {
  // @@protoc_insertion_point(field_get:PBLIALeverArmParams.sidewaysOffsetMeters)
  return sidewaysoffsetmeters_;
}
inline void PBLIALeverArmParams::set_sidewaysoffsetmeters(float value) {

  sidewaysoffsetmeters_ = value;
  // @@protoc_insertion_point(field_set:PBLIALeverArmParams.sidewaysOffsetMeters)
}

// float upOffsetMeters = 3;
inline void PBLIALeverArmParams::clear_upoffsetmeters() {
  upoffsetmeters_ = 0;
}
inline float PBLIALeverArmParams::upoffsetmeters() const {
  // @@protoc_insertion_point(field_get:PBLIALeverArmParams.upOffsetMeters)
  return upoffsetmeters_;
}
inline void PBLIALeverArmParams::set_upoffsetmeters(float value) {

  upoffsetmeters_ = value;
  // @@protoc_insertion_point(field_set:PBLIALeverArmParams.upOffsetMeters)
}

// -------------------------------------------------------------------

// PBLIALeverArmConfigInfo

// uint32 leverArmValidMask = 1;
inline void PBLIALeverArmConfigInfo::clear_leverarmvalidmask() {
  leverarmvalidmask_ = 0u;
}
inline ::google::protobuf::uint32 PBLIALeverArmConfigInfo::leverarmvalidmask() const {
  // @@protoc_insertion_point(field_get:PBLIALeverArmConfigInfo.leverArmValidMask)
  return leverarmvalidmask_;
}
inline void PBLIALeverArmConfigInfo::set_leverarmvalidmask(::google::protobuf::uint32 value) {

  leverarmvalidmask_ = value;
  // @@protoc_insertion_point(field_set:PBLIALeverArmConfigInfo.leverArmValidMask)
}

// .PBLIALeverArmParams gnssToVRP = 2;
inline bool PBLIALeverArmConfigInfo::has_gnsstovrp() const {
  return this != internal_default_instance() && gnsstovrp_ != NULL;
}
inline void PBLIALeverArmConfigInfo::clear_gnsstovrp() {
  if (GetArenaNoVirtual() == NULL && gnsstovrp_ != NULL) delete gnsstovrp_;
  gnsstovrp_ = NULL;
}
inline const ::PBLIALeverArmParams& PBLIALeverArmConfigInfo::gnsstovrp() const {
  // @@protoc_insertion_point(field_get:PBLIALeverArmConfigInfo.gnssToVRP)
  return gnsstovrp_ != NULL ? *gnsstovrp_
                         : *::PBLIALeverArmParams::internal_default_instance();
}
inline ::PBLIALeverArmParams* PBLIALeverArmConfigInfo::mutable_gnsstovrp() {

  if (gnsstovrp_ == NULL) {
    gnsstovrp_ = new ::PBLIALeverArmParams;
  }
  // @@protoc_insertion_point(field_mutable:PBLIALeverArmConfigInfo.gnssToVRP)
  return gnsstovrp_;
}
inline ::PBLIALeverArmParams* PBLIALeverArmConfigInfo::release_gnsstovrp() {
  // @@protoc_insertion_point(field_release:PBLIALeverArmConfigInfo.gnssToVRP)

  ::PBLIALeverArmParams* temp = gnsstovrp_;
  gnsstovrp_ = NULL;
  return temp;
}
inline void PBLIALeverArmConfigInfo::set_allocated_gnsstovrp(::PBLIALeverArmParams* gnsstovrp) {
  delete gnsstovrp_;
  gnsstovrp_ = gnsstovrp;
  if (gnsstovrp) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLIALeverArmConfigInfo.gnssToVRP)
}

// .PBLIALeverArmParams drImuToGnss = 3;
inline bool PBLIALeverArmConfigInfo::has_drimutognss() const {
  return this != internal_default_instance() && drimutognss_ != NULL;
}
inline void PBLIALeverArmConfigInfo::clear_drimutognss() {
  if (GetArenaNoVirtual() == NULL && drimutognss_ != NULL) delete drimutognss_;
  drimutognss_ = NULL;
}
inline const ::PBLIALeverArmParams& PBLIALeverArmConfigInfo::drimutognss() const {
  // @@protoc_insertion_point(field_get:PBLIALeverArmConfigInfo.drImuToGnss)
  return drimutognss_ != NULL ? *drimutognss_
                         : *::PBLIALeverArmParams::internal_default_instance();
}
inline ::PBLIALeverArmParams* PBLIALeverArmConfigInfo::mutable_drimutognss() {

  if (drimutognss_ == NULL) {
    drimutognss_ = new ::PBLIALeverArmParams;
  }
  // @@protoc_insertion_point(field_mutable:PBLIALeverArmConfigInfo.drImuToGnss)
  return drimutognss_;
}
inline ::PBLIALeverArmParams* PBLIALeverArmConfigInfo::release_drimutognss() {
  // @@protoc_insertion_point(field_release:PBLIALeverArmConfigInfo.drImuToGnss)

  ::PBLIALeverArmParams* temp = drimutognss_;
  drimutognss_ = NULL;
  return temp;
}
inline void PBLIALeverArmConfigInfo::set_allocated_drimutognss(::PBLIALeverArmParams* drimutognss) {
  delete drimutognss_;
  drimutognss_ = drimutognss;
  if (drimutognss) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLIALeverArmConfigInfo.drImuToGnss)
}

// .PBLIALeverArmParams veppImuToGnss = 4;
inline bool PBLIALeverArmConfigInfo::has_veppimutognss() const {
  return this != internal_default_instance() && veppimutognss_ != NULL;
}
inline void PBLIALeverArmConfigInfo::clear_veppimutognss() {
  if (GetArenaNoVirtual() == NULL && veppimutognss_ != NULL) delete veppimutognss_;
  veppimutognss_ = NULL;
}
inline const ::PBLIALeverArmParams& PBLIALeverArmConfigInfo::veppimutognss() const {
  // @@protoc_insertion_point(field_get:PBLIALeverArmConfigInfo.veppImuToGnss)
  return veppimutognss_ != NULL ? *veppimutognss_
                         : *::PBLIALeverArmParams::internal_default_instance();
}
inline ::PBLIALeverArmParams* PBLIALeverArmConfigInfo::mutable_veppimutognss() {

  if (veppimutognss_ == NULL) {
    veppimutognss_ = new ::PBLIALeverArmParams;
  }
  // @@protoc_insertion_point(field_mutable:PBLIALeverArmConfigInfo.veppImuToGnss)
  return veppimutognss_;
}
inline ::PBLIALeverArmParams* PBLIALeverArmConfigInfo::release_veppimutognss() {
  // @@protoc_insertion_point(field_release:PBLIALeverArmConfigInfo.veppImuToGnss)

  ::PBLIALeverArmParams* temp = veppimutognss_;
  veppimutognss_ = NULL;
  return temp;
}
inline void PBLIALeverArmConfigInfo::set_allocated_veppimutognss(::PBLIALeverArmParams* veppimutognss) {
  delete veppimutognss_;
  veppimutognss_ = veppimutognss;
  if (veppimutognss) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBLIALeverArmConfigInfo.veppImuToGnss)
}

// -------------------------------------------------------------------

// PBLIABodyToSensorMountParams

// float rollOffset = 1;
inline void PBLIABodyToSensorMountParams::clear_rolloffset() {
  rolloffset_ = 0;
}
inline float PBLIABodyToSensorMountParams::rolloffset() const {
  // @@protoc_insertion_point(field_get:PBLIABodyToSensorMountParams.rollOffset)
  return rolloffset_;
}
inline void PBLIABodyToSensorMountParams::set_rolloffset(float value) {

  rolloffset_ = value;
  // @@protoc_insertion_point(field_set:PBLIABodyToSensorMountParams.rollOffset)
}

// float yawOffset = 2;
inline void PBLIABodyToSensorMountParams::clear_yawoffset() {
  yawoffset_ = 0;
}
inline float PBLIABodyToSensorMountParams::yawoffset() const {
  // @@protoc_insertion_point(field_get:PBLIABodyToSensorMountParams.yawOffset)
  return yawoffset_;
}
inline void PBLIABodyToSensorMountParams::set_yawoffset(float value) {

  yawoffset_ = value;
  // @@protoc_insertion_point(field_set:PBLIABodyToSensorMountParams.yawOffset)
}

// float pitchOffset = 3;
inline void PBLIABodyToSensorMountParams::clear_pitchoffset() {
  pitchoffset_ = 0;
}
inline float PBLIABodyToSensorMountParams::pitchoffset() const {
  // @@protoc_insertion_point(field_get:PBLIABodyToSensorMountParams.pitchOffset)
  return pitchoffset_;
}
inline void PBLIABodyToSensorMountParams::set_pitchoffset(float value) {

  pitchoffset_ = value;
  // @@protoc_insertion_point(field_set:PBLIABodyToSensorMountParams.pitchOffset)
}

// float offsetUnc = 4;
inline void PBLIABodyToSensorMountParams::clear_offsetunc() {
  offsetunc_ = 0;
}
inline float PBLIABodyToSensorMountParams::offsetunc() const {
  // @@protoc_insertion_point(field_get:PBLIABodyToSensorMountParams.offsetUnc)
  return offsetunc_;
}
inline void PBLIABodyToSensorMountParams::set_offsetunc(float value) {

  offsetunc_ = value;
  // @@protoc_insertion_point(field_set:PBLIABodyToSensorMountParams.offsetUnc)
}

// -------------------------------------------------------------------

// PBDeadReckoningEngineConfig

// uint64 validMask = 1;
inline void PBDeadReckoningEngineConfig::clear_validmask() {
  validmask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBDeadReckoningEngineConfig::validmask() const {
  // @@protoc_insertion_point(field_get:PBDeadReckoningEngineConfig.validMask)
  return validmask_;
}
inline void PBDeadReckoningEngineConfig::set_validmask(::google::protobuf::uint64 value) {

  validmask_ = value;
  // @@protoc_insertion_point(field_set:PBDeadReckoningEngineConfig.validMask)
}

// .PBLIABodyToSensorMountParams bodyToSensorMountParams = 2;
inline bool PBDeadReckoningEngineConfig::has_bodytosensormountparams() const {
  return this != internal_default_instance() && bodytosensormountparams_ != NULL;
}
inline void PBDeadReckoningEngineConfig::clear_bodytosensormountparams() {
  if (GetArenaNoVirtual() == NULL && bodytosensormountparams_ != NULL) delete bodytosensormountparams_;
  bodytosensormountparams_ = NULL;
}
inline const ::PBLIABodyToSensorMountParams& PBDeadReckoningEngineConfig::bodytosensormountparams() const {
  // @@protoc_insertion_point(field_get:PBDeadReckoningEngineConfig.bodyToSensorMountParams)
  return bodytosensormountparams_ != NULL ? *bodytosensormountparams_
                         : *::PBLIABodyToSensorMountParams::internal_default_instance();
}
inline ::PBLIABodyToSensorMountParams* PBDeadReckoningEngineConfig::mutable_bodytosensormountparams() {

  if (bodytosensormountparams_ == NULL) {
    bodytosensormountparams_ = new ::PBLIABodyToSensorMountParams;
  }
  // @@protoc_insertion_point(field_mutable:PBDeadReckoningEngineConfig.bodyToSensorMountParams)
  return bodytosensormountparams_;
}
inline ::PBLIABodyToSensorMountParams* PBDeadReckoningEngineConfig::release_bodytosensormountparams() {
  // @@protoc_insertion_point(field_release:PBDeadReckoningEngineConfig.bodyToSensorMountParams)

  ::PBLIABodyToSensorMountParams* temp = bodytosensormountparams_;
  bodytosensormountparams_ = NULL;
  return temp;
}
inline void PBDeadReckoningEngineConfig::set_allocated_bodytosensormountparams(::PBLIABodyToSensorMountParams* bodytosensormountparams) {
  delete bodytosensormountparams_;
  bodytosensormountparams_ = bodytosensormountparams;
  if (bodytosensormountparams) {

  } else {

  }
  // @@protoc_insertion_point(field_set_allocated:PBDeadReckoningEngineConfig.bodyToSensorMountParams)
}

// float vehicleSpeedScaleFactor = 3;
inline void PBDeadReckoningEngineConfig::clear_vehiclespeedscalefactor() {
  vehiclespeedscalefactor_ = 0;
}
inline float PBDeadReckoningEngineConfig::vehiclespeedscalefactor() const {
  // @@protoc_insertion_point(field_get:PBDeadReckoningEngineConfig.vehicleSpeedScaleFactor)
  return vehiclespeedscalefactor_;
}
inline void PBDeadReckoningEngineConfig::set_vehiclespeedscalefactor(float value) {

  vehiclespeedscalefactor_ = value;
  // @@protoc_insertion_point(field_set:PBDeadReckoningEngineConfig.vehicleSpeedScaleFactor)
}

// float vehicleSpeedScaleFactorUnc = 4;
inline void PBDeadReckoningEngineConfig::clear_vehiclespeedscalefactorunc() {
  vehiclespeedscalefactorunc_ = 0;
}
inline float PBDeadReckoningEngineConfig::vehiclespeedscalefactorunc() const {
  // @@protoc_insertion_point(field_get:PBDeadReckoningEngineConfig.vehicleSpeedScaleFactorUnc)
  return vehiclespeedscalefactorunc_;
}
inline void PBDeadReckoningEngineConfig::set_vehiclespeedscalefactorunc(float value) {

  vehiclespeedscalefactorunc_ = value;
  // @@protoc_insertion_point(field_set:PBDeadReckoningEngineConfig.vehicleSpeedScaleFactorUnc)
}

// float gyroScaleFactor = 5;
inline void PBDeadReckoningEngineConfig::clear_gyroscalefactor() {
  gyroscalefactor_ = 0;
}
inline float PBDeadReckoningEngineConfig::gyroscalefactor() const {
  // @@protoc_insertion_point(field_get:PBDeadReckoningEngineConfig.gyroScaleFactor)
  return gyroscalefactor_;
}
inline void PBDeadReckoningEngineConfig::set_gyroscalefactor(float value) {

  gyroscalefactor_ = value;
  // @@protoc_insertion_point(field_set:PBDeadReckoningEngineConfig.gyroScaleFactor)
}

// float gyroScaleFactorUnc = 6;
inline void PBDeadReckoningEngineConfig::clear_gyroscalefactorunc() {
  gyroscalefactorunc_ = 0;
}
inline float PBDeadReckoningEngineConfig::gyroscalefactorunc() const {
  // @@protoc_insertion_point(field_get:PBDeadReckoningEngineConfig.gyroScaleFactorUnc)
  return gyroscalefactorunc_;
}
inline void PBDeadReckoningEngineConfig::set_gyroscalefactorunc(float value) {

  gyroscalefactorunc_ = value;
  // @@protoc_insertion_point(field_set:PBDeadReckoningEngineConfig.gyroScaleFactorUnc)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LocationApiDataTypesVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LocationApiDataTypesVersion>() {
  return ::LocationApiDataTypesVersion_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSuplMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSuplMode>() {
  return ::PBGnssSuplMode_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSignalTypeMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSignalTypeMask>() {
  return ::PBGnssSignalTypeMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocApiGnss_LocSvSystemEnumType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocApiGnss_LocSvSystemEnumType>() {
  return ::PBLocApiGnss_LocSvSystemEnumType_descriptor();
}
template <> struct is_proto_enum< ::PBLocApiOutputEngineType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocApiOutputEngineType>() {
  return ::PBLocApiOutputEngineType_descriptor();
}
template <> struct is_proto_enum< ::PBLocationReliability> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocationReliability>() {
  return ::PBLocationReliability_descriptor();
}
template <> struct is_proto_enum< ::PBGnssLocationInfoFlagMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssLocationInfoFlagMask>() {
  return ::PBGnssLocationInfoFlagMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssLocationNavSolutionMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssLocationNavSolutionMask>() {
  return ::PBGnssLocationNavSolutionMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssSvTypesMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssSvTypesMask>() {
  return ::PBGnssSvTypesMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocApiGnssSvOptionsMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocApiGnssSvOptionsMask>() {
  return ::PBLocApiGnssSvOptionsMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssGloTimeStructTypeFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssGloTimeStructTypeFlags>() {
  return ::PBGnssGloTimeStructTypeFlags_descriptor();
}
template <> struct is_proto_enum< ::PBGnssMeasurementsClockFlagsMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssMeasurementsClockFlagsMask>() {
  return ::PBGnssMeasurementsClockFlagsMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocApiGnssSystemTimeStructTypeFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocApiGnssSystemTimeStructTypeFlags>() {
  return ::PBLocApiGnssSystemTimeStructTypeFlags_descriptor();
}
template <> struct is_proto_enum< ::PBGnssConfigRobustLocationValidMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssConfigRobustLocationValidMask>() {
  return ::PBGnssConfigRobustLocationValidMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocationSystemInfoMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocationSystemInfoMask>() {
  return ::PBLocationSystemInfoMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocApiDrCalibrationStatusMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocApiDrCalibrationStatusMask>() {
  return ::PBLocApiDrCalibrationStatusMask_descriptor();
}
template <> struct is_proto_enum< ::PBLeapSecondSysInfoMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLeapSecondSysInfoMask>() {
  return ::PBLeapSecondSysInfoMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocApiGnssLocationPosDataMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocApiGnssLocationPosDataMask>() {
  return ::PBLocApiGnssLocationPosDataMask_descriptor();
}
template <> struct is_proto_enum< ::PBBatchingMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBBatchingMode>() {
  return ::PBBatchingMode_descriptor();
}
template <> struct is_proto_enum< ::PBBatchingStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBBatchingStatus>() {
  return ::PBBatchingStatus_descriptor();
}
template <> struct is_proto_enum< ::PBLocationError> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocationError>() {
  return ::PBLocationError_descriptor();
}
template <> struct is_proto_enum< ::PBLocReqEngineTypeMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocReqEngineTypeMask>() {
  return ::PBLocReqEngineTypeMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocApiPositioningEngineMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocApiPositioningEngineMask>() {
  return ::PBLocApiPositioningEngineMask_descriptor();
}
template <> struct is_proto_enum< ::PBDrEngineAidingDataMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDrEngineAidingDataMask>() {
  return ::PBDrEngineAidingDataMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssMeasurementsAdrStateMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssMeasurementsAdrStateMask>() {
  return ::PBGnssMeasurementsAdrStateMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssMeasurementsDataFlagsMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssMeasurementsDataFlagsMask>() {
  return ::PBGnssMeasurementsDataFlagsMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssMeasurementsStateMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssMeasurementsStateMask>() {
  return ::PBGnssMeasurementsStateMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssMeasurementsMultipathIndicator> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssMeasurementsMultipathIndicator>() {
  return ::PBGnssMeasurementsMultipathIndicator_descriptor();
}
template <> struct is_proto_enum< ::PBLocApiGnssAidingDataSvMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocApiGnssAidingDataSvMask>() {
  return ::PBLocApiGnssAidingDataSvMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocationFlagsMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocationFlagsMask>() {
  return ::PBLocationFlagsMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocationTechnologyMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocationTechnologyMask>() {
  return ::PBLocationTechnologyMask_descriptor();
}
template <> struct is_proto_enum< ::PBLocationCapabilitiesMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLocationCapabilitiesMask>() {
  return ::PBLocationCapabilitiesMask_descriptor();
}
template <> struct is_proto_enum< ::PBGnssDataMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBGnssDataMask>() {
  return ::PBGnssDataMask_descriptor();
}
template <> struct is_proto_enum< ::PBLIALeverArmTypeMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLIALeverArmTypeMask>() {
  return ::PBLIALeverArmTypeMask_descriptor();
}
template <> struct is_proto_enum< ::PBDrSolutionStatusMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDrSolutionStatusMask>() {
  return ::PBDrSolutionStatusMask_descriptor();
}
template <> struct is_proto_enum< ::PBDeadReckoningEngineConfigValidMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBDeadReckoningEngineConfigValidMask>() {
  return ::PBDeadReckoningEngineConfigValidMask_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LocationApiDataTypes_2eproto__INCLUDED
